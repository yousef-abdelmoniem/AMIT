
PWM_Drawer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000798a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000116  00800060  0000798a  00007a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  00800176  00800176  00007b34  2**0
                  ALLOC
  3 .stab         0000612c  00000000  00000000  00007b34  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001cd1  00000000  00000000  0000dc60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  0000f931  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b0  00000000  00000000  0000fab1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f47  00000000  00000000  0000fc61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010c7  00000000  00000000  00011ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f5b  00000000  00000000  00012c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  00013bcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002d2  00000000  00000000  00013d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009be  00000000  00000000  0001403e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000149fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 99 0d 	jmp	0x1b32	; 0x1b32 <__vector_1>
       8:	0c 94 cc 0d 	jmp	0x1b98	; 0x1b98 <__vector_2>
       c:	0c 94 ff 0d 	jmp	0x1bfe	; 0x1bfe <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e8       	ldi	r30, 0x8A	; 138
      68:	f9 e7       	ldi	r31, 0x79	; 121
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 3b       	cpi	r26, 0xB6	; 182
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 2c 3c 	call	0x7858	; 0x7858 <main>
      8a:	0c 94 c3 3c 	jmp	0x7986	; 0x7986 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__lshrdi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__lshrdi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__lshrdi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__lshrdi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	4d 81       	ldd	r20, Y+5	; 0x05
      e4:	5e 81       	ldd	r21, Y+6	; 0x06
      e6:	6f 81       	ldd	r22, Y+7	; 0x07
      e8:	78 85       	ldd	r23, Y+8	; 0x08
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__lshrdi3+0x7c>
      ee:	1d 86       	std	Y+13, r1	; 0x0d
      f0:	1e 86       	std	Y+14, r1	; 0x0e
      f2:	1f 86       	std	Y+15, r1	; 0x0f
      f4:	18 8a       	std	Y+16, r1	; 0x10
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__lshrdi3+0x76>
     100:	76 95       	lsr	r23
     102:	67 95       	ror	r22
     104:	57 95       	ror	r21
     106:	47 95       	ror	r20
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__lshrdi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__lshrdi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__lshrdi3+0x94>
     11e:	b6 95       	lsr	r27
     120:	a7 95       	ror	r26
     122:	97 95       	ror	r25
     124:	87 95       	ror	r24
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__lshrdi3+0x8c>
     12a:	8d 87       	std	Y+13, r24	; 0x0d
     12c:	9e 87       	std	Y+14, r25	; 0x0e
     12e:	af 87       	std	Y+15, r26	; 0x0f
     130:	b8 8b       	std	Y+16, r27	; 0x10
     132:	04 c0       	rjmp	.+8      	; 0x13c <__lshrdi3+0xaa>
     134:	44 0f       	add	r20, r20
     136:	55 1f       	adc	r21, r21
     138:	66 1f       	adc	r22, r22
     13a:	77 1f       	adc	r23, r23
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__lshrdi3+0xa2>
     140:	89 81       	ldd	r24, Y+1	; 0x01
     142:	9a 81       	ldd	r25, Y+2	; 0x02
     144:	ab 81       	ldd	r26, Y+3	; 0x03
     146:	bc 81       	ldd	r27, Y+4	; 0x04
     148:	04 c0       	rjmp	.+8      	; 0x152 <__lshrdi3+0xc0>
     14a:	b6 95       	lsr	r27
     14c:	a7 95       	ror	r26
     14e:	97 95       	ror	r25
     150:	87 95       	ror	r24
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__lshrdi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	49 87       	std	Y+9, r20	; 0x09
     160:	5a 87       	std	Y+10, r21	; 0x0a
     162:	6b 87       	std	Y+11, r22	; 0x0b
     164:	7c 87       	std	Y+12, r23	; 0x0c
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__ashldi3>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	df 93       	push	r29
     198:	cf 93       	push	r28
     19a:	cd b7       	in	r28, 0x3d	; 61
     19c:	de b7       	in	r29, 0x3e	; 62
     19e:	60 97       	sbiw	r28, 0x10	; 16
     1a0:	0f b6       	in	r0, 0x3f	; 63
     1a2:	f8 94       	cli
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	cd bf       	out	0x3d, r28	; 61
     1aa:	a8 2f       	mov	r26, r24
     1ac:	00 23       	and	r16, r16
     1ae:	09 f4       	brne	.+2      	; 0x1b2 <__ashldi3+0x22>
     1b0:	61 c0       	rjmp	.+194    	; 0x274 <__ashldi3+0xe4>
     1b2:	7e 01       	movw	r14, r28
     1b4:	08 94       	sec
     1b6:	e1 1c       	adc	r14, r1
     1b8:	f1 1c       	adc	r15, r1
     1ba:	88 e0       	ldi	r24, 0x08	; 8
     1bc:	f7 01       	movw	r30, r14
     1be:	11 92       	st	Z+, r1
     1c0:	8a 95       	dec	r24
     1c2:	e9 f7       	brne	.-6      	; 0x1be <__ashldi3+0x2e>
     1c4:	29 83       	std	Y+1, r18	; 0x01
     1c6:	3a 83       	std	Y+2, r19	; 0x02
     1c8:	4b 83       	std	Y+3, r20	; 0x03
     1ca:	5c 83       	std	Y+4, r21	; 0x04
     1cc:	6d 83       	std	Y+5, r22	; 0x05
     1ce:	7e 83       	std	Y+6, r23	; 0x06
     1d0:	af 83       	std	Y+7, r26	; 0x07
     1d2:	98 87       	std	Y+8, r25	; 0x08
     1d4:	80 e2       	ldi	r24, 0x20	; 32
     1d6:	80 1b       	sub	r24, r16
     1d8:	e8 2f       	mov	r30, r24
     1da:	ff 27       	eor	r31, r31
     1dc:	e7 fd       	sbrc	r30, 7
     1de:	f0 95       	com	r31
     1e0:	49 81       	ldd	r20, Y+1	; 0x01
     1e2:	5a 81       	ldd	r21, Y+2	; 0x02
     1e4:	6b 81       	ldd	r22, Y+3	; 0x03
     1e6:	7c 81       	ldd	r23, Y+4	; 0x04
     1e8:	18 16       	cp	r1, r24
     1ea:	84 f0       	brlt	.+32     	; 0x20c <__ashldi3+0x7c>
     1ec:	19 86       	std	Y+9, r1	; 0x09
     1ee:	1a 86       	std	Y+10, r1	; 0x0a
     1f0:	1b 86       	std	Y+11, r1	; 0x0b
     1f2:	1c 86       	std	Y+12, r1	; 0x0c
     1f4:	88 27       	eor	r24, r24
     1f6:	99 27       	eor	r25, r25
     1f8:	8e 1b       	sub	r24, r30
     1fa:	9f 0b       	sbc	r25, r31
     1fc:	04 c0       	rjmp	.+8      	; 0x206 <__ashldi3+0x76>
     1fe:	44 0f       	add	r20, r20
     200:	55 1f       	adc	r21, r21
     202:	66 1f       	adc	r22, r22
     204:	77 1f       	adc	r23, r23
     206:	8a 95       	dec	r24
     208:	d2 f7       	brpl	.-12     	; 0x1fe <__ashldi3+0x6e>
     20a:	28 c0       	rjmp	.+80     	; 0x25c <__ashldi3+0xcc>
     20c:	20 2f       	mov	r18, r16
     20e:	33 27       	eor	r19, r19
     210:	27 fd       	sbrc	r18, 7
     212:	30 95       	com	r19
     214:	db 01       	movw	r26, r22
     216:	ca 01       	movw	r24, r20
     218:	02 2e       	mov	r0, r18
     21a:	04 c0       	rjmp	.+8      	; 0x224 <__ashldi3+0x94>
     21c:	88 0f       	add	r24, r24
     21e:	99 1f       	adc	r25, r25
     220:	aa 1f       	adc	r26, r26
     222:	bb 1f       	adc	r27, r27
     224:	0a 94       	dec	r0
     226:	d2 f7       	brpl	.-12     	; 0x21c <__ashldi3+0x8c>
     228:	89 87       	std	Y+9, r24	; 0x09
     22a:	9a 87       	std	Y+10, r25	; 0x0a
     22c:	ab 87       	std	Y+11, r26	; 0x0b
     22e:	bc 87       	std	Y+12, r27	; 0x0c
     230:	04 c0       	rjmp	.+8      	; 0x23a <__ashldi3+0xaa>
     232:	76 95       	lsr	r23
     234:	67 95       	ror	r22
     236:	57 95       	ror	r21
     238:	47 95       	ror	r20
     23a:	ea 95       	dec	r30
     23c:	d2 f7       	brpl	.-12     	; 0x232 <__ashldi3+0xa2>
     23e:	8d 81       	ldd	r24, Y+5	; 0x05
     240:	9e 81       	ldd	r25, Y+6	; 0x06
     242:	af 81       	ldd	r26, Y+7	; 0x07
     244:	b8 85       	ldd	r27, Y+8	; 0x08
     246:	04 c0       	rjmp	.+8      	; 0x250 <__ashldi3+0xc0>
     248:	88 0f       	add	r24, r24
     24a:	99 1f       	adc	r25, r25
     24c:	aa 1f       	adc	r26, r26
     24e:	bb 1f       	adc	r27, r27
     250:	2a 95       	dec	r18
     252:	d2 f7       	brpl	.-12     	; 0x248 <__ashldi3+0xb8>
     254:	48 2b       	or	r20, r24
     256:	59 2b       	or	r21, r25
     258:	6a 2b       	or	r22, r26
     25a:	7b 2b       	or	r23, r27
     25c:	4d 87       	std	Y+13, r20	; 0x0d
     25e:	5e 87       	std	Y+14, r21	; 0x0e
     260:	6f 87       	std	Y+15, r22	; 0x0f
     262:	78 8b       	std	Y+16, r23	; 0x10
     264:	29 85       	ldd	r18, Y+9	; 0x09
     266:	3a 85       	ldd	r19, Y+10	; 0x0a
     268:	4b 85       	ldd	r20, Y+11	; 0x0b
     26a:	5c 85       	ldd	r21, Y+12	; 0x0c
     26c:	6d 85       	ldd	r22, Y+13	; 0x0d
     26e:	7e 85       	ldd	r23, Y+14	; 0x0e
     270:	af 85       	ldd	r26, Y+15	; 0x0f
     272:	98 89       	ldd	r25, Y+16	; 0x10
     274:	8a 2f       	mov	r24, r26
     276:	60 96       	adiw	r28, 0x10	; 16
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	de bf       	out	0x3e, r29	; 62
     27e:	0f be       	out	0x3f, r0	; 63
     280:	cd bf       	out	0x3d, r28	; 61
     282:	cf 91       	pop	r28
     284:	df 91       	pop	r29
     286:	0f 91       	pop	r16
     288:	ff 90       	pop	r15
     28a:	ef 90       	pop	r14
     28c:	08 95       	ret

0000028e <__fixunssfsi>:
     28e:	ef 92       	push	r14
     290:	ff 92       	push	r15
     292:	0f 93       	push	r16
     294:	1f 93       	push	r17
     296:	7b 01       	movw	r14, r22
     298:	8c 01       	movw	r16, r24
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	40 e0       	ldi	r20, 0x00	; 0
     2a0:	5f e4       	ldi	r21, 0x4F	; 79
     2a2:	0e 94 47 04 	call	0x88e	; 0x88e <__gesf2>
     2a6:	88 23       	and	r24, r24
     2a8:	8c f0       	brlt	.+34     	; 0x2cc <__fixunssfsi+0x3e>
     2aa:	c8 01       	movw	r24, r16
     2ac:	b7 01       	movw	r22, r14
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	40 e0       	ldi	r20, 0x00	; 0
     2b4:	5f e4       	ldi	r21, 0x4F	; 79
     2b6:	0e 94 bf 02 	call	0x57e	; 0x57e <__subsf3>
     2ba:	0e 94 a7 04 	call	0x94e	; 0x94e <__fixsfsi>
     2be:	9b 01       	movw	r18, r22
     2c0:	ac 01       	movw	r20, r24
     2c2:	20 50       	subi	r18, 0x00	; 0
     2c4:	30 40       	sbci	r19, 0x00	; 0
     2c6:	40 40       	sbci	r20, 0x00	; 0
     2c8:	50 48       	sbci	r21, 0x80	; 128
     2ca:	06 c0       	rjmp	.+12     	; 0x2d8 <__fixunssfsi+0x4a>
     2cc:	c8 01       	movw	r24, r16
     2ce:	b7 01       	movw	r22, r14
     2d0:	0e 94 a7 04 	call	0x94e	; 0x94e <__fixsfsi>
     2d4:	9b 01       	movw	r18, r22
     2d6:	ac 01       	movw	r20, r24
     2d8:	b9 01       	movw	r22, r18
     2da:	ca 01       	movw	r24, r20
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	ff 90       	pop	r15
     2e2:	ef 90       	pop	r14
     2e4:	08 95       	ret

000002e6 <_fpadd_parts>:
     2e6:	a0 e0       	ldi	r26, 0x00	; 0
     2e8:	b0 e0       	ldi	r27, 0x00	; 0
     2ea:	e9 e7       	ldi	r30, 0x79	; 121
     2ec:	f1 e0       	ldi	r31, 0x01	; 1
     2ee:	0c 94 8c 3c 	jmp	0x7918	; 0x7918 <__prologue_saves__>
     2f2:	dc 01       	movw	r26, r24
     2f4:	2b 01       	movw	r4, r22
     2f6:	fa 01       	movw	r30, r20
     2f8:	9c 91       	ld	r25, X
     2fa:	92 30       	cpi	r25, 0x02	; 2
     2fc:	08 f4       	brcc	.+2      	; 0x300 <_fpadd_parts+0x1a>
     2fe:	39 c1       	rjmp	.+626    	; 0x572 <_fpadd_parts+0x28c>
     300:	eb 01       	movw	r28, r22
     302:	88 81       	ld	r24, Y
     304:	82 30       	cpi	r24, 0x02	; 2
     306:	08 f4       	brcc	.+2      	; 0x30a <_fpadd_parts+0x24>
     308:	33 c1       	rjmp	.+614    	; 0x570 <_fpadd_parts+0x28a>
     30a:	94 30       	cpi	r25, 0x04	; 4
     30c:	69 f4       	brne	.+26     	; 0x328 <_fpadd_parts+0x42>
     30e:	84 30       	cpi	r24, 0x04	; 4
     310:	09 f0       	breq	.+2      	; 0x314 <_fpadd_parts+0x2e>
     312:	2f c1       	rjmp	.+606    	; 0x572 <_fpadd_parts+0x28c>
     314:	11 96       	adiw	r26, 0x01	; 1
     316:	9c 91       	ld	r25, X
     318:	11 97       	sbiw	r26, 0x01	; 1
     31a:	89 81       	ldd	r24, Y+1	; 0x01
     31c:	98 17       	cp	r25, r24
     31e:	09 f4       	brne	.+2      	; 0x322 <_fpadd_parts+0x3c>
     320:	28 c1       	rjmp	.+592    	; 0x572 <_fpadd_parts+0x28c>
     322:	a9 eb       	ldi	r26, 0xB9	; 185
     324:	b0 e0       	ldi	r27, 0x00	; 0
     326:	25 c1       	rjmp	.+586    	; 0x572 <_fpadd_parts+0x28c>
     328:	84 30       	cpi	r24, 0x04	; 4
     32a:	09 f4       	brne	.+2      	; 0x32e <_fpadd_parts+0x48>
     32c:	21 c1       	rjmp	.+578    	; 0x570 <_fpadd_parts+0x28a>
     32e:	82 30       	cpi	r24, 0x02	; 2
     330:	a9 f4       	brne	.+42     	; 0x35c <_fpadd_parts+0x76>
     332:	92 30       	cpi	r25, 0x02	; 2
     334:	09 f0       	breq	.+2      	; 0x338 <_fpadd_parts+0x52>
     336:	1d c1       	rjmp	.+570    	; 0x572 <_fpadd_parts+0x28c>
     338:	9a 01       	movw	r18, r20
     33a:	ad 01       	movw	r20, r26
     33c:	88 e0       	ldi	r24, 0x08	; 8
     33e:	ea 01       	movw	r28, r20
     340:	09 90       	ld	r0, Y+
     342:	ae 01       	movw	r20, r28
     344:	e9 01       	movw	r28, r18
     346:	09 92       	st	Y+, r0
     348:	9e 01       	movw	r18, r28
     34a:	81 50       	subi	r24, 0x01	; 1
     34c:	c1 f7       	brne	.-16     	; 0x33e <_fpadd_parts+0x58>
     34e:	e2 01       	movw	r28, r4
     350:	89 81       	ldd	r24, Y+1	; 0x01
     352:	11 96       	adiw	r26, 0x01	; 1
     354:	9c 91       	ld	r25, X
     356:	89 23       	and	r24, r25
     358:	81 83       	std	Z+1, r24	; 0x01
     35a:	08 c1       	rjmp	.+528    	; 0x56c <_fpadd_parts+0x286>
     35c:	92 30       	cpi	r25, 0x02	; 2
     35e:	09 f4       	brne	.+2      	; 0x362 <_fpadd_parts+0x7c>
     360:	07 c1       	rjmp	.+526    	; 0x570 <_fpadd_parts+0x28a>
     362:	12 96       	adiw	r26, 0x02	; 2
     364:	2d 90       	ld	r2, X+
     366:	3c 90       	ld	r3, X
     368:	13 97       	sbiw	r26, 0x03	; 3
     36a:	eb 01       	movw	r28, r22
     36c:	8a 81       	ldd	r24, Y+2	; 0x02
     36e:	9b 81       	ldd	r25, Y+3	; 0x03
     370:	14 96       	adiw	r26, 0x04	; 4
     372:	ad 90       	ld	r10, X+
     374:	bd 90       	ld	r11, X+
     376:	cd 90       	ld	r12, X+
     378:	dc 90       	ld	r13, X
     37a:	17 97       	sbiw	r26, 0x07	; 7
     37c:	ec 80       	ldd	r14, Y+4	; 0x04
     37e:	fd 80       	ldd	r15, Y+5	; 0x05
     380:	0e 81       	ldd	r16, Y+6	; 0x06
     382:	1f 81       	ldd	r17, Y+7	; 0x07
     384:	91 01       	movw	r18, r2
     386:	28 1b       	sub	r18, r24
     388:	39 0b       	sbc	r19, r25
     38a:	b9 01       	movw	r22, r18
     38c:	37 ff       	sbrs	r19, 7
     38e:	04 c0       	rjmp	.+8      	; 0x398 <_fpadd_parts+0xb2>
     390:	66 27       	eor	r22, r22
     392:	77 27       	eor	r23, r23
     394:	62 1b       	sub	r22, r18
     396:	73 0b       	sbc	r23, r19
     398:	60 32       	cpi	r22, 0x20	; 32
     39a:	71 05       	cpc	r23, r1
     39c:	0c f0       	brlt	.+2      	; 0x3a0 <_fpadd_parts+0xba>
     39e:	61 c0       	rjmp	.+194    	; 0x462 <_fpadd_parts+0x17c>
     3a0:	12 16       	cp	r1, r18
     3a2:	13 06       	cpc	r1, r19
     3a4:	6c f5       	brge	.+90     	; 0x400 <_fpadd_parts+0x11a>
     3a6:	37 01       	movw	r6, r14
     3a8:	48 01       	movw	r8, r16
     3aa:	06 2e       	mov	r0, r22
     3ac:	04 c0       	rjmp	.+8      	; 0x3b6 <_fpadd_parts+0xd0>
     3ae:	96 94       	lsr	r9
     3b0:	87 94       	ror	r8
     3b2:	77 94       	ror	r7
     3b4:	67 94       	ror	r6
     3b6:	0a 94       	dec	r0
     3b8:	d2 f7       	brpl	.-12     	; 0x3ae <_fpadd_parts+0xc8>
     3ba:	21 e0       	ldi	r18, 0x01	; 1
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	40 e0       	ldi	r20, 0x00	; 0
     3c0:	50 e0       	ldi	r21, 0x00	; 0
     3c2:	04 c0       	rjmp	.+8      	; 0x3cc <_fpadd_parts+0xe6>
     3c4:	22 0f       	add	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	44 1f       	adc	r20, r20
     3ca:	55 1f       	adc	r21, r21
     3cc:	6a 95       	dec	r22
     3ce:	d2 f7       	brpl	.-12     	; 0x3c4 <_fpadd_parts+0xde>
     3d0:	21 50       	subi	r18, 0x01	; 1
     3d2:	30 40       	sbci	r19, 0x00	; 0
     3d4:	40 40       	sbci	r20, 0x00	; 0
     3d6:	50 40       	sbci	r21, 0x00	; 0
     3d8:	2e 21       	and	r18, r14
     3da:	3f 21       	and	r19, r15
     3dc:	40 23       	and	r20, r16
     3de:	51 23       	and	r21, r17
     3e0:	21 15       	cp	r18, r1
     3e2:	31 05       	cpc	r19, r1
     3e4:	41 05       	cpc	r20, r1
     3e6:	51 05       	cpc	r21, r1
     3e8:	21 f0       	breq	.+8      	; 0x3f2 <_fpadd_parts+0x10c>
     3ea:	21 e0       	ldi	r18, 0x01	; 1
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	40 e0       	ldi	r20, 0x00	; 0
     3f0:	50 e0       	ldi	r21, 0x00	; 0
     3f2:	79 01       	movw	r14, r18
     3f4:	8a 01       	movw	r16, r20
     3f6:	e6 28       	or	r14, r6
     3f8:	f7 28       	or	r15, r7
     3fa:	08 29       	or	r16, r8
     3fc:	19 29       	or	r17, r9
     3fe:	3c c0       	rjmp	.+120    	; 0x478 <_fpadd_parts+0x192>
     400:	23 2b       	or	r18, r19
     402:	d1 f1       	breq	.+116    	; 0x478 <_fpadd_parts+0x192>
     404:	26 0e       	add	r2, r22
     406:	37 1e       	adc	r3, r23
     408:	35 01       	movw	r6, r10
     40a:	46 01       	movw	r8, r12
     40c:	06 2e       	mov	r0, r22
     40e:	04 c0       	rjmp	.+8      	; 0x418 <_fpadd_parts+0x132>
     410:	96 94       	lsr	r9
     412:	87 94       	ror	r8
     414:	77 94       	ror	r7
     416:	67 94       	ror	r6
     418:	0a 94       	dec	r0
     41a:	d2 f7       	brpl	.-12     	; 0x410 <_fpadd_parts+0x12a>
     41c:	21 e0       	ldi	r18, 0x01	; 1
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	40 e0       	ldi	r20, 0x00	; 0
     422:	50 e0       	ldi	r21, 0x00	; 0
     424:	04 c0       	rjmp	.+8      	; 0x42e <_fpadd_parts+0x148>
     426:	22 0f       	add	r18, r18
     428:	33 1f       	adc	r19, r19
     42a:	44 1f       	adc	r20, r20
     42c:	55 1f       	adc	r21, r21
     42e:	6a 95       	dec	r22
     430:	d2 f7       	brpl	.-12     	; 0x426 <_fpadd_parts+0x140>
     432:	21 50       	subi	r18, 0x01	; 1
     434:	30 40       	sbci	r19, 0x00	; 0
     436:	40 40       	sbci	r20, 0x00	; 0
     438:	50 40       	sbci	r21, 0x00	; 0
     43a:	2a 21       	and	r18, r10
     43c:	3b 21       	and	r19, r11
     43e:	4c 21       	and	r20, r12
     440:	5d 21       	and	r21, r13
     442:	21 15       	cp	r18, r1
     444:	31 05       	cpc	r19, r1
     446:	41 05       	cpc	r20, r1
     448:	51 05       	cpc	r21, r1
     44a:	21 f0       	breq	.+8      	; 0x454 <_fpadd_parts+0x16e>
     44c:	21 e0       	ldi	r18, 0x01	; 1
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	50 e0       	ldi	r21, 0x00	; 0
     454:	59 01       	movw	r10, r18
     456:	6a 01       	movw	r12, r20
     458:	a6 28       	or	r10, r6
     45a:	b7 28       	or	r11, r7
     45c:	c8 28       	or	r12, r8
     45e:	d9 28       	or	r13, r9
     460:	0b c0       	rjmp	.+22     	; 0x478 <_fpadd_parts+0x192>
     462:	82 15       	cp	r24, r2
     464:	93 05       	cpc	r25, r3
     466:	2c f0       	brlt	.+10     	; 0x472 <_fpadd_parts+0x18c>
     468:	1c 01       	movw	r2, r24
     46a:	aa 24       	eor	r10, r10
     46c:	bb 24       	eor	r11, r11
     46e:	65 01       	movw	r12, r10
     470:	03 c0       	rjmp	.+6      	; 0x478 <_fpadd_parts+0x192>
     472:	ee 24       	eor	r14, r14
     474:	ff 24       	eor	r15, r15
     476:	87 01       	movw	r16, r14
     478:	11 96       	adiw	r26, 0x01	; 1
     47a:	9c 91       	ld	r25, X
     47c:	d2 01       	movw	r26, r4
     47e:	11 96       	adiw	r26, 0x01	; 1
     480:	8c 91       	ld	r24, X
     482:	98 17       	cp	r25, r24
     484:	09 f4       	brne	.+2      	; 0x488 <_fpadd_parts+0x1a2>
     486:	45 c0       	rjmp	.+138    	; 0x512 <_fpadd_parts+0x22c>
     488:	99 23       	and	r25, r25
     48a:	39 f0       	breq	.+14     	; 0x49a <_fpadd_parts+0x1b4>
     48c:	a8 01       	movw	r20, r16
     48e:	97 01       	movw	r18, r14
     490:	2a 19       	sub	r18, r10
     492:	3b 09       	sbc	r19, r11
     494:	4c 09       	sbc	r20, r12
     496:	5d 09       	sbc	r21, r13
     498:	06 c0       	rjmp	.+12     	; 0x4a6 <_fpadd_parts+0x1c0>
     49a:	a6 01       	movw	r20, r12
     49c:	95 01       	movw	r18, r10
     49e:	2e 19       	sub	r18, r14
     4a0:	3f 09       	sbc	r19, r15
     4a2:	40 0b       	sbc	r20, r16
     4a4:	51 0b       	sbc	r21, r17
     4a6:	57 fd       	sbrc	r21, 7
     4a8:	08 c0       	rjmp	.+16     	; 0x4ba <_fpadd_parts+0x1d4>
     4aa:	11 82       	std	Z+1, r1	; 0x01
     4ac:	33 82       	std	Z+3, r3	; 0x03
     4ae:	22 82       	std	Z+2, r2	; 0x02
     4b0:	24 83       	std	Z+4, r18	; 0x04
     4b2:	35 83       	std	Z+5, r19	; 0x05
     4b4:	46 83       	std	Z+6, r20	; 0x06
     4b6:	57 83       	std	Z+7, r21	; 0x07
     4b8:	1d c0       	rjmp	.+58     	; 0x4f4 <_fpadd_parts+0x20e>
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	81 83       	std	Z+1, r24	; 0x01
     4be:	33 82       	std	Z+3, r3	; 0x03
     4c0:	22 82       	std	Z+2, r2	; 0x02
     4c2:	88 27       	eor	r24, r24
     4c4:	99 27       	eor	r25, r25
     4c6:	dc 01       	movw	r26, r24
     4c8:	82 1b       	sub	r24, r18
     4ca:	93 0b       	sbc	r25, r19
     4cc:	a4 0b       	sbc	r26, r20
     4ce:	b5 0b       	sbc	r27, r21
     4d0:	84 83       	std	Z+4, r24	; 0x04
     4d2:	95 83       	std	Z+5, r25	; 0x05
     4d4:	a6 83       	std	Z+6, r26	; 0x06
     4d6:	b7 83       	std	Z+7, r27	; 0x07
     4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <_fpadd_parts+0x20e>
     4da:	22 0f       	add	r18, r18
     4dc:	33 1f       	adc	r19, r19
     4de:	44 1f       	adc	r20, r20
     4e0:	55 1f       	adc	r21, r21
     4e2:	24 83       	std	Z+4, r18	; 0x04
     4e4:	35 83       	std	Z+5, r19	; 0x05
     4e6:	46 83       	std	Z+6, r20	; 0x06
     4e8:	57 83       	std	Z+7, r21	; 0x07
     4ea:	82 81       	ldd	r24, Z+2	; 0x02
     4ec:	93 81       	ldd	r25, Z+3	; 0x03
     4ee:	01 97       	sbiw	r24, 0x01	; 1
     4f0:	93 83       	std	Z+3, r25	; 0x03
     4f2:	82 83       	std	Z+2, r24	; 0x02
     4f4:	24 81       	ldd	r18, Z+4	; 0x04
     4f6:	35 81       	ldd	r19, Z+5	; 0x05
     4f8:	46 81       	ldd	r20, Z+6	; 0x06
     4fa:	57 81       	ldd	r21, Z+7	; 0x07
     4fc:	da 01       	movw	r26, r20
     4fe:	c9 01       	movw	r24, r18
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	a1 09       	sbc	r26, r1
     504:	b1 09       	sbc	r27, r1
     506:	8f 5f       	subi	r24, 0xFF	; 255
     508:	9f 4f       	sbci	r25, 0xFF	; 255
     50a:	af 4f       	sbci	r26, 0xFF	; 255
     50c:	bf 43       	sbci	r27, 0x3F	; 63
     50e:	28 f3       	brcs	.-54     	; 0x4da <_fpadd_parts+0x1f4>
     510:	0b c0       	rjmp	.+22     	; 0x528 <_fpadd_parts+0x242>
     512:	91 83       	std	Z+1, r25	; 0x01
     514:	33 82       	std	Z+3, r3	; 0x03
     516:	22 82       	std	Z+2, r2	; 0x02
     518:	ea 0c       	add	r14, r10
     51a:	fb 1c       	adc	r15, r11
     51c:	0c 1d       	adc	r16, r12
     51e:	1d 1d       	adc	r17, r13
     520:	e4 82       	std	Z+4, r14	; 0x04
     522:	f5 82       	std	Z+5, r15	; 0x05
     524:	06 83       	std	Z+6, r16	; 0x06
     526:	17 83       	std	Z+7, r17	; 0x07
     528:	83 e0       	ldi	r24, 0x03	; 3
     52a:	80 83       	st	Z, r24
     52c:	24 81       	ldd	r18, Z+4	; 0x04
     52e:	35 81       	ldd	r19, Z+5	; 0x05
     530:	46 81       	ldd	r20, Z+6	; 0x06
     532:	57 81       	ldd	r21, Z+7	; 0x07
     534:	57 ff       	sbrs	r21, 7
     536:	1a c0       	rjmp	.+52     	; 0x56c <_fpadd_parts+0x286>
     538:	c9 01       	movw	r24, r18
     53a:	aa 27       	eor	r26, r26
     53c:	97 fd       	sbrc	r25, 7
     53e:	a0 95       	com	r26
     540:	ba 2f       	mov	r27, r26
     542:	81 70       	andi	r24, 0x01	; 1
     544:	90 70       	andi	r25, 0x00	; 0
     546:	a0 70       	andi	r26, 0x00	; 0
     548:	b0 70       	andi	r27, 0x00	; 0
     54a:	56 95       	lsr	r21
     54c:	47 95       	ror	r20
     54e:	37 95       	ror	r19
     550:	27 95       	ror	r18
     552:	82 2b       	or	r24, r18
     554:	93 2b       	or	r25, r19
     556:	a4 2b       	or	r26, r20
     558:	b5 2b       	or	r27, r21
     55a:	84 83       	std	Z+4, r24	; 0x04
     55c:	95 83       	std	Z+5, r25	; 0x05
     55e:	a6 83       	std	Z+6, r26	; 0x06
     560:	b7 83       	std	Z+7, r27	; 0x07
     562:	82 81       	ldd	r24, Z+2	; 0x02
     564:	93 81       	ldd	r25, Z+3	; 0x03
     566:	01 96       	adiw	r24, 0x01	; 1
     568:	93 83       	std	Z+3, r25	; 0x03
     56a:	82 83       	std	Z+2, r24	; 0x02
     56c:	df 01       	movw	r26, r30
     56e:	01 c0       	rjmp	.+2      	; 0x572 <_fpadd_parts+0x28c>
     570:	d2 01       	movw	r26, r4
     572:	cd 01       	movw	r24, r26
     574:	cd b7       	in	r28, 0x3d	; 61
     576:	de b7       	in	r29, 0x3e	; 62
     578:	e2 e1       	ldi	r30, 0x12	; 18
     57a:	0c 94 a8 3c 	jmp	0x7950	; 0x7950 <__epilogue_restores__>

0000057e <__subsf3>:
     57e:	a0 e2       	ldi	r26, 0x20	; 32
     580:	b0 e0       	ldi	r27, 0x00	; 0
     582:	e5 ec       	ldi	r30, 0xC5	; 197
     584:	f2 e0       	ldi	r31, 0x02	; 2
     586:	0c 94 98 3c 	jmp	0x7930	; 0x7930 <__prologue_saves__+0x18>
     58a:	69 83       	std	Y+1, r22	; 0x01
     58c:	7a 83       	std	Y+2, r23	; 0x02
     58e:	8b 83       	std	Y+3, r24	; 0x03
     590:	9c 83       	std	Y+4, r25	; 0x04
     592:	2d 83       	std	Y+5, r18	; 0x05
     594:	3e 83       	std	Y+6, r19	; 0x06
     596:	4f 83       	std	Y+7, r20	; 0x07
     598:	58 87       	std	Y+8, r21	; 0x08
     59a:	e9 e0       	ldi	r30, 0x09	; 9
     59c:	ee 2e       	mov	r14, r30
     59e:	f1 2c       	mov	r15, r1
     5a0:	ec 0e       	add	r14, r28
     5a2:	fd 1e       	adc	r15, r29
     5a4:	ce 01       	movw	r24, r28
     5a6:	01 96       	adiw	r24, 0x01	; 1
     5a8:	b7 01       	movw	r22, r14
     5aa:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     5ae:	8e 01       	movw	r16, r28
     5b0:	0f 5e       	subi	r16, 0xEF	; 239
     5b2:	1f 4f       	sbci	r17, 0xFF	; 255
     5b4:	ce 01       	movw	r24, r28
     5b6:	05 96       	adiw	r24, 0x05	; 5
     5b8:	b8 01       	movw	r22, r16
     5ba:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     5be:	8a 89       	ldd	r24, Y+18	; 0x12
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	89 27       	eor	r24, r25
     5c4:	8a 8b       	std	Y+18, r24	; 0x12
     5c6:	c7 01       	movw	r24, r14
     5c8:	b8 01       	movw	r22, r16
     5ca:	ae 01       	movw	r20, r28
     5cc:	47 5e       	subi	r20, 0xE7	; 231
     5ce:	5f 4f       	sbci	r21, 0xFF	; 255
     5d0:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_fpadd_parts>
     5d4:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__pack_f>
     5d8:	a0 96       	adiw	r28, 0x20	; 32
     5da:	e6 e0       	ldi	r30, 0x06	; 6
     5dc:	0c 94 b4 3c 	jmp	0x7968	; 0x7968 <__epilogue_restores__+0x18>

000005e0 <__addsf3>:
     5e0:	a0 e2       	ldi	r26, 0x20	; 32
     5e2:	b0 e0       	ldi	r27, 0x00	; 0
     5e4:	e6 ef       	ldi	r30, 0xF6	; 246
     5e6:	f2 e0       	ldi	r31, 0x02	; 2
     5e8:	0c 94 98 3c 	jmp	0x7930	; 0x7930 <__prologue_saves__+0x18>
     5ec:	69 83       	std	Y+1, r22	; 0x01
     5ee:	7a 83       	std	Y+2, r23	; 0x02
     5f0:	8b 83       	std	Y+3, r24	; 0x03
     5f2:	9c 83       	std	Y+4, r25	; 0x04
     5f4:	2d 83       	std	Y+5, r18	; 0x05
     5f6:	3e 83       	std	Y+6, r19	; 0x06
     5f8:	4f 83       	std	Y+7, r20	; 0x07
     5fa:	58 87       	std	Y+8, r21	; 0x08
     5fc:	f9 e0       	ldi	r31, 0x09	; 9
     5fe:	ef 2e       	mov	r14, r31
     600:	f1 2c       	mov	r15, r1
     602:	ec 0e       	add	r14, r28
     604:	fd 1e       	adc	r15, r29
     606:	ce 01       	movw	r24, r28
     608:	01 96       	adiw	r24, 0x01	; 1
     60a:	b7 01       	movw	r22, r14
     60c:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     610:	8e 01       	movw	r16, r28
     612:	0f 5e       	subi	r16, 0xEF	; 239
     614:	1f 4f       	sbci	r17, 0xFF	; 255
     616:	ce 01       	movw	r24, r28
     618:	05 96       	adiw	r24, 0x05	; 5
     61a:	b8 01       	movw	r22, r16
     61c:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     620:	c7 01       	movw	r24, r14
     622:	b8 01       	movw	r22, r16
     624:	ae 01       	movw	r20, r28
     626:	47 5e       	subi	r20, 0xE7	; 231
     628:	5f 4f       	sbci	r21, 0xFF	; 255
     62a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_fpadd_parts>
     62e:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__pack_f>
     632:	a0 96       	adiw	r28, 0x20	; 32
     634:	e6 e0       	ldi	r30, 0x06	; 6
     636:	0c 94 b4 3c 	jmp	0x7968	; 0x7968 <__epilogue_restores__+0x18>

0000063a <__mulsf3>:
     63a:	a0 e2       	ldi	r26, 0x20	; 32
     63c:	b0 e0       	ldi	r27, 0x00	; 0
     63e:	e3 e2       	ldi	r30, 0x23	; 35
     640:	f3 e0       	ldi	r31, 0x03	; 3
     642:	0c 94 8c 3c 	jmp	0x7918	; 0x7918 <__prologue_saves__>
     646:	69 83       	std	Y+1, r22	; 0x01
     648:	7a 83       	std	Y+2, r23	; 0x02
     64a:	8b 83       	std	Y+3, r24	; 0x03
     64c:	9c 83       	std	Y+4, r25	; 0x04
     64e:	2d 83       	std	Y+5, r18	; 0x05
     650:	3e 83       	std	Y+6, r19	; 0x06
     652:	4f 83       	std	Y+7, r20	; 0x07
     654:	58 87       	std	Y+8, r21	; 0x08
     656:	ce 01       	movw	r24, r28
     658:	01 96       	adiw	r24, 0x01	; 1
     65a:	be 01       	movw	r22, r28
     65c:	67 5f       	subi	r22, 0xF7	; 247
     65e:	7f 4f       	sbci	r23, 0xFF	; 255
     660:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     664:	ce 01       	movw	r24, r28
     666:	05 96       	adiw	r24, 0x05	; 5
     668:	be 01       	movw	r22, r28
     66a:	6f 5e       	subi	r22, 0xEF	; 239
     66c:	7f 4f       	sbci	r23, 0xFF	; 255
     66e:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     672:	99 85       	ldd	r25, Y+9	; 0x09
     674:	92 30       	cpi	r25, 0x02	; 2
     676:	88 f0       	brcs	.+34     	; 0x69a <__mulsf3+0x60>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	c8 f0       	brcs	.+50     	; 0x6b0 <__mulsf3+0x76>
     67e:	94 30       	cpi	r25, 0x04	; 4
     680:	19 f4       	brne	.+6      	; 0x688 <__mulsf3+0x4e>
     682:	82 30       	cpi	r24, 0x02	; 2
     684:	51 f4       	brne	.+20     	; 0x69a <__mulsf3+0x60>
     686:	04 c0       	rjmp	.+8      	; 0x690 <__mulsf3+0x56>
     688:	84 30       	cpi	r24, 0x04	; 4
     68a:	29 f4       	brne	.+10     	; 0x696 <__mulsf3+0x5c>
     68c:	92 30       	cpi	r25, 0x02	; 2
     68e:	81 f4       	brne	.+32     	; 0x6b0 <__mulsf3+0x76>
     690:	89 eb       	ldi	r24, 0xB9	; 185
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	c6 c0       	rjmp	.+396    	; 0x822 <__mulsf3+0x1e8>
     696:	92 30       	cpi	r25, 0x02	; 2
     698:	49 f4       	brne	.+18     	; 0x6ac <__mulsf3+0x72>
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	9a 85       	ldd	r25, Y+10	; 0x0a
     69e:	8a 89       	ldd	r24, Y+18	; 0x12
     6a0:	98 13       	cpse	r25, r24
     6a2:	21 e0       	ldi	r18, 0x01	; 1
     6a4:	2a 87       	std	Y+10, r18	; 0x0a
     6a6:	ce 01       	movw	r24, r28
     6a8:	09 96       	adiw	r24, 0x09	; 9
     6aa:	bb c0       	rjmp	.+374    	; 0x822 <__mulsf3+0x1e8>
     6ac:	82 30       	cpi	r24, 0x02	; 2
     6ae:	49 f4       	brne	.+18     	; 0x6c2 <__mulsf3+0x88>
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     6b4:	8a 89       	ldd	r24, Y+18	; 0x12
     6b6:	98 13       	cpse	r25, r24
     6b8:	21 e0       	ldi	r18, 0x01	; 1
     6ba:	2a 8b       	std	Y+18, r18	; 0x12
     6bc:	ce 01       	movw	r24, r28
     6be:	41 96       	adiw	r24, 0x11	; 17
     6c0:	b0 c0       	rjmp	.+352    	; 0x822 <__mulsf3+0x1e8>
     6c2:	2d 84       	ldd	r2, Y+13	; 0x0d
     6c4:	3e 84       	ldd	r3, Y+14	; 0x0e
     6c6:	4f 84       	ldd	r4, Y+15	; 0x0f
     6c8:	58 88       	ldd	r5, Y+16	; 0x10
     6ca:	6d 88       	ldd	r6, Y+21	; 0x15
     6cc:	7e 88       	ldd	r7, Y+22	; 0x16
     6ce:	8f 88       	ldd	r8, Y+23	; 0x17
     6d0:	98 8c       	ldd	r9, Y+24	; 0x18
     6d2:	ee 24       	eor	r14, r14
     6d4:	ff 24       	eor	r15, r15
     6d6:	87 01       	movw	r16, r14
     6d8:	aa 24       	eor	r10, r10
     6da:	bb 24       	eor	r11, r11
     6dc:	65 01       	movw	r12, r10
     6de:	40 e0       	ldi	r20, 0x00	; 0
     6e0:	50 e0       	ldi	r21, 0x00	; 0
     6e2:	60 e0       	ldi	r22, 0x00	; 0
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	e0 e0       	ldi	r30, 0x00	; 0
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	c1 01       	movw	r24, r2
     6ec:	81 70       	andi	r24, 0x01	; 1
     6ee:	90 70       	andi	r25, 0x00	; 0
     6f0:	89 2b       	or	r24, r25
     6f2:	e9 f0       	breq	.+58     	; 0x72e <__mulsf3+0xf4>
     6f4:	e6 0c       	add	r14, r6
     6f6:	f7 1c       	adc	r15, r7
     6f8:	08 1d       	adc	r16, r8
     6fa:	19 1d       	adc	r17, r9
     6fc:	9a 01       	movw	r18, r20
     6fe:	ab 01       	movw	r20, r22
     700:	2a 0d       	add	r18, r10
     702:	3b 1d       	adc	r19, r11
     704:	4c 1d       	adc	r20, r12
     706:	5d 1d       	adc	r21, r13
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	a0 e0       	ldi	r26, 0x00	; 0
     70e:	b0 e0       	ldi	r27, 0x00	; 0
     710:	e6 14       	cp	r14, r6
     712:	f7 04       	cpc	r15, r7
     714:	08 05       	cpc	r16, r8
     716:	19 05       	cpc	r17, r9
     718:	20 f4       	brcc	.+8      	; 0x722 <__mulsf3+0xe8>
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	a0 e0       	ldi	r26, 0x00	; 0
     720:	b0 e0       	ldi	r27, 0x00	; 0
     722:	ba 01       	movw	r22, r20
     724:	a9 01       	movw	r20, r18
     726:	48 0f       	add	r20, r24
     728:	59 1f       	adc	r21, r25
     72a:	6a 1f       	adc	r22, r26
     72c:	7b 1f       	adc	r23, r27
     72e:	aa 0c       	add	r10, r10
     730:	bb 1c       	adc	r11, r11
     732:	cc 1c       	adc	r12, r12
     734:	dd 1c       	adc	r13, r13
     736:	97 fe       	sbrs	r9, 7
     738:	08 c0       	rjmp	.+16     	; 0x74a <__mulsf3+0x110>
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	a0 e0       	ldi	r26, 0x00	; 0
     740:	b0 e0       	ldi	r27, 0x00	; 0
     742:	a8 2a       	or	r10, r24
     744:	b9 2a       	or	r11, r25
     746:	ca 2a       	or	r12, r26
     748:	db 2a       	or	r13, r27
     74a:	31 96       	adiw	r30, 0x01	; 1
     74c:	e0 32       	cpi	r30, 0x20	; 32
     74e:	f1 05       	cpc	r31, r1
     750:	49 f0       	breq	.+18     	; 0x764 <__mulsf3+0x12a>
     752:	66 0c       	add	r6, r6
     754:	77 1c       	adc	r7, r7
     756:	88 1c       	adc	r8, r8
     758:	99 1c       	adc	r9, r9
     75a:	56 94       	lsr	r5
     75c:	47 94       	ror	r4
     75e:	37 94       	ror	r3
     760:	27 94       	ror	r2
     762:	c3 cf       	rjmp	.-122    	; 0x6ea <__mulsf3+0xb0>
     764:	fa 85       	ldd	r31, Y+10	; 0x0a
     766:	ea 89       	ldd	r30, Y+18	; 0x12
     768:	2b 89       	ldd	r18, Y+19	; 0x13
     76a:	3c 89       	ldd	r19, Y+20	; 0x14
     76c:	8b 85       	ldd	r24, Y+11	; 0x0b
     76e:	9c 85       	ldd	r25, Y+12	; 0x0c
     770:	28 0f       	add	r18, r24
     772:	39 1f       	adc	r19, r25
     774:	2e 5f       	subi	r18, 0xFE	; 254
     776:	3f 4f       	sbci	r19, 0xFF	; 255
     778:	17 c0       	rjmp	.+46     	; 0x7a8 <__mulsf3+0x16e>
     77a:	ca 01       	movw	r24, r20
     77c:	81 70       	andi	r24, 0x01	; 1
     77e:	90 70       	andi	r25, 0x00	; 0
     780:	89 2b       	or	r24, r25
     782:	61 f0       	breq	.+24     	; 0x79c <__mulsf3+0x162>
     784:	16 95       	lsr	r17
     786:	07 95       	ror	r16
     788:	f7 94       	ror	r15
     78a:	e7 94       	ror	r14
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	a0 e0       	ldi	r26, 0x00	; 0
     792:	b0 e8       	ldi	r27, 0x80	; 128
     794:	e8 2a       	or	r14, r24
     796:	f9 2a       	or	r15, r25
     798:	0a 2b       	or	r16, r26
     79a:	1b 2b       	or	r17, r27
     79c:	76 95       	lsr	r23
     79e:	67 95       	ror	r22
     7a0:	57 95       	ror	r21
     7a2:	47 95       	ror	r20
     7a4:	2f 5f       	subi	r18, 0xFF	; 255
     7a6:	3f 4f       	sbci	r19, 0xFF	; 255
     7a8:	77 fd       	sbrc	r23, 7
     7aa:	e7 cf       	rjmp	.-50     	; 0x77a <__mulsf3+0x140>
     7ac:	0c c0       	rjmp	.+24     	; 0x7c6 <__mulsf3+0x18c>
     7ae:	44 0f       	add	r20, r20
     7b0:	55 1f       	adc	r21, r21
     7b2:	66 1f       	adc	r22, r22
     7b4:	77 1f       	adc	r23, r23
     7b6:	17 fd       	sbrc	r17, 7
     7b8:	41 60       	ori	r20, 0x01	; 1
     7ba:	ee 0c       	add	r14, r14
     7bc:	ff 1c       	adc	r15, r15
     7be:	00 1f       	adc	r16, r16
     7c0:	11 1f       	adc	r17, r17
     7c2:	21 50       	subi	r18, 0x01	; 1
     7c4:	30 40       	sbci	r19, 0x00	; 0
     7c6:	40 30       	cpi	r20, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	59 07       	cpc	r21, r25
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	69 07       	cpc	r22, r25
     7d0:	90 e4       	ldi	r25, 0x40	; 64
     7d2:	79 07       	cpc	r23, r25
     7d4:	60 f3       	brcs	.-40     	; 0x7ae <__mulsf3+0x174>
     7d6:	2b 8f       	std	Y+27, r18	; 0x1b
     7d8:	3c 8f       	std	Y+28, r19	; 0x1c
     7da:	db 01       	movw	r26, r22
     7dc:	ca 01       	movw	r24, r20
     7de:	8f 77       	andi	r24, 0x7F	; 127
     7e0:	90 70       	andi	r25, 0x00	; 0
     7e2:	a0 70       	andi	r26, 0x00	; 0
     7e4:	b0 70       	andi	r27, 0x00	; 0
     7e6:	80 34       	cpi	r24, 0x40	; 64
     7e8:	91 05       	cpc	r25, r1
     7ea:	a1 05       	cpc	r26, r1
     7ec:	b1 05       	cpc	r27, r1
     7ee:	61 f4       	brne	.+24     	; 0x808 <__mulsf3+0x1ce>
     7f0:	47 fd       	sbrc	r20, 7
     7f2:	0a c0       	rjmp	.+20     	; 0x808 <__mulsf3+0x1ce>
     7f4:	e1 14       	cp	r14, r1
     7f6:	f1 04       	cpc	r15, r1
     7f8:	01 05       	cpc	r16, r1
     7fa:	11 05       	cpc	r17, r1
     7fc:	29 f0       	breq	.+10     	; 0x808 <__mulsf3+0x1ce>
     7fe:	40 5c       	subi	r20, 0xC0	; 192
     800:	5f 4f       	sbci	r21, 0xFF	; 255
     802:	6f 4f       	sbci	r22, 0xFF	; 255
     804:	7f 4f       	sbci	r23, 0xFF	; 255
     806:	40 78       	andi	r20, 0x80	; 128
     808:	1a 8e       	std	Y+26, r1	; 0x1a
     80a:	fe 17       	cp	r31, r30
     80c:	11 f0       	breq	.+4      	; 0x812 <__mulsf3+0x1d8>
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	8a 8f       	std	Y+26, r24	; 0x1a
     812:	4d 8f       	std	Y+29, r20	; 0x1d
     814:	5e 8f       	std	Y+30, r21	; 0x1e
     816:	6f 8f       	std	Y+31, r22	; 0x1f
     818:	78 a3       	std	Y+32, r23	; 0x20
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	89 8f       	std	Y+25, r24	; 0x19
     81e:	ce 01       	movw	r24, r28
     820:	49 96       	adiw	r24, 0x19	; 25
     822:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__pack_f>
     826:	a0 96       	adiw	r28, 0x20	; 32
     828:	e2 e1       	ldi	r30, 0x12	; 18
     82a:	0c 94 a8 3c 	jmp	0x7950	; 0x7950 <__epilogue_restores__>

0000082e <__gtsf2>:
     82e:	a8 e1       	ldi	r26, 0x18	; 24
     830:	b0 e0       	ldi	r27, 0x00	; 0
     832:	ed e1       	ldi	r30, 0x1D	; 29
     834:	f4 e0       	ldi	r31, 0x04	; 4
     836:	0c 94 98 3c 	jmp	0x7930	; 0x7930 <__prologue_saves__+0x18>
     83a:	69 83       	std	Y+1, r22	; 0x01
     83c:	7a 83       	std	Y+2, r23	; 0x02
     83e:	8b 83       	std	Y+3, r24	; 0x03
     840:	9c 83       	std	Y+4, r25	; 0x04
     842:	2d 83       	std	Y+5, r18	; 0x05
     844:	3e 83       	std	Y+6, r19	; 0x06
     846:	4f 83       	std	Y+7, r20	; 0x07
     848:	58 87       	std	Y+8, r21	; 0x08
     84a:	89 e0       	ldi	r24, 0x09	; 9
     84c:	e8 2e       	mov	r14, r24
     84e:	f1 2c       	mov	r15, r1
     850:	ec 0e       	add	r14, r28
     852:	fd 1e       	adc	r15, r29
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	b7 01       	movw	r22, r14
     85a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     85e:	8e 01       	movw	r16, r28
     860:	0f 5e       	subi	r16, 0xEF	; 239
     862:	1f 4f       	sbci	r17, 0xFF	; 255
     864:	ce 01       	movw	r24, r28
     866:	05 96       	adiw	r24, 0x05	; 5
     868:	b8 01       	movw	r22, r16
     86a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     86e:	89 85       	ldd	r24, Y+9	; 0x09
     870:	82 30       	cpi	r24, 0x02	; 2
     872:	40 f0       	brcs	.+16     	; 0x884 <__stack+0x25>
     874:	89 89       	ldd	r24, Y+17	; 0x11
     876:	82 30       	cpi	r24, 0x02	; 2
     878:	28 f0       	brcs	.+10     	; 0x884 <__stack+0x25>
     87a:	c7 01       	movw	r24, r14
     87c:	b8 01       	movw	r22, r16
     87e:	0e 94 48 06 	call	0xc90	; 0xc90 <__fpcmp_parts_f>
     882:	01 c0       	rjmp	.+2      	; 0x886 <__stack+0x27>
     884:	8f ef       	ldi	r24, 0xFF	; 255
     886:	68 96       	adiw	r28, 0x18	; 24
     888:	e6 e0       	ldi	r30, 0x06	; 6
     88a:	0c 94 b4 3c 	jmp	0x7968	; 0x7968 <__epilogue_restores__+0x18>

0000088e <__gesf2>:
     88e:	a8 e1       	ldi	r26, 0x18	; 24
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	ed e4       	ldi	r30, 0x4D	; 77
     894:	f4 e0       	ldi	r31, 0x04	; 4
     896:	0c 94 98 3c 	jmp	0x7930	; 0x7930 <__prologue_saves__+0x18>
     89a:	69 83       	std	Y+1, r22	; 0x01
     89c:	7a 83       	std	Y+2, r23	; 0x02
     89e:	8b 83       	std	Y+3, r24	; 0x03
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	2d 83       	std	Y+5, r18	; 0x05
     8a4:	3e 83       	std	Y+6, r19	; 0x06
     8a6:	4f 83       	std	Y+7, r20	; 0x07
     8a8:	58 87       	std	Y+8, r21	; 0x08
     8aa:	89 e0       	ldi	r24, 0x09	; 9
     8ac:	e8 2e       	mov	r14, r24
     8ae:	f1 2c       	mov	r15, r1
     8b0:	ec 0e       	add	r14, r28
     8b2:	fd 1e       	adc	r15, r29
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	b7 01       	movw	r22, r14
     8ba:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     8be:	8e 01       	movw	r16, r28
     8c0:	0f 5e       	subi	r16, 0xEF	; 239
     8c2:	1f 4f       	sbci	r17, 0xFF	; 255
     8c4:	ce 01       	movw	r24, r28
     8c6:	05 96       	adiw	r24, 0x05	; 5
     8c8:	b8 01       	movw	r22, r16
     8ca:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     8ce:	89 85       	ldd	r24, Y+9	; 0x09
     8d0:	82 30       	cpi	r24, 0x02	; 2
     8d2:	40 f0       	brcs	.+16     	; 0x8e4 <__gesf2+0x56>
     8d4:	89 89       	ldd	r24, Y+17	; 0x11
     8d6:	82 30       	cpi	r24, 0x02	; 2
     8d8:	28 f0       	brcs	.+10     	; 0x8e4 <__gesf2+0x56>
     8da:	c7 01       	movw	r24, r14
     8dc:	b8 01       	movw	r22, r16
     8de:	0e 94 48 06 	call	0xc90	; 0xc90 <__fpcmp_parts_f>
     8e2:	01 c0       	rjmp	.+2      	; 0x8e6 <__gesf2+0x58>
     8e4:	8f ef       	ldi	r24, 0xFF	; 255
     8e6:	68 96       	adiw	r28, 0x18	; 24
     8e8:	e6 e0       	ldi	r30, 0x06	; 6
     8ea:	0c 94 b4 3c 	jmp	0x7968	; 0x7968 <__epilogue_restores__+0x18>

000008ee <__ltsf2>:
     8ee:	a8 e1       	ldi	r26, 0x18	; 24
     8f0:	b0 e0       	ldi	r27, 0x00	; 0
     8f2:	ed e7       	ldi	r30, 0x7D	; 125
     8f4:	f4 e0       	ldi	r31, 0x04	; 4
     8f6:	0c 94 98 3c 	jmp	0x7930	; 0x7930 <__prologue_saves__+0x18>
     8fa:	69 83       	std	Y+1, r22	; 0x01
     8fc:	7a 83       	std	Y+2, r23	; 0x02
     8fe:	8b 83       	std	Y+3, r24	; 0x03
     900:	9c 83       	std	Y+4, r25	; 0x04
     902:	2d 83       	std	Y+5, r18	; 0x05
     904:	3e 83       	std	Y+6, r19	; 0x06
     906:	4f 83       	std	Y+7, r20	; 0x07
     908:	58 87       	std	Y+8, r21	; 0x08
     90a:	89 e0       	ldi	r24, 0x09	; 9
     90c:	e8 2e       	mov	r14, r24
     90e:	f1 2c       	mov	r15, r1
     910:	ec 0e       	add	r14, r28
     912:	fd 1e       	adc	r15, r29
     914:	ce 01       	movw	r24, r28
     916:	01 96       	adiw	r24, 0x01	; 1
     918:	b7 01       	movw	r22, r14
     91a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     91e:	8e 01       	movw	r16, r28
     920:	0f 5e       	subi	r16, 0xEF	; 239
     922:	1f 4f       	sbci	r17, 0xFF	; 255
     924:	ce 01       	movw	r24, r28
     926:	05 96       	adiw	r24, 0x05	; 5
     928:	b8 01       	movw	r22, r16
     92a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     92e:	89 85       	ldd	r24, Y+9	; 0x09
     930:	82 30       	cpi	r24, 0x02	; 2
     932:	40 f0       	brcs	.+16     	; 0x944 <__ltsf2+0x56>
     934:	89 89       	ldd	r24, Y+17	; 0x11
     936:	82 30       	cpi	r24, 0x02	; 2
     938:	28 f0       	brcs	.+10     	; 0x944 <__ltsf2+0x56>
     93a:	c7 01       	movw	r24, r14
     93c:	b8 01       	movw	r22, r16
     93e:	0e 94 48 06 	call	0xc90	; 0xc90 <__fpcmp_parts_f>
     942:	01 c0       	rjmp	.+2      	; 0x946 <__ltsf2+0x58>
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	68 96       	adiw	r28, 0x18	; 24
     948:	e6 e0       	ldi	r30, 0x06	; 6
     94a:	0c 94 b4 3c 	jmp	0x7968	; 0x7968 <__epilogue_restores__+0x18>

0000094e <__fixsfsi>:
     94e:	ac e0       	ldi	r26, 0x0C	; 12
     950:	b0 e0       	ldi	r27, 0x00	; 0
     952:	ed ea       	ldi	r30, 0xAD	; 173
     954:	f4 e0       	ldi	r31, 0x04	; 4
     956:	0c 94 9c 3c 	jmp	0x7938	; 0x7938 <__prologue_saves__+0x20>
     95a:	69 83       	std	Y+1, r22	; 0x01
     95c:	7a 83       	std	Y+2, r23	; 0x02
     95e:	8b 83       	std	Y+3, r24	; 0x03
     960:	9c 83       	std	Y+4, r25	; 0x04
     962:	ce 01       	movw	r24, r28
     964:	01 96       	adiw	r24, 0x01	; 1
     966:	be 01       	movw	r22, r28
     968:	6b 5f       	subi	r22, 0xFB	; 251
     96a:	7f 4f       	sbci	r23, 0xFF	; 255
     96c:	0e 94 d0 05 	call	0xba0	; 0xba0 <__unpack_f>
     970:	8d 81       	ldd	r24, Y+5	; 0x05
     972:	82 30       	cpi	r24, 0x02	; 2
     974:	61 f1       	breq	.+88     	; 0x9ce <__fixsfsi+0x80>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	50 f1       	brcs	.+84     	; 0x9ce <__fixsfsi+0x80>
     97a:	84 30       	cpi	r24, 0x04	; 4
     97c:	21 f4       	brne	.+8      	; 0x986 <__fixsfsi+0x38>
     97e:	8e 81       	ldd	r24, Y+6	; 0x06
     980:	88 23       	and	r24, r24
     982:	51 f1       	breq	.+84     	; 0x9d8 <__fixsfsi+0x8a>
     984:	2e c0       	rjmp	.+92     	; 0x9e2 <__fixsfsi+0x94>
     986:	2f 81       	ldd	r18, Y+7	; 0x07
     988:	38 85       	ldd	r19, Y+8	; 0x08
     98a:	37 fd       	sbrc	r19, 7
     98c:	20 c0       	rjmp	.+64     	; 0x9ce <__fixsfsi+0x80>
     98e:	6e 81       	ldd	r22, Y+6	; 0x06
     990:	2f 31       	cpi	r18, 0x1F	; 31
     992:	31 05       	cpc	r19, r1
     994:	1c f0       	brlt	.+6      	; 0x99c <__fixsfsi+0x4e>
     996:	66 23       	and	r22, r22
     998:	f9 f0       	breq	.+62     	; 0x9d8 <__fixsfsi+0x8a>
     99a:	23 c0       	rjmp	.+70     	; 0x9e2 <__fixsfsi+0x94>
     99c:	8e e1       	ldi	r24, 0x1E	; 30
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	82 1b       	sub	r24, r18
     9a2:	93 0b       	sbc	r25, r19
     9a4:	29 85       	ldd	r18, Y+9	; 0x09
     9a6:	3a 85       	ldd	r19, Y+10	; 0x0a
     9a8:	4b 85       	ldd	r20, Y+11	; 0x0b
     9aa:	5c 85       	ldd	r21, Y+12	; 0x0c
     9ac:	04 c0       	rjmp	.+8      	; 0x9b6 <__fixsfsi+0x68>
     9ae:	56 95       	lsr	r21
     9b0:	47 95       	ror	r20
     9b2:	37 95       	ror	r19
     9b4:	27 95       	ror	r18
     9b6:	8a 95       	dec	r24
     9b8:	d2 f7       	brpl	.-12     	; 0x9ae <__fixsfsi+0x60>
     9ba:	66 23       	and	r22, r22
     9bc:	b1 f0       	breq	.+44     	; 0x9ea <__fixsfsi+0x9c>
     9be:	50 95       	com	r21
     9c0:	40 95       	com	r20
     9c2:	30 95       	com	r19
     9c4:	21 95       	neg	r18
     9c6:	3f 4f       	sbci	r19, 0xFF	; 255
     9c8:	4f 4f       	sbci	r20, 0xFF	; 255
     9ca:	5f 4f       	sbci	r21, 0xFF	; 255
     9cc:	0e c0       	rjmp	.+28     	; 0x9ea <__fixsfsi+0x9c>
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	50 e0       	ldi	r21, 0x00	; 0
     9d6:	09 c0       	rjmp	.+18     	; 0x9ea <__fixsfsi+0x9c>
     9d8:	2f ef       	ldi	r18, 0xFF	; 255
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	4f ef       	ldi	r20, 0xFF	; 255
     9de:	5f e7       	ldi	r21, 0x7F	; 127
     9e0:	04 c0       	rjmp	.+8      	; 0x9ea <__fixsfsi+0x9c>
     9e2:	20 e0       	ldi	r18, 0x00	; 0
     9e4:	30 e0       	ldi	r19, 0x00	; 0
     9e6:	40 e0       	ldi	r20, 0x00	; 0
     9e8:	50 e8       	ldi	r21, 0x80	; 128
     9ea:	b9 01       	movw	r22, r18
     9ec:	ca 01       	movw	r24, r20
     9ee:	2c 96       	adiw	r28, 0x0c	; 12
     9f0:	e2 e0       	ldi	r30, 0x02	; 2
     9f2:	0c 94 b8 3c 	jmp	0x7970	; 0x7970 <__epilogue_restores__+0x20>

000009f6 <__pack_f>:
     9f6:	df 92       	push	r13
     9f8:	ef 92       	push	r14
     9fa:	ff 92       	push	r15
     9fc:	0f 93       	push	r16
     9fe:	1f 93       	push	r17
     a00:	fc 01       	movw	r30, r24
     a02:	e4 80       	ldd	r14, Z+4	; 0x04
     a04:	f5 80       	ldd	r15, Z+5	; 0x05
     a06:	06 81       	ldd	r16, Z+6	; 0x06
     a08:	17 81       	ldd	r17, Z+7	; 0x07
     a0a:	d1 80       	ldd	r13, Z+1	; 0x01
     a0c:	80 81       	ld	r24, Z
     a0e:	82 30       	cpi	r24, 0x02	; 2
     a10:	48 f4       	brcc	.+18     	; 0xa24 <__pack_f+0x2e>
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	a0 e1       	ldi	r26, 0x10	; 16
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	e8 2a       	or	r14, r24
     a1c:	f9 2a       	or	r15, r25
     a1e:	0a 2b       	or	r16, r26
     a20:	1b 2b       	or	r17, r27
     a22:	a5 c0       	rjmp	.+330    	; 0xb6e <__pack_f+0x178>
     a24:	84 30       	cpi	r24, 0x04	; 4
     a26:	09 f4       	brne	.+2      	; 0xa2a <__pack_f+0x34>
     a28:	9f c0       	rjmp	.+318    	; 0xb68 <__pack_f+0x172>
     a2a:	82 30       	cpi	r24, 0x02	; 2
     a2c:	21 f4       	brne	.+8      	; 0xa36 <__pack_f+0x40>
     a2e:	ee 24       	eor	r14, r14
     a30:	ff 24       	eor	r15, r15
     a32:	87 01       	movw	r16, r14
     a34:	05 c0       	rjmp	.+10     	; 0xa40 <__pack_f+0x4a>
     a36:	e1 14       	cp	r14, r1
     a38:	f1 04       	cpc	r15, r1
     a3a:	01 05       	cpc	r16, r1
     a3c:	11 05       	cpc	r17, r1
     a3e:	19 f4       	brne	.+6      	; 0xa46 <__pack_f+0x50>
     a40:	e0 e0       	ldi	r30, 0x00	; 0
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	96 c0       	rjmp	.+300    	; 0xb72 <__pack_f+0x17c>
     a46:	62 81       	ldd	r22, Z+2	; 0x02
     a48:	73 81       	ldd	r23, Z+3	; 0x03
     a4a:	9f ef       	ldi	r25, 0xFF	; 255
     a4c:	62 38       	cpi	r22, 0x82	; 130
     a4e:	79 07       	cpc	r23, r25
     a50:	0c f0       	brlt	.+2      	; 0xa54 <__pack_f+0x5e>
     a52:	5b c0       	rjmp	.+182    	; 0xb0a <__pack_f+0x114>
     a54:	22 e8       	ldi	r18, 0x82	; 130
     a56:	3f ef       	ldi	r19, 0xFF	; 255
     a58:	26 1b       	sub	r18, r22
     a5a:	37 0b       	sbc	r19, r23
     a5c:	2a 31       	cpi	r18, 0x1A	; 26
     a5e:	31 05       	cpc	r19, r1
     a60:	2c f0       	brlt	.+10     	; 0xa6c <__pack_f+0x76>
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 e0       	ldi	r20, 0x00	; 0
     a68:	50 e0       	ldi	r21, 0x00	; 0
     a6a:	2a c0       	rjmp	.+84     	; 0xac0 <__pack_f+0xca>
     a6c:	b8 01       	movw	r22, r16
     a6e:	a7 01       	movw	r20, r14
     a70:	02 2e       	mov	r0, r18
     a72:	04 c0       	rjmp	.+8      	; 0xa7c <__pack_f+0x86>
     a74:	76 95       	lsr	r23
     a76:	67 95       	ror	r22
     a78:	57 95       	ror	r21
     a7a:	47 95       	ror	r20
     a7c:	0a 94       	dec	r0
     a7e:	d2 f7       	brpl	.-12     	; 0xa74 <__pack_f+0x7e>
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	a0 e0       	ldi	r26, 0x00	; 0
     a86:	b0 e0       	ldi	r27, 0x00	; 0
     a88:	04 c0       	rjmp	.+8      	; 0xa92 <__pack_f+0x9c>
     a8a:	88 0f       	add	r24, r24
     a8c:	99 1f       	adc	r25, r25
     a8e:	aa 1f       	adc	r26, r26
     a90:	bb 1f       	adc	r27, r27
     a92:	2a 95       	dec	r18
     a94:	d2 f7       	brpl	.-12     	; 0xa8a <__pack_f+0x94>
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	a1 09       	sbc	r26, r1
     a9a:	b1 09       	sbc	r27, r1
     a9c:	8e 21       	and	r24, r14
     a9e:	9f 21       	and	r25, r15
     aa0:	a0 23       	and	r26, r16
     aa2:	b1 23       	and	r27, r17
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	a1 05       	cpc	r26, r1
     aa8:	b1 05       	cpc	r27, r1
     aaa:	21 f0       	breq	.+8      	; 0xab4 <__pack_f+0xbe>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	9a 01       	movw	r18, r20
     ab6:	ab 01       	movw	r20, r22
     ab8:	28 2b       	or	r18, r24
     aba:	39 2b       	or	r19, r25
     abc:	4a 2b       	or	r20, r26
     abe:	5b 2b       	or	r21, r27
     ac0:	da 01       	movw	r26, r20
     ac2:	c9 01       	movw	r24, r18
     ac4:	8f 77       	andi	r24, 0x7F	; 127
     ac6:	90 70       	andi	r25, 0x00	; 0
     ac8:	a0 70       	andi	r26, 0x00	; 0
     aca:	b0 70       	andi	r27, 0x00	; 0
     acc:	80 34       	cpi	r24, 0x40	; 64
     ace:	91 05       	cpc	r25, r1
     ad0:	a1 05       	cpc	r26, r1
     ad2:	b1 05       	cpc	r27, r1
     ad4:	39 f4       	brne	.+14     	; 0xae4 <__pack_f+0xee>
     ad6:	27 ff       	sbrs	r18, 7
     ad8:	09 c0       	rjmp	.+18     	; 0xaec <__pack_f+0xf6>
     ada:	20 5c       	subi	r18, 0xC0	; 192
     adc:	3f 4f       	sbci	r19, 0xFF	; 255
     ade:	4f 4f       	sbci	r20, 0xFF	; 255
     ae0:	5f 4f       	sbci	r21, 0xFF	; 255
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <__pack_f+0xf6>
     ae4:	21 5c       	subi	r18, 0xC1	; 193
     ae6:	3f 4f       	sbci	r19, 0xFF	; 255
     ae8:	4f 4f       	sbci	r20, 0xFF	; 255
     aea:	5f 4f       	sbci	r21, 0xFF	; 255
     aec:	e0 e0       	ldi	r30, 0x00	; 0
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	20 30       	cpi	r18, 0x00	; 0
     af2:	a0 e0       	ldi	r26, 0x00	; 0
     af4:	3a 07       	cpc	r19, r26
     af6:	a0 e0       	ldi	r26, 0x00	; 0
     af8:	4a 07       	cpc	r20, r26
     afa:	a0 e4       	ldi	r26, 0x40	; 64
     afc:	5a 07       	cpc	r21, r26
     afe:	10 f0       	brcs	.+4      	; 0xb04 <__pack_f+0x10e>
     b00:	e1 e0       	ldi	r30, 0x01	; 1
     b02:	f0 e0       	ldi	r31, 0x00	; 0
     b04:	79 01       	movw	r14, r18
     b06:	8a 01       	movw	r16, r20
     b08:	27 c0       	rjmp	.+78     	; 0xb58 <__pack_f+0x162>
     b0a:	60 38       	cpi	r22, 0x80	; 128
     b0c:	71 05       	cpc	r23, r1
     b0e:	64 f5       	brge	.+88     	; 0xb68 <__pack_f+0x172>
     b10:	fb 01       	movw	r30, r22
     b12:	e1 58       	subi	r30, 0x81	; 129
     b14:	ff 4f       	sbci	r31, 0xFF	; 255
     b16:	d8 01       	movw	r26, r16
     b18:	c7 01       	movw	r24, r14
     b1a:	8f 77       	andi	r24, 0x7F	; 127
     b1c:	90 70       	andi	r25, 0x00	; 0
     b1e:	a0 70       	andi	r26, 0x00	; 0
     b20:	b0 70       	andi	r27, 0x00	; 0
     b22:	80 34       	cpi	r24, 0x40	; 64
     b24:	91 05       	cpc	r25, r1
     b26:	a1 05       	cpc	r26, r1
     b28:	b1 05       	cpc	r27, r1
     b2a:	39 f4       	brne	.+14     	; 0xb3a <__pack_f+0x144>
     b2c:	e7 fe       	sbrs	r14, 7
     b2e:	0d c0       	rjmp	.+26     	; 0xb4a <__pack_f+0x154>
     b30:	80 e4       	ldi	r24, 0x40	; 64
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	a0 e0       	ldi	r26, 0x00	; 0
     b36:	b0 e0       	ldi	r27, 0x00	; 0
     b38:	04 c0       	rjmp	.+8      	; 0xb42 <__pack_f+0x14c>
     b3a:	8f e3       	ldi	r24, 0x3F	; 63
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	a0 e0       	ldi	r26, 0x00	; 0
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	e8 0e       	add	r14, r24
     b44:	f9 1e       	adc	r15, r25
     b46:	0a 1f       	adc	r16, r26
     b48:	1b 1f       	adc	r17, r27
     b4a:	17 ff       	sbrs	r17, 7
     b4c:	05 c0       	rjmp	.+10     	; 0xb58 <__pack_f+0x162>
     b4e:	16 95       	lsr	r17
     b50:	07 95       	ror	r16
     b52:	f7 94       	ror	r15
     b54:	e7 94       	ror	r14
     b56:	31 96       	adiw	r30, 0x01	; 1
     b58:	87 e0       	ldi	r24, 0x07	; 7
     b5a:	16 95       	lsr	r17
     b5c:	07 95       	ror	r16
     b5e:	f7 94       	ror	r15
     b60:	e7 94       	ror	r14
     b62:	8a 95       	dec	r24
     b64:	d1 f7       	brne	.-12     	; 0xb5a <__pack_f+0x164>
     b66:	05 c0       	rjmp	.+10     	; 0xb72 <__pack_f+0x17c>
     b68:	ee 24       	eor	r14, r14
     b6a:	ff 24       	eor	r15, r15
     b6c:	87 01       	movw	r16, r14
     b6e:	ef ef       	ldi	r30, 0xFF	; 255
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	6e 2f       	mov	r22, r30
     b74:	67 95       	ror	r22
     b76:	66 27       	eor	r22, r22
     b78:	67 95       	ror	r22
     b7a:	90 2f       	mov	r25, r16
     b7c:	9f 77       	andi	r25, 0x7F	; 127
     b7e:	d7 94       	ror	r13
     b80:	dd 24       	eor	r13, r13
     b82:	d7 94       	ror	r13
     b84:	8e 2f       	mov	r24, r30
     b86:	86 95       	lsr	r24
     b88:	49 2f       	mov	r20, r25
     b8a:	46 2b       	or	r20, r22
     b8c:	58 2f       	mov	r21, r24
     b8e:	5d 29       	or	r21, r13
     b90:	b7 01       	movw	r22, r14
     b92:	ca 01       	movw	r24, r20
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	ff 90       	pop	r15
     b9a:	ef 90       	pop	r14
     b9c:	df 90       	pop	r13
     b9e:	08 95       	ret

00000ba0 <__unpack_f>:
     ba0:	fc 01       	movw	r30, r24
     ba2:	db 01       	movw	r26, r22
     ba4:	40 81       	ld	r20, Z
     ba6:	51 81       	ldd	r21, Z+1	; 0x01
     ba8:	22 81       	ldd	r18, Z+2	; 0x02
     baa:	62 2f       	mov	r22, r18
     bac:	6f 77       	andi	r22, 0x7F	; 127
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	22 1f       	adc	r18, r18
     bb2:	22 27       	eor	r18, r18
     bb4:	22 1f       	adc	r18, r18
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	89 2f       	mov	r24, r25
     bba:	88 0f       	add	r24, r24
     bbc:	82 2b       	or	r24, r18
     bbe:	28 2f       	mov	r18, r24
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	99 1f       	adc	r25, r25
     bc4:	99 27       	eor	r25, r25
     bc6:	99 1f       	adc	r25, r25
     bc8:	11 96       	adiw	r26, 0x01	; 1
     bca:	9c 93       	st	X, r25
     bcc:	11 97       	sbiw	r26, 0x01	; 1
     bce:	21 15       	cp	r18, r1
     bd0:	31 05       	cpc	r19, r1
     bd2:	a9 f5       	brne	.+106    	; 0xc3e <__unpack_f+0x9e>
     bd4:	41 15       	cp	r20, r1
     bd6:	51 05       	cpc	r21, r1
     bd8:	61 05       	cpc	r22, r1
     bda:	71 05       	cpc	r23, r1
     bdc:	11 f4       	brne	.+4      	; 0xbe2 <__unpack_f+0x42>
     bde:	82 e0       	ldi	r24, 0x02	; 2
     be0:	37 c0       	rjmp	.+110    	; 0xc50 <__unpack_f+0xb0>
     be2:	82 e8       	ldi	r24, 0x82	; 130
     be4:	9f ef       	ldi	r25, 0xFF	; 255
     be6:	13 96       	adiw	r26, 0x03	; 3
     be8:	9c 93       	st	X, r25
     bea:	8e 93       	st	-X, r24
     bec:	12 97       	sbiw	r26, 0x02	; 2
     bee:	9a 01       	movw	r18, r20
     bf0:	ab 01       	movw	r20, r22
     bf2:	67 e0       	ldi	r22, 0x07	; 7
     bf4:	22 0f       	add	r18, r18
     bf6:	33 1f       	adc	r19, r19
     bf8:	44 1f       	adc	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	6a 95       	dec	r22
     bfe:	d1 f7       	brne	.-12     	; 0xbf4 <__unpack_f+0x54>
     c00:	83 e0       	ldi	r24, 0x03	; 3
     c02:	8c 93       	st	X, r24
     c04:	0d c0       	rjmp	.+26     	; 0xc20 <__unpack_f+0x80>
     c06:	22 0f       	add	r18, r18
     c08:	33 1f       	adc	r19, r19
     c0a:	44 1f       	adc	r20, r20
     c0c:	55 1f       	adc	r21, r21
     c0e:	12 96       	adiw	r26, 0x02	; 2
     c10:	8d 91       	ld	r24, X+
     c12:	9c 91       	ld	r25, X
     c14:	13 97       	sbiw	r26, 0x03	; 3
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	13 96       	adiw	r26, 0x03	; 3
     c1a:	9c 93       	st	X, r25
     c1c:	8e 93       	st	-X, r24
     c1e:	12 97       	sbiw	r26, 0x02	; 2
     c20:	20 30       	cpi	r18, 0x00	; 0
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	38 07       	cpc	r19, r24
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	48 07       	cpc	r20, r24
     c2a:	80 e4       	ldi	r24, 0x40	; 64
     c2c:	58 07       	cpc	r21, r24
     c2e:	58 f3       	brcs	.-42     	; 0xc06 <__unpack_f+0x66>
     c30:	14 96       	adiw	r26, 0x04	; 4
     c32:	2d 93       	st	X+, r18
     c34:	3d 93       	st	X+, r19
     c36:	4d 93       	st	X+, r20
     c38:	5c 93       	st	X, r21
     c3a:	17 97       	sbiw	r26, 0x07	; 7
     c3c:	08 95       	ret
     c3e:	2f 3f       	cpi	r18, 0xFF	; 255
     c40:	31 05       	cpc	r19, r1
     c42:	79 f4       	brne	.+30     	; 0xc62 <__unpack_f+0xc2>
     c44:	41 15       	cp	r20, r1
     c46:	51 05       	cpc	r21, r1
     c48:	61 05       	cpc	r22, r1
     c4a:	71 05       	cpc	r23, r1
     c4c:	19 f4       	brne	.+6      	; 0xc54 <__unpack_f+0xb4>
     c4e:	84 e0       	ldi	r24, 0x04	; 4
     c50:	8c 93       	st	X, r24
     c52:	08 95       	ret
     c54:	64 ff       	sbrs	r22, 4
     c56:	03 c0       	rjmp	.+6      	; 0xc5e <__unpack_f+0xbe>
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	8c 93       	st	X, r24
     c5c:	12 c0       	rjmp	.+36     	; 0xc82 <__unpack_f+0xe2>
     c5e:	1c 92       	st	X, r1
     c60:	10 c0       	rjmp	.+32     	; 0xc82 <__unpack_f+0xe2>
     c62:	2f 57       	subi	r18, 0x7F	; 127
     c64:	30 40       	sbci	r19, 0x00	; 0
     c66:	13 96       	adiw	r26, 0x03	; 3
     c68:	3c 93       	st	X, r19
     c6a:	2e 93       	st	-X, r18
     c6c:	12 97       	sbiw	r26, 0x02	; 2
     c6e:	83 e0       	ldi	r24, 0x03	; 3
     c70:	8c 93       	st	X, r24
     c72:	87 e0       	ldi	r24, 0x07	; 7
     c74:	44 0f       	add	r20, r20
     c76:	55 1f       	adc	r21, r21
     c78:	66 1f       	adc	r22, r22
     c7a:	77 1f       	adc	r23, r23
     c7c:	8a 95       	dec	r24
     c7e:	d1 f7       	brne	.-12     	; 0xc74 <__unpack_f+0xd4>
     c80:	70 64       	ori	r23, 0x40	; 64
     c82:	14 96       	adiw	r26, 0x04	; 4
     c84:	4d 93       	st	X+, r20
     c86:	5d 93       	st	X+, r21
     c88:	6d 93       	st	X+, r22
     c8a:	7c 93       	st	X, r23
     c8c:	17 97       	sbiw	r26, 0x07	; 7
     c8e:	08 95       	ret

00000c90 <__fpcmp_parts_f>:
     c90:	1f 93       	push	r17
     c92:	dc 01       	movw	r26, r24
     c94:	fb 01       	movw	r30, r22
     c96:	9c 91       	ld	r25, X
     c98:	92 30       	cpi	r25, 0x02	; 2
     c9a:	08 f4       	brcc	.+2      	; 0xc9e <__fpcmp_parts_f+0xe>
     c9c:	47 c0       	rjmp	.+142    	; 0xd2c <__fpcmp_parts_f+0x9c>
     c9e:	80 81       	ld	r24, Z
     ca0:	82 30       	cpi	r24, 0x02	; 2
     ca2:	08 f4       	brcc	.+2      	; 0xca6 <__fpcmp_parts_f+0x16>
     ca4:	43 c0       	rjmp	.+134    	; 0xd2c <__fpcmp_parts_f+0x9c>
     ca6:	94 30       	cpi	r25, 0x04	; 4
     ca8:	51 f4       	brne	.+20     	; 0xcbe <__fpcmp_parts_f+0x2e>
     caa:	11 96       	adiw	r26, 0x01	; 1
     cac:	1c 91       	ld	r17, X
     cae:	84 30       	cpi	r24, 0x04	; 4
     cb0:	99 f5       	brne	.+102    	; 0xd18 <__fpcmp_parts_f+0x88>
     cb2:	81 81       	ldd	r24, Z+1	; 0x01
     cb4:	68 2f       	mov	r22, r24
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	61 1b       	sub	r22, r17
     cba:	71 09       	sbc	r23, r1
     cbc:	3f c0       	rjmp	.+126    	; 0xd3c <__fpcmp_parts_f+0xac>
     cbe:	84 30       	cpi	r24, 0x04	; 4
     cc0:	21 f0       	breq	.+8      	; 0xcca <__fpcmp_parts_f+0x3a>
     cc2:	92 30       	cpi	r25, 0x02	; 2
     cc4:	31 f4       	brne	.+12     	; 0xcd2 <__fpcmp_parts_f+0x42>
     cc6:	82 30       	cpi	r24, 0x02	; 2
     cc8:	b9 f1       	breq	.+110    	; 0xd38 <__fpcmp_parts_f+0xa8>
     cca:	81 81       	ldd	r24, Z+1	; 0x01
     ccc:	88 23       	and	r24, r24
     cce:	89 f1       	breq	.+98     	; 0xd32 <__fpcmp_parts_f+0xa2>
     cd0:	2d c0       	rjmp	.+90     	; 0xd2c <__fpcmp_parts_f+0x9c>
     cd2:	11 96       	adiw	r26, 0x01	; 1
     cd4:	1c 91       	ld	r17, X
     cd6:	11 97       	sbiw	r26, 0x01	; 1
     cd8:	82 30       	cpi	r24, 0x02	; 2
     cda:	f1 f0       	breq	.+60     	; 0xd18 <__fpcmp_parts_f+0x88>
     cdc:	81 81       	ldd	r24, Z+1	; 0x01
     cde:	18 17       	cp	r17, r24
     ce0:	d9 f4       	brne	.+54     	; 0xd18 <__fpcmp_parts_f+0x88>
     ce2:	12 96       	adiw	r26, 0x02	; 2
     ce4:	2d 91       	ld	r18, X+
     ce6:	3c 91       	ld	r19, X
     ce8:	13 97       	sbiw	r26, 0x03	; 3
     cea:	82 81       	ldd	r24, Z+2	; 0x02
     cec:	93 81       	ldd	r25, Z+3	; 0x03
     cee:	82 17       	cp	r24, r18
     cf0:	93 07       	cpc	r25, r19
     cf2:	94 f0       	brlt	.+36     	; 0xd18 <__fpcmp_parts_f+0x88>
     cf4:	28 17       	cp	r18, r24
     cf6:	39 07       	cpc	r19, r25
     cf8:	bc f0       	brlt	.+46     	; 0xd28 <__fpcmp_parts_f+0x98>
     cfa:	14 96       	adiw	r26, 0x04	; 4
     cfc:	8d 91       	ld	r24, X+
     cfe:	9d 91       	ld	r25, X+
     d00:	0d 90       	ld	r0, X+
     d02:	bc 91       	ld	r27, X
     d04:	a0 2d       	mov	r26, r0
     d06:	24 81       	ldd	r18, Z+4	; 0x04
     d08:	35 81       	ldd	r19, Z+5	; 0x05
     d0a:	46 81       	ldd	r20, Z+6	; 0x06
     d0c:	57 81       	ldd	r21, Z+7	; 0x07
     d0e:	28 17       	cp	r18, r24
     d10:	39 07       	cpc	r19, r25
     d12:	4a 07       	cpc	r20, r26
     d14:	5b 07       	cpc	r21, r27
     d16:	18 f4       	brcc	.+6      	; 0xd1e <__fpcmp_parts_f+0x8e>
     d18:	11 23       	and	r17, r17
     d1a:	41 f0       	breq	.+16     	; 0xd2c <__fpcmp_parts_f+0x9c>
     d1c:	0a c0       	rjmp	.+20     	; 0xd32 <__fpcmp_parts_f+0xa2>
     d1e:	82 17       	cp	r24, r18
     d20:	93 07       	cpc	r25, r19
     d22:	a4 07       	cpc	r26, r20
     d24:	b5 07       	cpc	r27, r21
     d26:	40 f4       	brcc	.+16     	; 0xd38 <__fpcmp_parts_f+0xa8>
     d28:	11 23       	and	r17, r17
     d2a:	19 f0       	breq	.+6      	; 0xd32 <__fpcmp_parts_f+0xa2>
     d2c:	61 e0       	ldi	r22, 0x01	; 1
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	05 c0       	rjmp	.+10     	; 0xd3c <__fpcmp_parts_f+0xac>
     d32:	6f ef       	ldi	r22, 0xFF	; 255
     d34:	7f ef       	ldi	r23, 0xFF	; 255
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <__fpcmp_parts_f+0xac>
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	cb 01       	movw	r24, r22
     d3e:	1f 91       	pop	r17
     d40:	08 95       	ret

00000d42 <TMU_vidInit>:

static u32 LOC_u32OsTicks =0;


void TMU_vidInit(void)
{
     d42:	df 93       	push	r29
     d44:	cf 93       	push	r28
     d46:	00 d0       	rcall	.+0      	; 0xd48 <TMU_vidInit+0x6>
     d48:	00 d0       	rcall	.+0      	; 0xd4a <TMU_vidInit+0x8>
     d4a:	cd b7       	in	r28, 0x3d	; 61
     d4c:	de b7       	in	r29, 0x3e	; 62
            #error OS Tick value in TMU in invalid
        #endif
    #elif TMU_TIMER_CHANNEL == TIMER2
        #if TMU_OS_TICK >= 1 && TMU_OS_TICK <= 200
            //OVF , 1024 , dis OC2
            TCCR2 = 0x07;
     d4e:	e5 e4       	ldi	r30, 0x45	; 69
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	87 e0       	ldi	r24, 0x07	; 7
     d54:	80 83       	st	Z, r24
            u32 Local_u32Counts = (TMU_OS_TICK * (u32)TMU_CPU_FREQ) / (1024);
     d56:	8e e4       	ldi	r24, 0x4E	; 78
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	a0 e0       	ldi	r26, 0x00	; 0
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
     d5e:	89 83       	std	Y+1, r24	; 0x01
     d60:	9a 83       	std	Y+2, r25	; 0x02
     d62:	ab 83       	std	Y+3, r26	; 0x03
     d64:	bc 83       	std	Y+4, r27	; 0x04
            
            LOC_u16NumOfOvfs = (Local_u32Counts + 255) / (256);
     d66:	89 81       	ldd	r24, Y+1	; 0x01
     d68:	9a 81       	ldd	r25, Y+2	; 0x02
     d6a:	ab 81       	ldd	r26, Y+3	; 0x03
     d6c:	bc 81       	ldd	r27, Y+4	; 0x04
     d6e:	81 50       	subi	r24, 0x01	; 1
     d70:	9f 4f       	sbci	r25, 0xFF	; 255
     d72:	af 4f       	sbci	r26, 0xFF	; 255
     d74:	bf 4f       	sbci	r27, 0xFF	; 255
     d76:	89 2f       	mov	r24, r25
     d78:	9a 2f       	mov	r25, r26
     d7a:	ab 2f       	mov	r26, r27
     d7c:	bb 27       	eor	r27, r27
     d7e:	90 93 77 01 	sts	0x0177, r25
     d82:	80 93 76 01 	sts	0x0176, r24
            LOC_u16CountISRs = LOC_u16NumOfOvfs;
     d86:	80 91 76 01 	lds	r24, 0x0176
     d8a:	90 91 77 01 	lds	r25, 0x0177
     d8e:	90 93 79 01 	sts	0x0179, r25
     d92:	80 93 78 01 	sts	0x0178, r24

            LOC_u8Preload = (256UL - (Local_u32Counts % 256UL));
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	81 95       	neg	r24
     d9a:	80 93 7a 01 	sts	0x017A, r24

            TCNT2 = LOC_u8Preload;
     d9e:	e4 e4       	ldi	r30, 0x44	; 68
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	80 91 7a 01 	lds	r24, 0x017A
     da6:	80 83       	st	Z, r24
            TIMSK |= (1<<6);
     da8:	a9 e5       	ldi	r26, 0x59	; 89
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	e9 e5       	ldi	r30, 0x59	; 89
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	80 81       	ld	r24, Z
     db2:	80 64       	ori	r24, 0x40	; 64
     db4:	8c 93       	st	X, r24
            #error OS Tick value in TMU in invalid
        #endif
    #else 
        #error Timer channel selection in TMU in invalid
    #endif
}
     db6:	0f 90       	pop	r0
     db8:	0f 90       	pop	r0
     dba:	0f 90       	pop	r0
     dbc:	0f 90       	pop	r0
     dbe:	cf 91       	pop	r28
     dc0:	df 91       	pop	r29
     dc2:	08 95       	ret

00000dc4 <TMU_vidCreateTask>:

void TMU_vidCreateTask(void(*Copy_pfunAppFun)(void*), void * Copy_pvidParameter, 
                u16 Copy_u16Periodicity , u8 Copy_u8Priority)
{
     dc4:	df 93       	push	r29
     dc6:	cf 93       	push	r28
     dc8:	cd b7       	in	r28, 0x3d	; 61
     dca:	de b7       	in	r29, 0x3e	; 62
     dcc:	27 97       	sbiw	r28, 0x07	; 7
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	f8 94       	cli
     dd2:	de bf       	out	0x3e, r29	; 62
     dd4:	0f be       	out	0x3f, r0	; 63
     dd6:	cd bf       	out	0x3d, r28	; 61
     dd8:	9a 83       	std	Y+2, r25	; 0x02
     dda:	89 83       	std	Y+1, r24	; 0x01
     ddc:	7c 83       	std	Y+4, r23	; 0x04
     dde:	6b 83       	std	Y+3, r22	; 0x03
     de0:	5e 83       	std	Y+6, r21	; 0x06
     de2:	4d 83       	std	Y+5, r20	; 0x05
     de4:	2f 83       	std	Y+7, r18	; 0x07
    if (Copy_u8Priority < TMU_MAX_NUM_TASKS)
     de6:	8f 81       	ldd	r24, Y+7	; 0x07
     de8:	84 30       	cpi	r24, 0x04	; 4
     dea:	08 f0       	brcs	.+2      	; 0xdee <TMU_vidCreateTask+0x2a>
     dec:	49 c0       	rjmp	.+146    	; 0xe80 <TMU_vidCreateTask+0xbc>
    {
        LOC_astrTasks[ Copy_u8Priority ].pfunTask       = Copy_pfunAppFun;
     dee:	8f 81       	ldd	r24, Y+7	; 0x07
     df0:	28 2f       	mov	r18, r24
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	c9 01       	movw	r24, r18
     df6:	88 0f       	add	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	88 0f       	add	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	82 1b       	sub	r24, r18
     e04:	93 0b       	sbc	r25, r19
     e06:	fc 01       	movw	r30, r24
     e08:	e1 58       	subi	r30, 0x81	; 129
     e0a:	fe 4f       	sbci	r31, 0xFE	; 254
     e0c:	89 81       	ldd	r24, Y+1	; 0x01
     e0e:	9a 81       	ldd	r25, Y+2	; 0x02
     e10:	91 83       	std	Z+1, r25	; 0x01
     e12:	80 83       	st	Z, r24
        LOC_astrTasks[ Copy_u8Priority ].pvidParameter  = Copy_pvidParameter;
     e14:	8f 81       	ldd	r24, Y+7	; 0x07
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	c9 01       	movw	r24, r18
     e1c:	88 0f       	add	r24, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	88 0f       	add	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	82 1b       	sub	r24, r18
     e2a:	93 0b       	sbc	r25, r19
     e2c:	fc 01       	movw	r30, r24
     e2e:	ef 57       	subi	r30, 0x7F	; 127
     e30:	fe 4f       	sbci	r31, 0xFE	; 254
     e32:	8b 81       	ldd	r24, Y+3	; 0x03
     e34:	9c 81       	ldd	r25, Y+4	; 0x04
     e36:	91 83       	std	Z+1, r25	; 0x01
     e38:	80 83       	st	Z, r24
        LOC_astrTasks[ Copy_u8Priority ].u16Periodicity = Copy_u16Periodicity;
     e3a:	8f 81       	ldd	r24, Y+7	; 0x07
     e3c:	28 2f       	mov	r18, r24
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	c9 01       	movw	r24, r18
     e42:	88 0f       	add	r24, r24
     e44:	99 1f       	adc	r25, r25
     e46:	88 0f       	add	r24, r24
     e48:	99 1f       	adc	r25, r25
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	82 1b       	sub	r24, r18
     e50:	93 0b       	sbc	r25, r19
     e52:	fc 01       	movw	r30, r24
     e54:	ed 57       	subi	r30, 0x7D	; 125
     e56:	fe 4f       	sbci	r31, 0xFE	; 254
     e58:	8d 81       	ldd	r24, Y+5	; 0x05
     e5a:	9e 81       	ldd	r25, Y+6	; 0x06
     e5c:	91 83       	std	Z+1, r25	; 0x01
     e5e:	80 83       	st	Z, r24
        LOC_astrTasks[ Copy_u8Priority ].state          = READY;
     e60:	8f 81       	ldd	r24, Y+7	; 0x07
     e62:	28 2f       	mov	r18, r24
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	c9 01       	movw	r24, r18
     e68:	88 0f       	add	r24, r24
     e6a:	99 1f       	adc	r25, r25
     e6c:	88 0f       	add	r24, r24
     e6e:	99 1f       	adc	r25, r25
     e70:	88 0f       	add	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	82 1b       	sub	r24, r18
     e76:	93 0b       	sbc	r25, r19
     e78:	fc 01       	movw	r30, r24
     e7a:	eb 57       	subi	r30, 0x7B	; 123
     e7c:	fe 4f       	sbci	r31, 0xFE	; 254
     e7e:	10 82       	st	Z, r1
    }
}
     e80:	27 96       	adiw	r28, 0x07	; 7
     e82:	0f b6       	in	r0, 0x3f	; 63
     e84:	f8 94       	cli
     e86:	de bf       	out	0x3e, r29	; 62
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	cd bf       	out	0x3d, r28	; 61
     e8c:	cf 91       	pop	r28
     e8e:	df 91       	pop	r29
     e90:	08 95       	ret

00000e92 <TMU_vidStartScheduler>:

void TMU_vidStartScheduler(void)
{
     e92:	ef 92       	push	r14
     e94:	ff 92       	push	r15
     e96:	0f 93       	push	r16
     e98:	1f 93       	push	r17
     e9a:	df 93       	push	r29
     e9c:	cf 93       	push	r28
     e9e:	00 d0       	rcall	.+0      	; 0xea0 <TMU_vidStartScheduler+0xe>
     ea0:	00 d0       	rcall	.+0      	; 0xea2 <TMU_vidStartScheduler+0x10>
     ea2:	0f 92       	push	r0
     ea4:	cd b7       	in	r28, 0x3d	; 61
     ea6:	de b7       	in	r29, 0x3e	; 62
    u32 Local_u32Temp = 0;
     ea8:	1a 82       	std	Y+2, r1	; 0x02
     eaa:	1b 82       	std	Y+3, r1	; 0x03
     eac:	1c 82       	std	Y+4, r1	; 0x04
     eae:	1d 82       	std	Y+5, r1	; 0x05
    asm("SEI");
     eb0:	78 94       	sei
    while (1)
    {
        if (LOC_u32OsTicks > Local_u32Temp)
     eb2:	20 91 7b 01 	lds	r18, 0x017B
     eb6:	30 91 7c 01 	lds	r19, 0x017C
     eba:	40 91 7d 01 	lds	r20, 0x017D
     ebe:	50 91 7e 01 	lds	r21, 0x017E
     ec2:	8a 81       	ldd	r24, Y+2	; 0x02
     ec4:	9b 81       	ldd	r25, Y+3	; 0x03
     ec6:	ac 81       	ldd	r26, Y+4	; 0x04
     ec8:	bd 81       	ldd	r27, Y+5	; 0x05
     eca:	82 17       	cp	r24, r18
     ecc:	93 07       	cpc	r25, r19
     ece:	a4 07       	cpc	r26, r20
     ed0:	b5 07       	cpc	r27, r21
     ed2:	78 f7       	brcc	.-34     	; 0xeb2 <TMU_vidStartScheduler+0x20>
        {
            Local_u32Temp = LOC_u32OsTicks;
     ed4:	80 91 7b 01 	lds	r24, 0x017B
     ed8:	90 91 7c 01 	lds	r25, 0x017C
     edc:	a0 91 7d 01 	lds	r26, 0x017D
     ee0:	b0 91 7e 01 	lds	r27, 0x017E
     ee4:	8a 83       	std	Y+2, r24	; 0x02
     ee6:	9b 83       	std	Y+3, r25	; 0x03
     ee8:	ac 83       	std	Y+4, r26	; 0x04
     eea:	bd 83       	std	Y+5, r27	; 0x05
            // run scheduler
            // for (u8 u8Index = 0 ; u8Index < TMU_MAX_NUM_TASKS ; u8Index++) // 0 highest
            for (s8 s8Index = TMU_MAX_NUM_TASKS-1 ; s8Index >=0 ; s8Index --) // TMU_MAX_NUM_TASKS -1  -> highest
     eec:	83 e0       	ldi	r24, 0x03	; 3
     eee:	89 83       	std	Y+1, r24	; 0x01
     ef0:	7e c0       	rjmp	.+252    	; 0xfee <TMU_vidStartScheduler+0x15c>
            {
                if ((LOC_astrTasks[s8Index].pfunTask != NULL) && 
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	28 2f       	mov	r18, r24
     ef6:	33 27       	eor	r19, r19
     ef8:	27 fd       	sbrc	r18, 7
     efa:	30 95       	com	r19
     efc:	c9 01       	movw	r24, r18
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	88 0f       	add	r24, r24
     f04:	99 1f       	adc	r25, r25
     f06:	88 0f       	add	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	82 1b       	sub	r24, r18
     f0c:	93 0b       	sbc	r25, r19
     f0e:	fc 01       	movw	r30, r24
     f10:	e1 58       	subi	r30, 0x81	; 129
     f12:	fe 4f       	sbci	r31, 0xFE	; 254
     f14:	80 81       	ld	r24, Z
     f16:	91 81       	ldd	r25, Z+1	; 0x01
     f18:	00 97       	sbiw	r24, 0x00	; 0
     f1a:	09 f4       	brne	.+2      	; 0xf1e <TMU_vidStartScheduler+0x8c>
     f1c:	65 c0       	rjmp	.+202    	; 0xfe8 <TMU_vidStartScheduler+0x156>
     f1e:	89 81       	ldd	r24, Y+1	; 0x01
     f20:	28 2f       	mov	r18, r24
     f22:	33 27       	eor	r19, r19
     f24:	27 fd       	sbrc	r18, 7
     f26:	30 95       	com	r19
     f28:	c9 01       	movw	r24, r18
     f2a:	88 0f       	add	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	82 1b       	sub	r24, r18
     f38:	93 0b       	sbc	r25, r19
     f3a:	fc 01       	movw	r30, r24
     f3c:	eb 57       	subi	r30, 0x7B	; 123
     f3e:	fe 4f       	sbci	r31, 0xFE	; 254
     f40:	80 81       	ld	r24, Z
     f42:	88 23       	and	r24, r24
     f44:	09 f0       	breq	.+2      	; 0xf48 <TMU_vidStartScheduler+0xb6>
     f46:	50 c0       	rjmp	.+160    	; 0xfe8 <TMU_vidStartScheduler+0x156>
     f48:	e0 90 7b 01 	lds	r14, 0x017B
     f4c:	f0 90 7c 01 	lds	r15, 0x017C
     f50:	00 91 7d 01 	lds	r16, 0x017D
     f54:	10 91 7e 01 	lds	r17, 0x017E
     f58:	89 81       	ldd	r24, Y+1	; 0x01
     f5a:	28 2f       	mov	r18, r24
     f5c:	33 27       	eor	r19, r19
     f5e:	27 fd       	sbrc	r18, 7
     f60:	30 95       	com	r19
     f62:	c9 01       	movw	r24, r18
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	88 0f       	add	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	82 1b       	sub	r24, r18
     f72:	93 0b       	sbc	r25, r19
     f74:	fc 01       	movw	r30, r24
     f76:	ed 57       	subi	r30, 0x7D	; 125
     f78:	fe 4f       	sbci	r31, 0xFE	; 254
     f7a:	80 81       	ld	r24, Z
     f7c:	91 81       	ldd	r25, Z+1	; 0x01
     f7e:	9c 01       	movw	r18, r24
     f80:	40 e0       	ldi	r20, 0x00	; 0
     f82:	50 e0       	ldi	r21, 0x00	; 0
     f84:	c8 01       	movw	r24, r16
     f86:	b7 01       	movw	r22, r14
     f88:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <__udivmodsi4>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	00 97       	sbiw	r24, 0x00	; 0
     f92:	a1 05       	cpc	r26, r1
     f94:	b1 05       	cpc	r27, r1
     f96:	41 f5       	brne	.+80     	; 0xfe8 <TMU_vidStartScheduler+0x156>
                    (LOC_astrTasks[s8Index].state == READY) &&
                    ((LOC_u32OsTicks % LOC_astrTasks[s8Index].u16Periodicity) == 0))
                {
                    //dispatcher
                    LOC_astrTasks[s8Index].pfunTask ( LOC_astrTasks[s8Index].pvidParameter );
     f98:	89 81       	ldd	r24, Y+1	; 0x01
     f9a:	28 2f       	mov	r18, r24
     f9c:	33 27       	eor	r19, r19
     f9e:	27 fd       	sbrc	r18, 7
     fa0:	30 95       	com	r19
     fa2:	c9 01       	movw	r24, r18
     fa4:	88 0f       	add	r24, r24
     fa6:	99 1f       	adc	r25, r25
     fa8:	88 0f       	add	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	88 0f       	add	r24, r24
     fae:	99 1f       	adc	r25, r25
     fb0:	82 1b       	sub	r24, r18
     fb2:	93 0b       	sbc	r25, r19
     fb4:	fc 01       	movw	r30, r24
     fb6:	e1 58       	subi	r30, 0x81	; 129
     fb8:	fe 4f       	sbci	r31, 0xFE	; 254
     fba:	40 81       	ld	r20, Z
     fbc:	51 81       	ldd	r21, Z+1	; 0x01
     fbe:	89 81       	ldd	r24, Y+1	; 0x01
     fc0:	28 2f       	mov	r18, r24
     fc2:	33 27       	eor	r19, r19
     fc4:	27 fd       	sbrc	r18, 7
     fc6:	30 95       	com	r19
     fc8:	c9 01       	movw	r24, r18
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	88 0f       	add	r24, r24
     fd0:	99 1f       	adc	r25, r25
     fd2:	88 0f       	add	r24, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	82 1b       	sub	r24, r18
     fd8:	93 0b       	sbc	r25, r19
     fda:	fc 01       	movw	r30, r24
     fdc:	ef 57       	subi	r30, 0x7F	; 127
     fde:	fe 4f       	sbci	r31, 0xFE	; 254
     fe0:	80 81       	ld	r24, Z
     fe2:	91 81       	ldd	r25, Z+1	; 0x01
     fe4:	fa 01       	movw	r30, r20
     fe6:	09 95       	icall
        if (LOC_u32OsTicks > Local_u32Temp)
        {
            Local_u32Temp = LOC_u32OsTicks;
            // run scheduler
            // for (u8 u8Index = 0 ; u8Index < TMU_MAX_NUM_TASKS ; u8Index++) // 0 highest
            for (s8 s8Index = TMU_MAX_NUM_TASKS-1 ; s8Index >=0 ; s8Index --) // TMU_MAX_NUM_TASKS -1  -> highest
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	81 50       	subi	r24, 0x01	; 1
     fec:	89 83       	std	Y+1, r24	; 0x01
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	88 23       	and	r24, r24
     ff2:	0c f0       	brlt	.+2      	; 0xff6 <TMU_vidStartScheduler+0x164>
     ff4:	7e cf       	rjmp	.-260    	; 0xef2 <TMU_vidStartScheduler+0x60>
     ff6:	5d cf       	rjmp	.-326    	; 0xeb2 <TMU_vidStartScheduler+0x20>

00000ff8 <TMU_vidDelete>:
    }
    
}

void TMU_vidDelete(u8 Copy_u8Priority)
{
     ff8:	df 93       	push	r29
     ffa:	cf 93       	push	r28
     ffc:	0f 92       	push	r0
     ffe:	cd b7       	in	r28, 0x3d	; 61
    1000:	de b7       	in	r29, 0x3e	; 62
    1002:	89 83       	std	Y+1, r24	; 0x01
    if (Copy_u8Priority < TMU_MAX_NUM_TASKS)
    1004:	89 81       	ldd	r24, Y+1	; 0x01
    1006:	84 30       	cpi	r24, 0x04	; 4
    1008:	10 f5       	brcc	.+68     	; 0x104e <TMU_vidDelete+0x56>
    {
        LOC_astrTasks[ Copy_u8Priority ].state = DELETED;
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	c9 01       	movw	r24, r18
    1012:	88 0f       	add	r24, r24
    1014:	99 1f       	adc	r25, r25
    1016:	88 0f       	add	r24, r24
    1018:	99 1f       	adc	r25, r25
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	82 1b       	sub	r24, r18
    1020:	93 0b       	sbc	r25, r19
    1022:	fc 01       	movw	r30, r24
    1024:	eb 57       	subi	r30, 0x7B	; 123
    1026:	fe 4f       	sbci	r31, 0xFE	; 254
    1028:	82 e0       	ldi	r24, 0x02	; 2
    102a:	80 83       	st	Z, r24
        LOC_astrTasks[ Copy_u8Priority ].pfunTask = NULL;
    102c:	89 81       	ldd	r24, Y+1	; 0x01
    102e:	28 2f       	mov	r18, r24
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	c9 01       	movw	r24, r18
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	88 0f       	add	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	88 0f       	add	r24, r24
    103e:	99 1f       	adc	r25, r25
    1040:	82 1b       	sub	r24, r18
    1042:	93 0b       	sbc	r25, r19
    1044:	fc 01       	movw	r30, r24
    1046:	e1 58       	subi	r30, 0x81	; 129
    1048:	fe 4f       	sbci	r31, 0xFE	; 254
    104a:	11 82       	std	Z+1, r1	; 0x01
    104c:	10 82       	st	Z, r1
    }
}
    104e:	0f 90       	pop	r0
    1050:	cf 91       	pop	r28
    1052:	df 91       	pop	r29
    1054:	08 95       	ret

00001056 <TMU_vidResume>:

void TMU_vidResume(u8 Copy_u8Priority)
{
    1056:	df 93       	push	r29
    1058:	cf 93       	push	r28
    105a:	0f 92       	push	r0
    105c:	cd b7       	in	r28, 0x3d	; 61
    105e:	de b7       	in	r29, 0x3e	; 62
    1060:	89 83       	std	Y+1, r24	; 0x01
    if (Copy_u8Priority < TMU_MAX_NUM_TASKS)
    1062:	89 81       	ldd	r24, Y+1	; 0x01
    1064:	84 30       	cpi	r24, 0x04	; 4
    1066:	80 f4       	brcc	.+32     	; 0x1088 <TMU_vidResume+0x32>
    {
        LOC_astrTasks[ Copy_u8Priority ].state = READY;
    1068:	89 81       	ldd	r24, Y+1	; 0x01
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	c9 01       	movw	r24, r18
    1070:	88 0f       	add	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	88 0f       	add	r24, r24
    1076:	99 1f       	adc	r25, r25
    1078:	88 0f       	add	r24, r24
    107a:	99 1f       	adc	r25, r25
    107c:	82 1b       	sub	r24, r18
    107e:	93 0b       	sbc	r25, r19
    1080:	fc 01       	movw	r30, r24
    1082:	eb 57       	subi	r30, 0x7B	; 123
    1084:	fe 4f       	sbci	r31, 0xFE	; 254
    1086:	10 82       	st	Z, r1
    }
}
    1088:	0f 90       	pop	r0
    108a:	cf 91       	pop	r28
    108c:	df 91       	pop	r29
    108e:	08 95       	ret

00001090 <TMU_vidPause>:
void TMU_vidPause(u8 Copy_u8Priority)
{
    1090:	df 93       	push	r29
    1092:	cf 93       	push	r28
    1094:	0f 92       	push	r0
    1096:	cd b7       	in	r28, 0x3d	; 61
    1098:	de b7       	in	r29, 0x3e	; 62
    109a:	89 83       	std	Y+1, r24	; 0x01
    if (Copy_u8Priority < TMU_MAX_NUM_TASKS)
    109c:	89 81       	ldd	r24, Y+1	; 0x01
    109e:	84 30       	cpi	r24, 0x04	; 4
    10a0:	88 f4       	brcc	.+34     	; 0x10c4 <TMU_vidPause+0x34>
    {
        LOC_astrTasks[ Copy_u8Priority ].state = SUSPENDED;
    10a2:	89 81       	ldd	r24, Y+1	; 0x01
    10a4:	28 2f       	mov	r18, r24
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	c9 01       	movw	r24, r18
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	88 0f       	add	r24, r24
    10b0:	99 1f       	adc	r25, r25
    10b2:	88 0f       	add	r24, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	82 1b       	sub	r24, r18
    10b8:	93 0b       	sbc	r25, r19
    10ba:	fc 01       	movw	r30, r24
    10bc:	eb 57       	subi	r30, 0x7B	; 123
    10be:	fe 4f       	sbci	r31, 0xFE	; 254
    10c0:	81 e0       	ldi	r24, 0x01	; 1
    10c2:	80 83       	st	Z, r24
    }
}
    10c4:	0f 90       	pop	r0
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	08 95       	ret

000010cc <__vector_5>:
    LOC_u32OsTicks++;
}
#elif TMU_TIMER_CHANNEL == TIMER2
void __vector_5 (void)__attribute__((signal));
void __vector_5 (void)
{
    10cc:	1f 92       	push	r1
    10ce:	0f 92       	push	r0
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	0f 92       	push	r0
    10d4:	11 24       	eor	r1, r1
    10d6:	8f 93       	push	r24
    10d8:	9f 93       	push	r25
    10da:	af 93       	push	r26
    10dc:	bf 93       	push	r27
    10de:	ef 93       	push	r30
    10e0:	ff 93       	push	r31
    10e2:	df 93       	push	r29
    10e4:	cf 93       	push	r28
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    LOC_u16CountISRs--;
    10ea:	80 91 78 01 	lds	r24, 0x0178
    10ee:	90 91 79 01 	lds	r25, 0x0179
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	90 93 79 01 	sts	0x0179, r25
    10f8:	80 93 78 01 	sts	0x0178, r24
    if (! LOC_u16CountISRs)
    10fc:	80 91 78 01 	lds	r24, 0x0178
    1100:	90 91 79 01 	lds	r25, 0x0179
    1104:	00 97       	sbiw	r24, 0x00	; 0
    1106:	01 f5       	brne	.+64     	; 0x1148 <__vector_5+0x7c>
    {
        TCNT2 = LOC_u8Preload;
    1108:	e4 e4       	ldi	r30, 0x44	; 68
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	80 91 7a 01 	lds	r24, 0x017A
    1110:	80 83       	st	Z, r24

        LOC_u32OsTicks++;
    1112:	80 91 7b 01 	lds	r24, 0x017B
    1116:	90 91 7c 01 	lds	r25, 0x017C
    111a:	a0 91 7d 01 	lds	r26, 0x017D
    111e:	b0 91 7e 01 	lds	r27, 0x017E
    1122:	01 96       	adiw	r24, 0x01	; 1
    1124:	a1 1d       	adc	r26, r1
    1126:	b1 1d       	adc	r27, r1
    1128:	80 93 7b 01 	sts	0x017B, r24
    112c:	90 93 7c 01 	sts	0x017C, r25
    1130:	a0 93 7d 01 	sts	0x017D, r26
    1134:	b0 93 7e 01 	sts	0x017E, r27

        LOC_u16CountISRs = LOC_u16NumOfOvfs;
    1138:	80 91 76 01 	lds	r24, 0x0176
    113c:	90 91 77 01 	lds	r25, 0x0177
    1140:	90 93 79 01 	sts	0x0179, r25
    1144:	80 93 78 01 	sts	0x0178, r24
    }
    
}
    1148:	cf 91       	pop	r28
    114a:	df 91       	pop	r29
    114c:	ff 91       	pop	r31
    114e:	ef 91       	pop	r30
    1150:	bf 91       	pop	r27
    1152:	af 91       	pop	r26
    1154:	9f 91       	pop	r25
    1156:	8f 91       	pop	r24
    1158:	0f 90       	pop	r0
    115a:	0f be       	out	0x3f, r0	; 63
    115c:	0f 90       	pop	r0
    115e:	1f 90       	pop	r1
    1160:	18 95       	reti

00001162 <Timer0_vidInit>:
static u8 Timer0_u8Preload;
static u16 Timer0_u16ISRCounter;
static u8 Timer0_u8CTCValue;

void Timer0_vidInit(void)
{
    1162:	df 93       	push	r29
    1164:	cf 93       	push	r28
    1166:	cd b7       	in	r28, 0x3d	; 61
    1168:	de b7       	in	r29, 0x3e	; 62
   #if TIMER0_PRESCALER == 0
       TCCR0 &=~(7<<0);
       #warning timer0 has been stopped by 0 prescaler
	#elif TIMER0_PRESCALER == 8
		TCCR0 &=~(7<<0);
    116a:	a3 e5       	ldi	r26, 0x53	; 83
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	e3 e5       	ldi	r30, 0x53	; 83
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	80 81       	ld	r24, Z
    1174:	88 7f       	andi	r24, 0xF8	; 248
    1176:	8c 93       	st	X, r24
		TCCR0 |= (2<<0);
    1178:	a3 e5       	ldi	r26, 0x53	; 83
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	e3 e5       	ldi	r30, 0x53	; 83
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	80 81       	ld	r24, Z
    1182:	82 60       	ori	r24, 0x02	; 2
    1184:	8c 93       	st	X, r24
       TCCR0 &=~(7<<0);
       TCCR0 |= (5<<0);
   #endif

   #if TIMER0_MODE ==  TIMER0_OVF
       TCCR0 &= ~(9<<3);
    1186:	a3 e5       	ldi	r26, 0x53	; 83
    1188:	b0 e0       	ldi	r27, 0x00	; 0
    118a:	e3 e5       	ldi	r30, 0x53	; 83
    118c:	f0 e0       	ldi	r31, 0x00	; 0
    118e:	80 81       	ld	r24, Z
    1190:	87 7b       	andi	r24, 0xB7	; 183
    1192:	8c 93       	st	X, r24
       TCCR0 |= (1<<3);
   #endif

   #if TIMER0_INTERRUPT_MODE == TIMER0_INTERRUPT
       #if TIMER0_MODE == TIMER0_OVF
           TIMSK |=(1<<0);
    1194:	a9 e5       	ldi	r26, 0x59	; 89
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e9 e5       	ldi	r30, 0x59	; 89
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	81 60       	ori	r24, 0x01	; 1
    11a0:	8c 93       	st	X, r24
       #elif TIMER0_MODE == TIMER0_CTC
           TIMSK &=~(1<<1);
       #endif
   #endif

}
    11a2:	cf 91       	pop	r28
    11a4:	df 91       	pop	r29
    11a6:	08 95       	ret

000011a8 <Timer0_vidSetAschDelay>:

void Timer0_vidSetAschDelay(u32 Copy_u32MilliSecond , void (*Copy_pfunAppFun)(void))
{
    11a8:	2f 92       	push	r2
    11aa:	3f 92       	push	r3
    11ac:	4f 92       	push	r4
    11ae:	5f 92       	push	r5
    11b0:	6f 92       	push	r6
    11b2:	7f 92       	push	r7
    11b4:	8f 92       	push	r8
    11b6:	9f 92       	push	r9
    11b8:	af 92       	push	r10
    11ba:	bf 92       	push	r11
    11bc:	cf 92       	push	r12
    11be:	df 92       	push	r13
    11c0:	ef 92       	push	r14
    11c2:	ff 92       	push	r15
    11c4:	0f 93       	push	r16
    11c6:	1f 93       	push	r17
    11c8:	df 93       	push	r29
    11ca:	cf 93       	push	r28
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	c8 55       	subi	r28, 0x58	; 88
    11d2:	d0 40       	sbci	r29, 0x00	; 0
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	de bf       	out	0x3e, r29	; 62
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	cd bf       	out	0x3d, r28	; 61
    11de:	6d 83       	std	Y+5, r22	; 0x05
    11e0:	7e 83       	std	Y+6, r23	; 0x06
    11e2:	8f 83       	std	Y+7, r24	; 0x07
    11e4:	98 87       	std	Y+8, r25	; 0x08
    11e6:	5a 87       	std	Y+10, r21	; 0x0a
    11e8:	49 87       	std	Y+9, r20	; 0x09
#if TIMER0_INTERRUPT_MODE == TIMER0_INTERRUPT
   #if TIMER0_MODE == TIMER0_OVF
       if (Copy_pfunAppFun != NULL)
    11ea:	89 85       	ldd	r24, Y+9	; 0x09
    11ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ee:	00 97       	sbiw	r24, 0x00	; 0
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <Timer0_vidSetAschDelay+0x4c>
    11f2:	fd c2       	rjmp	.+1530   	; 0x17ee <Timer0_vidSetAschDelay+0x646>
       {
           u32 Local_u32Counts = (16000llu * Copy_u32MilliSecond) / TIMER0_PRESCALER;
    11f4:	8d 81       	ldd	r24, Y+5	; 0x05
    11f6:	9e 81       	ldd	r25, Y+6	; 0x06
    11f8:	af 81       	ldd	r26, Y+7	; 0x07
    11fa:	b8 85       	ldd	r27, Y+8	; 0x08
    11fc:	8c 01       	movw	r16, r24
    11fe:	9d 01       	movw	r18, r26
    1200:	40 e0       	ldi	r20, 0x00	; 0
    1202:	50 e0       	ldi	r21, 0x00	; 0
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	0b 87       	std	Y+11, r16	; 0x0b
    120a:	1c 87       	std	Y+12, r17	; 0x0c
    120c:	2d 87       	std	Y+13, r18	; 0x0d
    120e:	3e 87       	std	Y+14, r19	; 0x0e
    1210:	4f 87       	std	Y+15, r20	; 0x0f
    1212:	58 8b       	std	Y+16, r21	; 0x10
    1214:	69 8b       	std	Y+17, r22	; 0x11
    1216:	7a 8b       	std	Y+18, r23	; 0x12
    1218:	ab 84       	ldd	r10, Y+11	; 0x0b
    121a:	bc 84       	ldd	r11, Y+12	; 0x0c
    121c:	cd 84       	ldd	r12, Y+13	; 0x0d
    121e:	de 84       	ldd	r13, Y+14	; 0x0e
    1220:	ef 84       	ldd	r14, Y+15	; 0x0f
    1222:	f8 88       	ldd	r15, Y+16	; 0x10
    1224:	09 89       	ldd	r16, Y+17	; 0x11
    1226:	1a 89       	ldd	r17, Y+18	; 0x12
    1228:	2a 2d       	mov	r18, r10
    122a:	3b 2d       	mov	r19, r11
    122c:	4c 2d       	mov	r20, r12
    122e:	5d 2d       	mov	r21, r13
    1230:	6e 2d       	mov	r22, r14
    1232:	7f 2d       	mov	r23, r15
    1234:	80 2f       	mov	r24, r16
    1236:	91 2f       	mov	r25, r17
    1238:	02 e0       	ldi	r16, 0x02	; 2
    123a:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    123e:	2b 8b       	std	Y+19, r18	; 0x13
    1240:	3c 8b       	std	Y+20, r19	; 0x14
    1242:	4d 8b       	std	Y+21, r20	; 0x15
    1244:	5e 8b       	std	Y+22, r21	; 0x16
    1246:	6f 8b       	std	Y+23, r22	; 0x17
    1248:	78 8f       	std	Y+24, r23	; 0x18
    124a:	89 8f       	std	Y+25, r24	; 0x19
    124c:	9a 8f       	std	Y+26, r25	; 0x1a
    124e:	2b 89       	ldd	r18, Y+19	; 0x13
    1250:	3c 89       	ldd	r19, Y+20	; 0x14
    1252:	4d 89       	ldd	r20, Y+21	; 0x15
    1254:	5e 89       	ldd	r21, Y+22	; 0x16
    1256:	6f 89       	ldd	r22, Y+23	; 0x17
    1258:	78 8d       	ldd	r23, Y+24	; 0x18
    125a:	89 8d       	ldd	r24, Y+25	; 0x19
    125c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    125e:	05 e0       	ldi	r16, 0x05	; 5
    1260:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    1264:	2b 8f       	std	Y+27, r18	; 0x1b
    1266:	3c 8f       	std	Y+28, r19	; 0x1c
    1268:	4d 8f       	std	Y+29, r20	; 0x1d
    126a:	5e 8f       	std	Y+30, r21	; 0x1e
    126c:	6f 8f       	std	Y+31, r22	; 0x1f
    126e:	78 a3       	std	Y+32, r23	; 0x20
    1270:	89 a3       	std	Y+33, r24	; 0x21
    1272:	9a a3       	std	Y+34, r25	; 0x22
    1274:	1b 8d       	ldd	r17, Y+27	; 0x1b
    1276:	2b 89       	ldd	r18, Y+19	; 0x13
    1278:	12 1b       	sub	r17, r18
    127a:	1b a3       	std	Y+35, r17	; 0x23
    127c:	31 e0       	ldi	r19, 0x01	; 1
    127e:	3b a7       	std	Y+43, r19	; 0x2b
    1280:	4b a1       	ldd	r20, Y+35	; 0x23
    1282:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1284:	54 17       	cp	r21, r20
    1286:	08 f0       	brcs	.+2      	; 0x128a <Timer0_vidSetAschDelay+0xe2>
    1288:	1b a6       	std	Y+43, r1	; 0x2b
    128a:	6c 8d       	ldd	r22, Y+28	; 0x1c
    128c:	7c 89       	ldd	r23, Y+20	; 0x14
    128e:	67 1b       	sub	r22, r23
    1290:	6c a3       	std	Y+36, r22	; 0x24
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	8c a7       	std	Y+44, r24	; 0x2c
    1296:	9c a1       	ldd	r25, Y+36	; 0x24
    1298:	0c 8d       	ldd	r16, Y+28	; 0x1c
    129a:	09 17       	cp	r16, r25
    129c:	08 f0       	brcs	.+2      	; 0x12a0 <Timer0_vidSetAschDelay+0xf8>
    129e:	1c a6       	std	Y+44, r1	; 0x2c
    12a0:	1c a1       	ldd	r17, Y+36	; 0x24
    12a2:	2b a5       	ldd	r18, Y+43	; 0x2b
    12a4:	12 1b       	sub	r17, r18
    12a6:	1d a7       	std	Y+45, r17	; 0x2d
    12a8:	31 e0       	ldi	r19, 0x01	; 1
    12aa:	3e a7       	std	Y+46, r19	; 0x2e
    12ac:	4d a5       	ldd	r20, Y+45	; 0x2d
    12ae:	5c a1       	ldd	r21, Y+36	; 0x24
    12b0:	54 17       	cp	r21, r20
    12b2:	08 f0       	brcs	.+2      	; 0x12b6 <Timer0_vidSetAschDelay+0x10e>
    12b4:	1e a6       	std	Y+46, r1	; 0x2e
    12b6:	6c a5       	ldd	r22, Y+44	; 0x2c
    12b8:	7e a5       	ldd	r23, Y+46	; 0x2e
    12ba:	67 2b       	or	r22, r23
    12bc:	6c a7       	std	Y+44, r22	; 0x2c
    12be:	8d a5       	ldd	r24, Y+45	; 0x2d
    12c0:	8c a3       	std	Y+36, r24	; 0x24
    12c2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    12c4:	0d 89       	ldd	r16, Y+21	; 0x15
    12c6:	90 1b       	sub	r25, r16
    12c8:	9d a3       	std	Y+37, r25	; 0x25
    12ca:	11 e0       	ldi	r17, 0x01	; 1
    12cc:	1f a7       	std	Y+47, r17	; 0x2f
    12ce:	2d a1       	ldd	r18, Y+37	; 0x25
    12d0:	3d 8d       	ldd	r19, Y+29	; 0x1d
    12d2:	32 17       	cp	r19, r18
    12d4:	08 f0       	brcs	.+2      	; 0x12d8 <Timer0_vidSetAschDelay+0x130>
    12d6:	1f a6       	std	Y+47, r1	; 0x2f
    12d8:	4d a1       	ldd	r20, Y+37	; 0x25
    12da:	5c a5       	ldd	r21, Y+44	; 0x2c
    12dc:	45 1b       	sub	r20, r21
    12de:	48 ab       	std	Y+48, r20	; 0x30
    12e0:	61 e0       	ldi	r22, 0x01	; 1
    12e2:	69 ab       	std	Y+49, r22	; 0x31
    12e4:	78 a9       	ldd	r23, Y+48	; 0x30
    12e6:	8d a1       	ldd	r24, Y+37	; 0x25
    12e8:	87 17       	cp	r24, r23
    12ea:	08 f0       	brcs	.+2      	; 0x12ee <Timer0_vidSetAschDelay+0x146>
    12ec:	19 aa       	std	Y+49, r1	; 0x31
    12ee:	9f a5       	ldd	r25, Y+47	; 0x2f
    12f0:	09 a9       	ldd	r16, Y+49	; 0x31
    12f2:	90 2b       	or	r25, r16
    12f4:	9f a7       	std	Y+47, r25	; 0x2f
    12f6:	18 a9       	ldd	r17, Y+48	; 0x30
    12f8:	1d a3       	std	Y+37, r17	; 0x25
    12fa:	2e 8d       	ldd	r18, Y+30	; 0x1e
    12fc:	3e 89       	ldd	r19, Y+22	; 0x16
    12fe:	23 1b       	sub	r18, r19
    1300:	2e a3       	std	Y+38, r18	; 0x26
    1302:	41 e0       	ldi	r20, 0x01	; 1
    1304:	4a ab       	std	Y+50, r20	; 0x32
    1306:	5e a1       	ldd	r21, Y+38	; 0x26
    1308:	6e 8d       	ldd	r22, Y+30	; 0x1e
    130a:	65 17       	cp	r22, r21
    130c:	08 f0       	brcs	.+2      	; 0x1310 <Timer0_vidSetAschDelay+0x168>
    130e:	1a aa       	std	Y+50, r1	; 0x32
    1310:	7e a1       	ldd	r23, Y+38	; 0x26
    1312:	8f a5       	ldd	r24, Y+47	; 0x2f
    1314:	78 1b       	sub	r23, r24
    1316:	7b ab       	std	Y+51, r23	; 0x33
    1318:	91 e0       	ldi	r25, 0x01	; 1
    131a:	9c ab       	std	Y+52, r25	; 0x34
    131c:	0b a9       	ldd	r16, Y+51	; 0x33
    131e:	1e a1       	ldd	r17, Y+38	; 0x26
    1320:	10 17       	cp	r17, r16
    1322:	08 f0       	brcs	.+2      	; 0x1326 <Timer0_vidSetAschDelay+0x17e>
    1324:	1c aa       	std	Y+52, r1	; 0x34
    1326:	2a a9       	ldd	r18, Y+50	; 0x32
    1328:	3c a9       	ldd	r19, Y+52	; 0x34
    132a:	23 2b       	or	r18, r19
    132c:	2a ab       	std	Y+50, r18	; 0x32
    132e:	4b a9       	ldd	r20, Y+51	; 0x33
    1330:	4e a3       	std	Y+38, r20	; 0x26
    1332:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1334:	6f 89       	ldd	r22, Y+23	; 0x17
    1336:	56 1b       	sub	r21, r22
    1338:	5f a3       	std	Y+39, r21	; 0x27
    133a:	71 e0       	ldi	r23, 0x01	; 1
    133c:	7d ab       	std	Y+53, r23	; 0x35
    133e:	8f a1       	ldd	r24, Y+39	; 0x27
    1340:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1342:	98 17       	cp	r25, r24
    1344:	08 f0       	brcs	.+2      	; 0x1348 <Timer0_vidSetAschDelay+0x1a0>
    1346:	1d aa       	std	Y+53, r1	; 0x35
    1348:	0f a1       	ldd	r16, Y+39	; 0x27
    134a:	1a a9       	ldd	r17, Y+50	; 0x32
    134c:	01 1b       	sub	r16, r17
    134e:	0e ab       	std	Y+54, r16	; 0x36
    1350:	21 e0       	ldi	r18, 0x01	; 1
    1352:	2f ab       	std	Y+55, r18	; 0x37
    1354:	3e a9       	ldd	r19, Y+54	; 0x36
    1356:	4f a1       	ldd	r20, Y+39	; 0x27
    1358:	43 17       	cp	r20, r19
    135a:	08 f0       	brcs	.+2      	; 0x135e <Timer0_vidSetAschDelay+0x1b6>
    135c:	1f aa       	std	Y+55, r1	; 0x37
    135e:	5d a9       	ldd	r21, Y+53	; 0x35
    1360:	6f a9       	ldd	r22, Y+55	; 0x37
    1362:	56 2b       	or	r21, r22
    1364:	5d ab       	std	Y+53, r21	; 0x35
    1366:	7e a9       	ldd	r23, Y+54	; 0x36
    1368:	7f a3       	std	Y+39, r23	; 0x27
    136a:	88 a1       	ldd	r24, Y+32	; 0x20
    136c:	98 8d       	ldd	r25, Y+24	; 0x18
    136e:	89 1b       	sub	r24, r25
    1370:	88 a7       	std	Y+40, r24	; 0x28
    1372:	01 e0       	ldi	r16, 0x01	; 1
    1374:	08 af       	std	Y+56, r16	; 0x38
    1376:	18 a5       	ldd	r17, Y+40	; 0x28
    1378:	28 a1       	ldd	r18, Y+32	; 0x20
    137a:	21 17       	cp	r18, r17
    137c:	08 f0       	brcs	.+2      	; 0x1380 <Timer0_vidSetAschDelay+0x1d8>
    137e:	18 ae       	std	Y+56, r1	; 0x38
    1380:	38 a5       	ldd	r19, Y+40	; 0x28
    1382:	4d a9       	ldd	r20, Y+53	; 0x35
    1384:	34 1b       	sub	r19, r20
    1386:	39 af       	std	Y+57, r19	; 0x39
    1388:	51 e0       	ldi	r21, 0x01	; 1
    138a:	5a af       	std	Y+58, r21	; 0x3a
    138c:	69 ad       	ldd	r22, Y+57	; 0x39
    138e:	78 a5       	ldd	r23, Y+40	; 0x28
    1390:	76 17       	cp	r23, r22
    1392:	08 f0       	brcs	.+2      	; 0x1396 <Timer0_vidSetAschDelay+0x1ee>
    1394:	1a ae       	std	Y+58, r1	; 0x3a
    1396:	88 ad       	ldd	r24, Y+56	; 0x38
    1398:	9a ad       	ldd	r25, Y+58	; 0x3a
    139a:	89 2b       	or	r24, r25
    139c:	88 af       	std	Y+56, r24	; 0x38
    139e:	09 ad       	ldd	r16, Y+57	; 0x39
    13a0:	08 a7       	std	Y+40, r16	; 0x28
    13a2:	19 a1       	ldd	r17, Y+33	; 0x21
    13a4:	29 8d       	ldd	r18, Y+25	; 0x19
    13a6:	12 1b       	sub	r17, r18
    13a8:	19 a7       	std	Y+41, r17	; 0x29
    13aa:	31 e0       	ldi	r19, 0x01	; 1
    13ac:	3b af       	std	Y+59, r19	; 0x3b
    13ae:	49 a5       	ldd	r20, Y+41	; 0x29
    13b0:	59 a1       	ldd	r21, Y+33	; 0x21
    13b2:	54 17       	cp	r21, r20
    13b4:	08 f0       	brcs	.+2      	; 0x13b8 <Timer0_vidSetAschDelay+0x210>
    13b6:	1b ae       	std	Y+59, r1	; 0x3b
    13b8:	69 a5       	ldd	r22, Y+41	; 0x29
    13ba:	78 ad       	ldd	r23, Y+56	; 0x38
    13bc:	67 1b       	sub	r22, r23
    13be:	6c af       	std	Y+60, r22	; 0x3c
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	8d af       	std	Y+61, r24	; 0x3d
    13c4:	9c ad       	ldd	r25, Y+60	; 0x3c
    13c6:	09 a5       	ldd	r16, Y+41	; 0x29
    13c8:	09 17       	cp	r16, r25
    13ca:	08 f0       	brcs	.+2      	; 0x13ce <Timer0_vidSetAschDelay+0x226>
    13cc:	1d ae       	std	Y+61, r1	; 0x3d
    13ce:	1b ad       	ldd	r17, Y+59	; 0x3b
    13d0:	2d ad       	ldd	r18, Y+61	; 0x3d
    13d2:	12 2b       	or	r17, r18
    13d4:	1b af       	std	Y+59, r17	; 0x3b
    13d6:	3c ad       	ldd	r19, Y+60	; 0x3c
    13d8:	39 a7       	std	Y+41, r19	; 0x29
    13da:	4a a1       	ldd	r20, Y+34	; 0x22
    13dc:	5a 8d       	ldd	r21, Y+26	; 0x1a
    13de:	45 1b       	sub	r20, r21
    13e0:	4a a7       	std	Y+42, r20	; 0x2a
    13e2:	8a a5       	ldd	r24, Y+42	; 0x2a
    13e4:	6b ad       	ldd	r22, Y+59	; 0x3b
    13e6:	86 1b       	sub	r24, r22
    13e8:	8a a7       	std	Y+42, r24	; 0x2a
    13ea:	7b a1       	ldd	r23, Y+35	; 0x23
    13ec:	7b 8f       	std	Y+27, r23	; 0x1b
    13ee:	8c a1       	ldd	r24, Y+36	; 0x24
    13f0:	8c 8f       	std	Y+28, r24	; 0x1c
    13f2:	9d a1       	ldd	r25, Y+37	; 0x25
    13f4:	9d 8f       	std	Y+29, r25	; 0x1d
    13f6:	0e a1       	ldd	r16, Y+38	; 0x26
    13f8:	0e 8f       	std	Y+30, r16	; 0x1e
    13fa:	1f a1       	ldd	r17, Y+39	; 0x27
    13fc:	1f 8f       	std	Y+31, r17	; 0x1f
    13fe:	28 a5       	ldd	r18, Y+40	; 0x28
    1400:	28 a3       	std	Y+32, r18	; 0x20
    1402:	39 a5       	ldd	r19, Y+41	; 0x29
    1404:	39 a3       	std	Y+33, r19	; 0x21
    1406:	4a a5       	ldd	r20, Y+42	; 0x2a
    1408:	4a a3       	std	Y+34, r20	; 0x22
    140a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    140c:	6b 85       	ldd	r22, Y+11	; 0x0b
    140e:	56 0f       	add	r21, r22
    1410:	5e af       	std	Y+62, r21	; 0x3e
    1412:	71 e0       	ldi	r23, 0x01	; 1
    1414:	27 96       	adiw	r28, 0x07	; 7
    1416:	7f af       	std	Y+63, r23	; 0x3f
    1418:	27 97       	sbiw	r28, 0x07	; 7
    141a:	8e ad       	ldd	r24, Y+62	; 0x3e
    141c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    141e:	89 17       	cp	r24, r25
    1420:	18 f0       	brcs	.+6      	; 0x1428 <Timer0_vidSetAschDelay+0x280>
    1422:	27 96       	adiw	r28, 0x07	; 7
    1424:	1f ae       	std	Y+63, r1	; 0x3f
    1426:	27 97       	sbiw	r28, 0x07	; 7
    1428:	0c 8d       	ldd	r16, Y+28	; 0x1c
    142a:	1c 85       	ldd	r17, Y+12	; 0x0c
    142c:	01 0f       	add	r16, r17
    142e:	0f af       	std	Y+63, r16	; 0x3f
    1430:	21 e0       	ldi	r18, 0x01	; 1
    1432:	28 96       	adiw	r28, 0x08	; 8
    1434:	2f af       	std	Y+63, r18	; 0x3f
    1436:	28 97       	sbiw	r28, 0x08	; 8
    1438:	3f ad       	ldd	r19, Y+63	; 0x3f
    143a:	4c 8d       	ldd	r20, Y+28	; 0x1c
    143c:	34 17       	cp	r19, r20
    143e:	18 f0       	brcs	.+6      	; 0x1446 <Timer0_vidSetAschDelay+0x29e>
    1440:	28 96       	adiw	r28, 0x08	; 8
    1442:	1f ae       	std	Y+63, r1	; 0x3f
    1444:	28 97       	sbiw	r28, 0x08	; 8
    1446:	27 96       	adiw	r28, 0x07	; 7
    1448:	5f ad       	ldd	r21, Y+63	; 0x3f
    144a:	27 97       	sbiw	r28, 0x07	; 7
    144c:	6f ad       	ldd	r22, Y+63	; 0x3f
    144e:	56 0f       	add	r21, r22
    1450:	29 96       	adiw	r28, 0x09	; 9
    1452:	5f af       	std	Y+63, r21	; 0x3f
    1454:	29 97       	sbiw	r28, 0x09	; 9
    1456:	71 e0       	ldi	r23, 0x01	; 1
    1458:	2a 96       	adiw	r28, 0x0a	; 10
    145a:	7f af       	std	Y+63, r23	; 0x3f
    145c:	2a 97       	sbiw	r28, 0x0a	; 10
    145e:	29 96       	adiw	r28, 0x09	; 9
    1460:	8f ad       	ldd	r24, Y+63	; 0x3f
    1462:	29 97       	sbiw	r28, 0x09	; 9
    1464:	9f ad       	ldd	r25, Y+63	; 0x3f
    1466:	89 17       	cp	r24, r25
    1468:	18 f0       	brcs	.+6      	; 0x1470 <Timer0_vidSetAschDelay+0x2c8>
    146a:	2a 96       	adiw	r28, 0x0a	; 10
    146c:	1f ae       	std	Y+63, r1	; 0x3f
    146e:	2a 97       	sbiw	r28, 0x0a	; 10
    1470:	28 96       	adiw	r28, 0x08	; 8
    1472:	0f ad       	ldd	r16, Y+63	; 0x3f
    1474:	28 97       	sbiw	r28, 0x08	; 8
    1476:	2a 96       	adiw	r28, 0x0a	; 10
    1478:	1f ad       	ldd	r17, Y+63	; 0x3f
    147a:	2a 97       	sbiw	r28, 0x0a	; 10
    147c:	01 2b       	or	r16, r17
    147e:	28 96       	adiw	r28, 0x08	; 8
    1480:	0f af       	std	Y+63, r16	; 0x3f
    1482:	28 97       	sbiw	r28, 0x08	; 8
    1484:	29 96       	adiw	r28, 0x09	; 9
    1486:	2f ad       	ldd	r18, Y+63	; 0x3f
    1488:	29 97       	sbiw	r28, 0x09	; 9
    148a:	2f af       	std	Y+63, r18	; 0x3f
    148c:	3d 8d       	ldd	r19, Y+29	; 0x1d
    148e:	4d 85       	ldd	r20, Y+13	; 0x0d
    1490:	34 0f       	add	r19, r20
    1492:	21 96       	adiw	r28, 0x01	; 1
    1494:	3f af       	std	Y+63, r19	; 0x3f
    1496:	21 97       	sbiw	r28, 0x01	; 1
    1498:	51 e0       	ldi	r21, 0x01	; 1
    149a:	2b 96       	adiw	r28, 0x0b	; 11
    149c:	5f af       	std	Y+63, r21	; 0x3f
    149e:	2b 97       	sbiw	r28, 0x0b	; 11
    14a0:	21 96       	adiw	r28, 0x01	; 1
    14a2:	6f ad       	ldd	r22, Y+63	; 0x3f
    14a4:	21 97       	sbiw	r28, 0x01	; 1
    14a6:	7d 8d       	ldd	r23, Y+29	; 0x1d
    14a8:	67 17       	cp	r22, r23
    14aa:	18 f0       	brcs	.+6      	; 0x14b2 <Timer0_vidSetAschDelay+0x30a>
    14ac:	2b 96       	adiw	r28, 0x0b	; 11
    14ae:	1f ae       	std	Y+63, r1	; 0x3f
    14b0:	2b 97       	sbiw	r28, 0x0b	; 11
    14b2:	28 96       	adiw	r28, 0x08	; 8
    14b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    14b6:	28 97       	sbiw	r28, 0x08	; 8
    14b8:	21 96       	adiw	r28, 0x01	; 1
    14ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    14bc:	21 97       	sbiw	r28, 0x01	; 1
    14be:	89 0f       	add	r24, r25
    14c0:	2c 96       	adiw	r28, 0x0c	; 12
    14c2:	8f af       	std	Y+63, r24	; 0x3f
    14c4:	2c 97       	sbiw	r28, 0x0c	; 12
    14c6:	01 e0       	ldi	r16, 0x01	; 1
    14c8:	2d 96       	adiw	r28, 0x0d	; 13
    14ca:	0f af       	std	Y+63, r16	; 0x3f
    14cc:	2d 97       	sbiw	r28, 0x0d	; 13
    14ce:	2c 96       	adiw	r28, 0x0c	; 12
    14d0:	1f ad       	ldd	r17, Y+63	; 0x3f
    14d2:	2c 97       	sbiw	r28, 0x0c	; 12
    14d4:	21 96       	adiw	r28, 0x01	; 1
    14d6:	2f ad       	ldd	r18, Y+63	; 0x3f
    14d8:	21 97       	sbiw	r28, 0x01	; 1
    14da:	12 17       	cp	r17, r18
    14dc:	18 f0       	brcs	.+6      	; 0x14e4 <Timer0_vidSetAschDelay+0x33c>
    14de:	2d 96       	adiw	r28, 0x0d	; 13
    14e0:	1f ae       	std	Y+63, r1	; 0x3f
    14e2:	2d 97       	sbiw	r28, 0x0d	; 13
    14e4:	2b 96       	adiw	r28, 0x0b	; 11
    14e6:	3f ad       	ldd	r19, Y+63	; 0x3f
    14e8:	2b 97       	sbiw	r28, 0x0b	; 11
    14ea:	2d 96       	adiw	r28, 0x0d	; 13
    14ec:	4f ad       	ldd	r20, Y+63	; 0x3f
    14ee:	2d 97       	sbiw	r28, 0x0d	; 13
    14f0:	34 2b       	or	r19, r20
    14f2:	2b 96       	adiw	r28, 0x0b	; 11
    14f4:	3f af       	std	Y+63, r19	; 0x3f
    14f6:	2b 97       	sbiw	r28, 0x0b	; 11
    14f8:	2c 96       	adiw	r28, 0x0c	; 12
    14fa:	5f ad       	ldd	r21, Y+63	; 0x3f
    14fc:	2c 97       	sbiw	r28, 0x0c	; 12
    14fe:	21 96       	adiw	r28, 0x01	; 1
    1500:	5f af       	std	Y+63, r21	; 0x3f
    1502:	21 97       	sbiw	r28, 0x01	; 1
    1504:	6e 8d       	ldd	r22, Y+30	; 0x1e
    1506:	7e 85       	ldd	r23, Y+14	; 0x0e
    1508:	67 0f       	add	r22, r23
    150a:	22 96       	adiw	r28, 0x02	; 2
    150c:	6f af       	std	Y+63, r22	; 0x3f
    150e:	22 97       	sbiw	r28, 0x02	; 2
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	2e 96       	adiw	r28, 0x0e	; 14
    1514:	8f af       	std	Y+63, r24	; 0x3f
    1516:	2e 97       	sbiw	r28, 0x0e	; 14
    1518:	22 96       	adiw	r28, 0x02	; 2
    151a:	9f ad       	ldd	r25, Y+63	; 0x3f
    151c:	22 97       	sbiw	r28, 0x02	; 2
    151e:	0e 8d       	ldd	r16, Y+30	; 0x1e
    1520:	90 17       	cp	r25, r16
    1522:	18 f0       	brcs	.+6      	; 0x152a <Timer0_vidSetAschDelay+0x382>
    1524:	2e 96       	adiw	r28, 0x0e	; 14
    1526:	1f ae       	std	Y+63, r1	; 0x3f
    1528:	2e 97       	sbiw	r28, 0x0e	; 14
    152a:	2b 96       	adiw	r28, 0x0b	; 11
    152c:	1f ad       	ldd	r17, Y+63	; 0x3f
    152e:	2b 97       	sbiw	r28, 0x0b	; 11
    1530:	22 96       	adiw	r28, 0x02	; 2
    1532:	2f ad       	ldd	r18, Y+63	; 0x3f
    1534:	22 97       	sbiw	r28, 0x02	; 2
    1536:	12 0f       	add	r17, r18
    1538:	2f 96       	adiw	r28, 0x0f	; 15
    153a:	1f af       	std	Y+63, r17	; 0x3f
    153c:	2f 97       	sbiw	r28, 0x0f	; 15
    153e:	31 e0       	ldi	r19, 0x01	; 1
    1540:	60 96       	adiw	r28, 0x10	; 16
    1542:	3f af       	std	Y+63, r19	; 0x3f
    1544:	60 97       	sbiw	r28, 0x10	; 16
    1546:	2f 96       	adiw	r28, 0x0f	; 15
    1548:	4f ad       	ldd	r20, Y+63	; 0x3f
    154a:	2f 97       	sbiw	r28, 0x0f	; 15
    154c:	22 96       	adiw	r28, 0x02	; 2
    154e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1550:	22 97       	sbiw	r28, 0x02	; 2
    1552:	45 17       	cp	r20, r21
    1554:	18 f0       	brcs	.+6      	; 0x155c <Timer0_vidSetAschDelay+0x3b4>
    1556:	60 96       	adiw	r28, 0x10	; 16
    1558:	1f ae       	std	Y+63, r1	; 0x3f
    155a:	60 97       	sbiw	r28, 0x10	; 16
    155c:	2e 96       	adiw	r28, 0x0e	; 14
    155e:	6f ad       	ldd	r22, Y+63	; 0x3f
    1560:	2e 97       	sbiw	r28, 0x0e	; 14
    1562:	60 96       	adiw	r28, 0x10	; 16
    1564:	7f ad       	ldd	r23, Y+63	; 0x3f
    1566:	60 97       	sbiw	r28, 0x10	; 16
    1568:	67 2b       	or	r22, r23
    156a:	2e 96       	adiw	r28, 0x0e	; 14
    156c:	6f af       	std	Y+63, r22	; 0x3f
    156e:	2e 97       	sbiw	r28, 0x0e	; 14
    1570:	2f 96       	adiw	r28, 0x0f	; 15
    1572:	8f ad       	ldd	r24, Y+63	; 0x3f
    1574:	2f 97       	sbiw	r28, 0x0f	; 15
    1576:	22 96       	adiw	r28, 0x02	; 2
    1578:	8f af       	std	Y+63, r24	; 0x3f
    157a:	22 97       	sbiw	r28, 0x02	; 2
    157c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    157e:	0f 85       	ldd	r16, Y+15	; 0x0f
    1580:	90 0f       	add	r25, r16
    1582:	23 96       	adiw	r28, 0x03	; 3
    1584:	9f af       	std	Y+63, r25	; 0x3f
    1586:	23 97       	sbiw	r28, 0x03	; 3
    1588:	11 e0       	ldi	r17, 0x01	; 1
    158a:	61 96       	adiw	r28, 0x11	; 17
    158c:	1f af       	std	Y+63, r17	; 0x3f
    158e:	61 97       	sbiw	r28, 0x11	; 17
    1590:	23 96       	adiw	r28, 0x03	; 3
    1592:	2f ad       	ldd	r18, Y+63	; 0x3f
    1594:	23 97       	sbiw	r28, 0x03	; 3
    1596:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1598:	23 17       	cp	r18, r19
    159a:	18 f0       	brcs	.+6      	; 0x15a2 <Timer0_vidSetAschDelay+0x3fa>
    159c:	61 96       	adiw	r28, 0x11	; 17
    159e:	1f ae       	std	Y+63, r1	; 0x3f
    15a0:	61 97       	sbiw	r28, 0x11	; 17
    15a2:	2e 96       	adiw	r28, 0x0e	; 14
    15a4:	4f ad       	ldd	r20, Y+63	; 0x3f
    15a6:	2e 97       	sbiw	r28, 0x0e	; 14
    15a8:	23 96       	adiw	r28, 0x03	; 3
    15aa:	5f ad       	ldd	r21, Y+63	; 0x3f
    15ac:	23 97       	sbiw	r28, 0x03	; 3
    15ae:	45 0f       	add	r20, r21
    15b0:	62 96       	adiw	r28, 0x12	; 18
    15b2:	4f af       	std	Y+63, r20	; 0x3f
    15b4:	62 97       	sbiw	r28, 0x12	; 18
    15b6:	61 e0       	ldi	r22, 0x01	; 1
    15b8:	63 96       	adiw	r28, 0x13	; 19
    15ba:	6f af       	std	Y+63, r22	; 0x3f
    15bc:	63 97       	sbiw	r28, 0x13	; 19
    15be:	62 96       	adiw	r28, 0x12	; 18
    15c0:	7f ad       	ldd	r23, Y+63	; 0x3f
    15c2:	62 97       	sbiw	r28, 0x12	; 18
    15c4:	23 96       	adiw	r28, 0x03	; 3
    15c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    15c8:	23 97       	sbiw	r28, 0x03	; 3
    15ca:	78 17       	cp	r23, r24
    15cc:	18 f0       	brcs	.+6      	; 0x15d4 <Timer0_vidSetAschDelay+0x42c>
    15ce:	63 96       	adiw	r28, 0x13	; 19
    15d0:	1f ae       	std	Y+63, r1	; 0x3f
    15d2:	63 97       	sbiw	r28, 0x13	; 19
    15d4:	61 96       	adiw	r28, 0x11	; 17
    15d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    15d8:	61 97       	sbiw	r28, 0x11	; 17
    15da:	63 96       	adiw	r28, 0x13	; 19
    15dc:	0f ad       	ldd	r16, Y+63	; 0x3f
    15de:	63 97       	sbiw	r28, 0x13	; 19
    15e0:	90 2b       	or	r25, r16
    15e2:	61 96       	adiw	r28, 0x11	; 17
    15e4:	9f af       	std	Y+63, r25	; 0x3f
    15e6:	61 97       	sbiw	r28, 0x11	; 17
    15e8:	62 96       	adiw	r28, 0x12	; 18
    15ea:	1f ad       	ldd	r17, Y+63	; 0x3f
    15ec:	62 97       	sbiw	r28, 0x12	; 18
    15ee:	23 96       	adiw	r28, 0x03	; 3
    15f0:	1f af       	std	Y+63, r17	; 0x3f
    15f2:	23 97       	sbiw	r28, 0x03	; 3
    15f4:	28 a1       	ldd	r18, Y+32	; 0x20
    15f6:	38 89       	ldd	r19, Y+16	; 0x10
    15f8:	23 0f       	add	r18, r19
    15fa:	24 96       	adiw	r28, 0x04	; 4
    15fc:	2f af       	std	Y+63, r18	; 0x3f
    15fe:	24 97       	sbiw	r28, 0x04	; 4
    1600:	41 e0       	ldi	r20, 0x01	; 1
    1602:	64 96       	adiw	r28, 0x14	; 20
    1604:	4f af       	std	Y+63, r20	; 0x3f
    1606:	64 97       	sbiw	r28, 0x14	; 20
    1608:	24 96       	adiw	r28, 0x04	; 4
    160a:	5f ad       	ldd	r21, Y+63	; 0x3f
    160c:	24 97       	sbiw	r28, 0x04	; 4
    160e:	68 a1       	ldd	r22, Y+32	; 0x20
    1610:	56 17       	cp	r21, r22
    1612:	18 f0       	brcs	.+6      	; 0x161a <Timer0_vidSetAschDelay+0x472>
    1614:	64 96       	adiw	r28, 0x14	; 20
    1616:	1f ae       	std	Y+63, r1	; 0x3f
    1618:	64 97       	sbiw	r28, 0x14	; 20
    161a:	61 96       	adiw	r28, 0x11	; 17
    161c:	7f ad       	ldd	r23, Y+63	; 0x3f
    161e:	61 97       	sbiw	r28, 0x11	; 17
    1620:	24 96       	adiw	r28, 0x04	; 4
    1622:	8f ad       	ldd	r24, Y+63	; 0x3f
    1624:	24 97       	sbiw	r28, 0x04	; 4
    1626:	78 0f       	add	r23, r24
    1628:	65 96       	adiw	r28, 0x15	; 21
    162a:	7f af       	std	Y+63, r23	; 0x3f
    162c:	65 97       	sbiw	r28, 0x15	; 21
    162e:	91 e0       	ldi	r25, 0x01	; 1
    1630:	66 96       	adiw	r28, 0x16	; 22
    1632:	9f af       	std	Y+63, r25	; 0x3f
    1634:	66 97       	sbiw	r28, 0x16	; 22
    1636:	65 96       	adiw	r28, 0x15	; 21
    1638:	0f ad       	ldd	r16, Y+63	; 0x3f
    163a:	65 97       	sbiw	r28, 0x15	; 21
    163c:	24 96       	adiw	r28, 0x04	; 4
    163e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1640:	24 97       	sbiw	r28, 0x04	; 4
    1642:	01 17       	cp	r16, r17
    1644:	18 f0       	brcs	.+6      	; 0x164c <Timer0_vidSetAschDelay+0x4a4>
    1646:	66 96       	adiw	r28, 0x16	; 22
    1648:	1f ae       	std	Y+63, r1	; 0x3f
    164a:	66 97       	sbiw	r28, 0x16	; 22
    164c:	64 96       	adiw	r28, 0x14	; 20
    164e:	2f ad       	ldd	r18, Y+63	; 0x3f
    1650:	64 97       	sbiw	r28, 0x14	; 20
    1652:	66 96       	adiw	r28, 0x16	; 22
    1654:	3f ad       	ldd	r19, Y+63	; 0x3f
    1656:	66 97       	sbiw	r28, 0x16	; 22
    1658:	23 2b       	or	r18, r19
    165a:	64 96       	adiw	r28, 0x14	; 20
    165c:	2f af       	std	Y+63, r18	; 0x3f
    165e:	64 97       	sbiw	r28, 0x14	; 20
    1660:	65 96       	adiw	r28, 0x15	; 21
    1662:	4f ad       	ldd	r20, Y+63	; 0x3f
    1664:	65 97       	sbiw	r28, 0x15	; 21
    1666:	24 96       	adiw	r28, 0x04	; 4
    1668:	4f af       	std	Y+63, r20	; 0x3f
    166a:	24 97       	sbiw	r28, 0x04	; 4
    166c:	59 a1       	ldd	r21, Y+33	; 0x21
    166e:	69 89       	ldd	r22, Y+17	; 0x11
    1670:	56 0f       	add	r21, r22
    1672:	25 96       	adiw	r28, 0x05	; 5
    1674:	5f af       	std	Y+63, r21	; 0x3f
    1676:	25 97       	sbiw	r28, 0x05	; 5
    1678:	71 e0       	ldi	r23, 0x01	; 1
    167a:	67 96       	adiw	r28, 0x17	; 23
    167c:	7f af       	std	Y+63, r23	; 0x3f
    167e:	67 97       	sbiw	r28, 0x17	; 23
    1680:	25 96       	adiw	r28, 0x05	; 5
    1682:	8f ad       	ldd	r24, Y+63	; 0x3f
    1684:	25 97       	sbiw	r28, 0x05	; 5
    1686:	99 a1       	ldd	r25, Y+33	; 0x21
    1688:	89 17       	cp	r24, r25
    168a:	18 f0       	brcs	.+6      	; 0x1692 <Timer0_vidSetAschDelay+0x4ea>
    168c:	67 96       	adiw	r28, 0x17	; 23
    168e:	1f ae       	std	Y+63, r1	; 0x3f
    1690:	67 97       	sbiw	r28, 0x17	; 23
    1692:	64 96       	adiw	r28, 0x14	; 20
    1694:	0f ad       	ldd	r16, Y+63	; 0x3f
    1696:	64 97       	sbiw	r28, 0x14	; 20
    1698:	25 96       	adiw	r28, 0x05	; 5
    169a:	1f ad       	ldd	r17, Y+63	; 0x3f
    169c:	25 97       	sbiw	r28, 0x05	; 5
    169e:	01 0f       	add	r16, r17
    16a0:	68 96       	adiw	r28, 0x18	; 24
    16a2:	0f af       	std	Y+63, r16	; 0x3f
    16a4:	68 97       	sbiw	r28, 0x18	; 24
    16a6:	21 e0       	ldi	r18, 0x01	; 1
    16a8:	69 96       	adiw	r28, 0x19	; 25
    16aa:	2f af       	std	Y+63, r18	; 0x3f
    16ac:	69 97       	sbiw	r28, 0x19	; 25
    16ae:	68 96       	adiw	r28, 0x18	; 24
    16b0:	3f ad       	ldd	r19, Y+63	; 0x3f
    16b2:	68 97       	sbiw	r28, 0x18	; 24
    16b4:	25 96       	adiw	r28, 0x05	; 5
    16b6:	4f ad       	ldd	r20, Y+63	; 0x3f
    16b8:	25 97       	sbiw	r28, 0x05	; 5
    16ba:	34 17       	cp	r19, r20
    16bc:	18 f0       	brcs	.+6      	; 0x16c4 <Timer0_vidSetAschDelay+0x51c>
    16be:	69 96       	adiw	r28, 0x19	; 25
    16c0:	1f ae       	std	Y+63, r1	; 0x3f
    16c2:	69 97       	sbiw	r28, 0x19	; 25
    16c4:	67 96       	adiw	r28, 0x17	; 23
    16c6:	5f ad       	ldd	r21, Y+63	; 0x3f
    16c8:	67 97       	sbiw	r28, 0x17	; 23
    16ca:	69 96       	adiw	r28, 0x19	; 25
    16cc:	6f ad       	ldd	r22, Y+63	; 0x3f
    16ce:	69 97       	sbiw	r28, 0x19	; 25
    16d0:	56 2b       	or	r21, r22
    16d2:	67 96       	adiw	r28, 0x17	; 23
    16d4:	5f af       	std	Y+63, r21	; 0x3f
    16d6:	67 97       	sbiw	r28, 0x17	; 23
    16d8:	68 96       	adiw	r28, 0x18	; 24
    16da:	7f ad       	ldd	r23, Y+63	; 0x3f
    16dc:	68 97       	sbiw	r28, 0x18	; 24
    16de:	25 96       	adiw	r28, 0x05	; 5
    16e0:	7f af       	std	Y+63, r23	; 0x3f
    16e2:	25 97       	sbiw	r28, 0x05	; 5
    16e4:	8a a1       	ldd	r24, Y+34	; 0x22
    16e6:	9a 89       	ldd	r25, Y+18	; 0x12
    16e8:	89 0f       	add	r24, r25
    16ea:	26 96       	adiw	r28, 0x06	; 6
    16ec:	8f af       	std	Y+63, r24	; 0x3f
    16ee:	26 97       	sbiw	r28, 0x06	; 6
    16f0:	67 96       	adiw	r28, 0x17	; 23
    16f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    16f4:	67 97       	sbiw	r28, 0x17	; 23
    16f6:	26 96       	adiw	r28, 0x06	; 6
    16f8:	0f ad       	ldd	r16, Y+63	; 0x3f
    16fa:	26 97       	sbiw	r28, 0x06	; 6
    16fc:	80 0f       	add	r24, r16
    16fe:	26 96       	adiw	r28, 0x06	; 6
    1700:	8f af       	std	Y+63, r24	; 0x3f
    1702:	26 97       	sbiw	r28, 0x06	; 6
    1704:	1e ad       	ldd	r17, Y+62	; 0x3e
    1706:	1b 8f       	std	Y+27, r17	; 0x1b
    1708:	2f ad       	ldd	r18, Y+63	; 0x3f
    170a:	2c 8f       	std	Y+28, r18	; 0x1c
    170c:	21 96       	adiw	r28, 0x01	; 1
    170e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1710:	21 97       	sbiw	r28, 0x01	; 1
    1712:	3d 8f       	std	Y+29, r19	; 0x1d
    1714:	22 96       	adiw	r28, 0x02	; 2
    1716:	4f ad       	ldd	r20, Y+63	; 0x3f
    1718:	22 97       	sbiw	r28, 0x02	; 2
    171a:	4e 8f       	std	Y+30, r20	; 0x1e
    171c:	23 96       	adiw	r28, 0x03	; 3
    171e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1720:	23 97       	sbiw	r28, 0x03	; 3
    1722:	5f 8f       	std	Y+31, r21	; 0x1f
    1724:	24 96       	adiw	r28, 0x04	; 4
    1726:	6f ad       	ldd	r22, Y+63	; 0x3f
    1728:	24 97       	sbiw	r28, 0x04	; 4
    172a:	68 a3       	std	Y+32, r22	; 0x20
    172c:	25 96       	adiw	r28, 0x05	; 5
    172e:	7f ad       	ldd	r23, Y+63	; 0x3f
    1730:	25 97       	sbiw	r28, 0x05	; 5
    1732:	79 a3       	std	Y+33, r23	; 0x21
    1734:	26 96       	adiw	r28, 0x06	; 6
    1736:	8f ad       	ldd	r24, Y+63	; 0x3f
    1738:	26 97       	sbiw	r28, 0x06	; 6
    173a:	8a a3       	std	Y+34, r24	; 0x22
    173c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    173e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1740:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1742:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1744:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1746:	78 a1       	ldd	r23, Y+32	; 0x20
    1748:	89 a1       	ldd	r24, Y+33	; 0x21
    174a:	9a a1       	ldd	r25, Y+34	; 0x22
    174c:	07 e0       	ldi	r16, 0x07	; 7
    174e:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    1752:	22 2e       	mov	r2, r18
    1754:	33 2e       	mov	r3, r19
    1756:	44 2e       	mov	r4, r20
    1758:	55 2e       	mov	r5, r21
    175a:	66 2e       	mov	r6, r22
    175c:	77 2e       	mov	r7, r23
    175e:	88 2e       	mov	r8, r24
    1760:	99 2e       	mov	r9, r25
    1762:	a2 2c       	mov	r10, r2
    1764:	b3 2c       	mov	r11, r3
    1766:	c4 2c       	mov	r12, r4
    1768:	d5 2c       	mov	r13, r5
    176a:	e6 2c       	mov	r14, r6
    176c:	f7 2c       	mov	r15, r7
    176e:	08 2d       	mov	r16, r8
    1770:	19 2d       	mov	r17, r9
    1772:	2a 2d       	mov	r18, r10
    1774:	3b 2d       	mov	r19, r11
    1776:	4c 2d       	mov	r20, r12
    1778:	5d 2d       	mov	r21, r13
    177a:	6e 2d       	mov	r22, r14
    177c:	7f 2d       	mov	r23, r15
    177e:	80 2f       	mov	r24, r16
    1780:	91 2f       	mov	r25, r17
    1782:	03 e0       	ldi	r16, 0x03	; 3
    1784:	0e 94 49 00 	call	0x92	; 0x92 <__lshrdi3>
    1788:	a2 2e       	mov	r10, r18
    178a:	b3 2e       	mov	r11, r19
    178c:	c4 2e       	mov	r12, r20
    178e:	d5 2e       	mov	r13, r21
    1790:	e6 2e       	mov	r14, r22
    1792:	f7 2e       	mov	r15, r23
    1794:	08 2f       	mov	r16, r24
    1796:	19 2f       	mov	r17, r25
    1798:	2a 2d       	mov	r18, r10
    179a:	3b 2d       	mov	r19, r11
    179c:	4c 2d       	mov	r20, r12
    179e:	5d 2d       	mov	r21, r13
    17a0:	6e 2d       	mov	r22, r14
    17a2:	7f 2d       	mov	r23, r15
    17a4:	80 2f       	mov	r24, r16
    17a6:	91 2f       	mov	r25, r17
    17a8:	29 83       	std	Y+1, r18	; 0x01
    17aa:	3a 83       	std	Y+2, r19	; 0x02
    17ac:	4b 83       	std	Y+3, r20	; 0x03
    17ae:	5c 83       	std	Y+4, r21	; 0x04
           Timer0_u16OvfCounts = (Local_u32Counts + 255) / 256;
    17b0:	89 81       	ldd	r24, Y+1	; 0x01
    17b2:	9a 81       	ldd	r25, Y+2	; 0x02
    17b4:	ab 81       	ldd	r26, Y+3	; 0x03
    17b6:	bc 81       	ldd	r27, Y+4	; 0x04
    17b8:	81 50       	subi	r24, 0x01	; 1
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	af 4f       	sbci	r26, 0xFF	; 255
    17be:	bf 4f       	sbci	r27, 0xFF	; 255
    17c0:	89 2f       	mov	r24, r25
    17c2:	9a 2f       	mov	r25, r26
    17c4:	ab 2f       	mov	r26, r27
    17c6:	bb 27       	eor	r27, r27
    17c8:	90 93 a0 01 	sts	0x01A0, r25
    17cc:	80 93 9f 01 	sts	0x019F, r24
           Timer0_u8Preload    = 256 - (Local_u32Counts % 256);
    17d0:	89 81       	ldd	r24, Y+1	; 0x01
    17d2:	81 95       	neg	r24
    17d4:	80 93 a1 01 	sts	0x01A1, r24
           TCNT0 = Timer0_u8Preload;
    17d8:	e2 e5       	ldi	r30, 0x52	; 82
    17da:	f0 e0       	ldi	r31, 0x00	; 0
    17dc:	80 91 a1 01 	lds	r24, 0x01A1
    17e0:	80 83       	st	Z, r24
           Timer0_pfunOvfISRFun = Copy_pfunAppFun;
    17e2:	89 85       	ldd	r24, Y+9	; 0x09
    17e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e6:	90 93 9c 01 	sts	0x019C, r25
    17ea:	80 93 9b 01 	sts	0x019B, r24
           TCNT0 = Timer0_u8Preload;
           Timer0_pfunOvfISRFun = Copy_pfunAppFun;
       }
   #endif
#endif
}
    17ee:	c8 5a       	subi	r28, 0xA8	; 168
    17f0:	df 4f       	sbci	r29, 0xFF	; 255
    17f2:	0f b6       	in	r0, 0x3f	; 63
    17f4:	f8 94       	cli
    17f6:	de bf       	out	0x3e, r29	; 62
    17f8:	0f be       	out	0x3f, r0	; 63
    17fa:	cd bf       	out	0x3d, r28	; 61
    17fc:	cf 91       	pop	r28
    17fe:	df 91       	pop	r29
    1800:	1f 91       	pop	r17
    1802:	0f 91       	pop	r16
    1804:	ff 90       	pop	r15
    1806:	ef 90       	pop	r14
    1808:	df 90       	pop	r13
    180a:	cf 90       	pop	r12
    180c:	bf 90       	pop	r11
    180e:	af 90       	pop	r10
    1810:	9f 90       	pop	r9
    1812:	8f 90       	pop	r8
    1814:	7f 90       	pop	r7
    1816:	6f 90       	pop	r6
    1818:	5f 90       	pop	r5
    181a:	4f 90       	pop	r4
    181c:	3f 90       	pop	r3
    181e:	2f 90       	pop	r2
    1820:	08 95       	ret

00001822 <Timer0_vidSetSychDelay>:

void Timer0_vidSetSychDelay(u32 Copy_u32MilliSecond)
{
    1822:	df 93       	push	r29
    1824:	cf 93       	push	r28
    1826:	00 d0       	rcall	.+0      	; 0x1828 <Timer0_vidSetSychDelay+0x6>
    1828:	00 d0       	rcall	.+0      	; 0x182a <Timer0_vidSetSychDelay+0x8>
    182a:	cd b7       	in	r28, 0x3d	; 61
    182c:	de b7       	in	r29, 0x3e	; 62
    182e:	69 83       	std	Y+1, r22	; 0x01
    1830:	7a 83       	std	Y+2, r23	; 0x02
    1832:	8b 83       	std	Y+3, r24	; 0x03
    1834:	9c 83       	std	Y+4, r25	; 0x04
           while(((TIFR >> 0) & 1) == 0 );
           TIFR |= (1<<0);
       }
   #endif
#endif
}
    1836:	0f 90       	pop	r0
    1838:	0f 90       	pop	r0
    183a:	0f 90       	pop	r0
    183c:	0f 90       	pop	r0
    183e:	cf 91       	pop	r28
    1840:	df 91       	pop	r29
    1842:	08 95       	ret

00001844 <Timer0_vidSetCompareCount>:

void Timer0_vidSetCompareCount(u8 Copy_u8CTCValue)
{
    1844:	df 93       	push	r29
    1846:	cf 93       	push	r28
    1848:	0f 92       	push	r0
    184a:	cd b7       	in	r28, 0x3d	; 61
    184c:	de b7       	in	r29, 0x3e	; 62
    184e:	89 83       	std	Y+1, r24	; 0x01
   Timer0_u8CTCValue = Copy_u8CTCValue;
    1850:	89 81       	ldd	r24, Y+1	; 0x01
    1852:	80 93 a4 01 	sts	0x01A4, r24
   OCR0 = Copy_u8CTCValue;
    1856:	ec e5       	ldi	r30, 0x5C	; 92
    1858:	f0 e0       	ldi	r31, 0x00	; 0
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	80 83       	st	Z, r24
}
    185e:	0f 90       	pop	r0
    1860:	cf 91       	pop	r28
    1862:	df 91       	pop	r29
    1864:	08 95       	ret

00001866 <Timer_vidCallBack>:
void Timer_vidCallBack(void (*Copy_pfunCallBack)(void))
{
    1866:	df 93       	push	r29
    1868:	cf 93       	push	r28
    186a:	00 d0       	rcall	.+0      	; 0x186c <Timer_vidCallBack+0x6>
    186c:	cd b7       	in	r28, 0x3d	; 61
    186e:	de b7       	in	r29, 0x3e	; 62
    1870:	9a 83       	std	Y+2, r25	; 0x02
    1872:	89 83       	std	Y+1, r24	; 0x01
   if (Copy_pfunCallBack != NULL)
    1874:	89 81       	ldd	r24, Y+1	; 0x01
    1876:	9a 81       	ldd	r25, Y+2	; 0x02
    1878:	00 97       	sbiw	r24, 0x00	; 0
    187a:	31 f0       	breq	.+12     	; 0x1888 <Timer_vidCallBack+0x22>
   {
       Timer_pfunCallBack = Copy_pfunCallBack;
    187c:	89 81       	ldd	r24, Y+1	; 0x01
    187e:	9a 81       	ldd	r25, Y+2	; 0x02
    1880:	90 93 9e 01 	sts	0x019E, r25
    1884:	80 93 9d 01 	sts	0x019D, r24
   }
}
    1888:	0f 90       	pop	r0
    188a:	0f 90       	pop	r0
    188c:	cf 91       	pop	r28
    188e:	df 91       	pop	r29
    1890:	08 95       	ret

00001892 <Timer_vidSetTimerCounts>:
void Timer_vidSetTimerCounts(u8 Copy_u8Counts)
{
    1892:	df 93       	push	r29
    1894:	cf 93       	push	r28
    1896:	0f 92       	push	r0
    1898:	cd b7       	in	r28, 0x3d	; 61
    189a:	de b7       	in	r29, 0x3e	; 62
    189c:	89 83       	std	Y+1, r24	; 0x01
   TCNT0 = Copy_u8Counts;
    189e:	e2 e5       	ldi	r30, 0x52	; 82
    18a0:	f0 e0       	ldi	r31, 0x00	; 0
    18a2:	89 81       	ldd	r24, Y+1	; 0x01
    18a4:	80 83       	st	Z, r24
}
    18a6:	0f 90       	pop	r0
    18a8:	cf 91       	pop	r28
    18aa:	df 91       	pop	r29
    18ac:	08 95       	ret

000018ae <Timer_u8GetTimerCounts>:
u8 Timer_u8GetTimerCounts(void)
{
    18ae:	df 93       	push	r29
    18b0:	cf 93       	push	r28
    18b2:	cd b7       	in	r28, 0x3d	; 61
    18b4:	de b7       	in	r29, 0x3e	; 62
   return TCNT0;
    18b6:	e2 e5       	ldi	r30, 0x52	; 82
    18b8:	f0 e0       	ldi	r31, 0x00	; 0
    18ba:	80 81       	ld	r24, Z
}
    18bc:	cf 91       	pop	r28
    18be:	df 91       	pop	r29
    18c0:	08 95       	ret

000018c2 <Timer_vidEnableInterrupt>:

void Timer_vidEnableInterrupt(void)
{
    18c2:	df 93       	push	r29
    18c4:	cf 93       	push	r28
    18c6:	cd b7       	in	r28, 0x3d	; 61
    18c8:	de b7       	in	r29, 0x3e	; 62
	TIMSK |=(1<<0);
    18ca:	a9 e5       	ldi	r26, 0x59	; 89
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	e9 e5       	ldi	r30, 0x59	; 89
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	81 60       	ori	r24, 0x01	; 1
    18d6:	8c 93       	st	X, r24
}
    18d8:	cf 91       	pop	r28
    18da:	df 91       	pop	r29
    18dc:	08 95       	ret

000018de <Timer_vidDisableInterrupt>:
void Timer_vidDisableInterrupt(void)
{
    18de:	df 93       	push	r29
    18e0:	cf 93       	push	r28
    18e2:	cd b7       	in	r28, 0x3d	; 61
    18e4:	de b7       	in	r29, 0x3e	; 62
	TIMSK &=~(1<<0);
    18e6:	a9 e5       	ldi	r26, 0x59	; 89
    18e8:	b0 e0       	ldi	r27, 0x00	; 0
    18ea:	e9 e5       	ldi	r30, 0x59	; 89
    18ec:	f0 e0       	ldi	r31, 0x00	; 0
    18ee:	80 81       	ld	r24, Z
    18f0:	8e 7f       	andi	r24, 0xFE	; 254
    18f2:	8c 93       	st	X, r24
}
    18f4:	cf 91       	pop	r28
    18f6:	df 91       	pop	r29
    18f8:	08 95       	ret

000018fa <__vector_11>:

#if TIMER0_MODE == TIMER0_OVF
void __vector_11 (void)__attribute__((signal));
void __vector_11 (void)
{
    18fa:	1f 92       	push	r1
    18fc:	0f 92       	push	r0
    18fe:	0f b6       	in	r0, 0x3f	; 63
    1900:	0f 92       	push	r0
    1902:	11 24       	eor	r1, r1
    1904:	2f 93       	push	r18
    1906:	3f 93       	push	r19
    1908:	4f 93       	push	r20
    190a:	5f 93       	push	r21
    190c:	6f 93       	push	r22
    190e:	7f 93       	push	r23
    1910:	8f 93       	push	r24
    1912:	9f 93       	push	r25
    1914:	af 93       	push	r26
    1916:	bf 93       	push	r27
    1918:	ef 93       	push	r30
    191a:	ff 93       	push	r31
    191c:	df 93       	push	r29
    191e:	cf 93       	push	r28
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
   if (Timer_pfunCallBack != NULL)
    1924:	80 91 9d 01 	lds	r24, 0x019D
    1928:	90 91 9e 01 	lds	r25, 0x019E
    192c:	00 97       	sbiw	r24, 0x00	; 0
    192e:	31 f0       	breq	.+12     	; 0x193c <__vector_11+0x42>
   {
       Timer_pfunCallBack();
    1930:	e0 91 9d 01 	lds	r30, 0x019D
    1934:	f0 91 9e 01 	lds	r31, 0x019E
    1938:	09 95       	icall
    193a:	28 c0       	rjmp	.+80     	; 0x198c <__vector_11+0x92>
   }
   else
   {
        Timer0_u16ISRCounter ++;
    193c:	80 91 a2 01 	lds	r24, 0x01A2
    1940:	90 91 a3 01 	lds	r25, 0x01A3
    1944:	01 96       	adiw	r24, 0x01	; 1
    1946:	90 93 a3 01 	sts	0x01A3, r25
    194a:	80 93 a2 01 	sts	0x01A2, r24
        if (Timer0_u16ISRCounter == Timer0_u16OvfCounts)
    194e:	20 91 a2 01 	lds	r18, 0x01A2
    1952:	30 91 a3 01 	lds	r19, 0x01A3
    1956:	80 91 9f 01 	lds	r24, 0x019F
    195a:	90 91 a0 01 	lds	r25, 0x01A0
    195e:	28 17       	cp	r18, r24
    1960:	39 07       	cpc	r19, r25
    1962:	a1 f4       	brne	.+40     	; 0x198c <__vector_11+0x92>
        {
            TCNT0 = Timer0_u8Preload;
    1964:	e2 e5       	ldi	r30, 0x52	; 82
    1966:	f0 e0       	ldi	r31, 0x00	; 0
    1968:	80 91 a1 01 	lds	r24, 0x01A1
    196c:	80 83       	st	Z, r24

            Timer0_u16ISRCounter =0;
    196e:	10 92 a3 01 	sts	0x01A3, r1
    1972:	10 92 a2 01 	sts	0x01A2, r1
            if (Timer0_pfunOvfISRFun != NULL)
    1976:	80 91 9b 01 	lds	r24, 0x019B
    197a:	90 91 9c 01 	lds	r25, 0x019C
    197e:	00 97       	sbiw	r24, 0x00	; 0
    1980:	29 f0       	breq	.+10     	; 0x198c <__vector_11+0x92>
                Timer0_pfunOvfISRFun ();
    1982:	e0 91 9b 01 	lds	r30, 0x019B
    1986:	f0 91 9c 01 	lds	r31, 0x019C
    198a:	09 95       	icall
        }
   }
}
    198c:	cf 91       	pop	r28
    198e:	df 91       	pop	r29
    1990:	ff 91       	pop	r31
    1992:	ef 91       	pop	r30
    1994:	bf 91       	pop	r27
    1996:	af 91       	pop	r26
    1998:	9f 91       	pop	r25
    199a:	8f 91       	pop	r24
    199c:	7f 91       	pop	r23
    199e:	6f 91       	pop	r22
    19a0:	5f 91       	pop	r21
    19a2:	4f 91       	pop	r20
    19a4:	3f 91       	pop	r19
    19a6:	2f 91       	pop	r18
    19a8:	0f 90       	pop	r0
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	0f 90       	pop	r0
    19ae:	1f 90       	pop	r1
    19b0:	18 95       	reti

000019b2 <GIE_vidEnable>:
 */

//#define SREG 		*((volatile unsigned char*)0x5F)

void GIE_vidEnable(void)
{
    19b2:	df 93       	push	r29
    19b4:	cf 93       	push	r28
    19b6:	cd b7       	in	r28, 0x3d	; 61
    19b8:	de b7       	in	r29, 0x3e	; 62
	//SREG |= (1<<7);
	asm("sei");
    19ba:	78 94       	sei
//	__asm("sei");
//	__asm__("sei");
}
    19bc:	cf 91       	pop	r28
    19be:	df 91       	pop	r29
    19c0:	08 95       	ret

000019c2 <GIE_vidDisable>:

void GIE_vidDisable(void)
{
    19c2:	df 93       	push	r29
    19c4:	cf 93       	push	r28
    19c6:	cd b7       	in	r28, 0x3d	; 61
    19c8:	de b7       	in	r29, 0x3e	; 62
	asm("cli");
    19ca:	f8 94       	cli
}
    19cc:	cf 91       	pop	r28
    19ce:	df 91       	pop	r29
    19d0:	08 95       	ret

000019d2 <EXTI_enuInit>:

static void (*LOC_pfunISRFun[3])(void) = {NULL, NULL, NULL};
// static pvFUn ISR[3];

ES_t EXTI_enuInit(void)
{
    19d2:	df 93       	push	r29
    19d4:	cf 93       	push	r28
    19d6:	00 d0       	rcall	.+0      	; 0x19d8 <EXTI_enuInit+0x6>
    19d8:	cd b7       	in	r28, 0x3d	; 61
    19da:	de b7       	in	r29, 0x3e	; 62
    ES_t Local_enuErrorState = ES_NOK;
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	8a 83       	std	Y+2, r24	; 0x02

    u8 Local_u8Iter = 0;
    19e0:	19 82       	std	Y+1, r1	; 0x01
    for (Local_u8Iter = 0 ; Local_u8Iter < EXTI_u8EXTIPinNum ; Local_u8Iter++)
    19e2:	19 82       	std	Y+1, r1	; 0x01
    19e4:	3b c0       	rjmp	.+118    	; 0x1a5c <EXTI_enuInit+0x8a>
    {
        enuSetIntMode   (EXTI_astrEXTIConfig[Local_u8Iter].intPin , EXTI_astrEXTIConfig[Local_u8Iter].intMode );
    19e6:	89 81       	ldd	r24, Y+1	; 0x01
    19e8:	28 2f       	mov	r18, r24
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	c9 01       	movw	r24, r18
    19ee:	88 0f       	add	r24, r24
    19f0:	99 1f       	adc	r25, r25
    19f2:	82 0f       	add	r24, r18
    19f4:	93 1f       	adc	r25, r19
    19f6:	fc 01       	movw	r30, r24
    19f8:	ee 53       	subi	r30, 0x3E	; 62
    19fa:	ff 4f       	sbci	r31, 0xFF	; 255
    19fc:	40 81       	ld	r20, Z
    19fe:	89 81       	ldd	r24, Y+1	; 0x01
    1a00:	28 2f       	mov	r18, r24
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	c9 01       	movw	r24, r18
    1a06:	88 0f       	add	r24, r24
    1a08:	99 1f       	adc	r25, r25
    1a0a:	82 0f       	add	r24, r18
    1a0c:	93 1f       	adc	r25, r19
    1a0e:	fc 01       	movw	r30, r24
    1a10:	ec 53       	subi	r30, 0x3C	; 60
    1a12:	ff 4f       	sbci	r31, 0xFF	; 255
    1a14:	90 81       	ld	r25, Z
    1a16:	84 2f       	mov	r24, r20
    1a18:	69 2f       	mov	r22, r25
    1a1a:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <enuSetIntMode>
        enuSetSenseLevel(EXTI_astrEXTIConfig[Local_u8Iter].intPin , EXTI_astrEXTIConfig[Local_u8Iter].senseLevel );
    1a1e:	89 81       	ldd	r24, Y+1	; 0x01
    1a20:	28 2f       	mov	r18, r24
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	c9 01       	movw	r24, r18
    1a26:	88 0f       	add	r24, r24
    1a28:	99 1f       	adc	r25, r25
    1a2a:	82 0f       	add	r24, r18
    1a2c:	93 1f       	adc	r25, r19
    1a2e:	fc 01       	movw	r30, r24
    1a30:	ee 53       	subi	r30, 0x3E	; 62
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	40 81       	ld	r20, Z
    1a36:	89 81       	ldd	r24, Y+1	; 0x01
    1a38:	28 2f       	mov	r18, r24
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	c9 01       	movw	r24, r18
    1a3e:	88 0f       	add	r24, r24
    1a40:	99 1f       	adc	r25, r25
    1a42:	82 0f       	add	r24, r18
    1a44:	93 1f       	adc	r25, r19
    1a46:	fc 01       	movw	r30, r24
    1a48:	ed 53       	subi	r30, 0x3D	; 61
    1a4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4c:	90 81       	ld	r25, Z
    1a4e:	84 2f       	mov	r24, r20
    1a50:	69 2f       	mov	r22, r25
    1a52:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <enuSetSenseLevel>
ES_t EXTI_enuInit(void)
{
    ES_t Local_enuErrorState = ES_NOK;

    u8 Local_u8Iter = 0;
    for (Local_u8Iter = 0 ; Local_u8Iter < EXTI_u8EXTIPinNum ; Local_u8Iter++)
    1a56:	89 81       	ldd	r24, Y+1	; 0x01
    1a58:	8f 5f       	subi	r24, 0xFF	; 255
    1a5a:	89 83       	std	Y+1, r24	; 0x01
    1a5c:	90 91 c1 00 	lds	r25, 0x00C1
    1a60:	89 81       	ldd	r24, Y+1	; 0x01
    1a62:	89 17       	cp	r24, r25
    1a64:	08 f4       	brcc	.+2      	; 0x1a68 <EXTI_enuInit+0x96>
    1a66:	bf cf       	rjmp	.-130    	; 0x19e6 <EXTI_enuInit+0x14>
    {
        enuSetIntMode   (EXTI_astrEXTIConfig[Local_u8Iter].intPin , EXTI_astrEXTIConfig[Local_u8Iter].intMode );
        enuSetSenseLevel(EXTI_astrEXTIConfig[Local_u8Iter].intPin , EXTI_astrEXTIConfig[Local_u8Iter].senseLevel );
    }

    return Local_enuErrorState;
    1a68:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1a6a:	0f 90       	pop	r0
    1a6c:	0f 90       	pop	r0
    1a6e:	cf 91       	pop	r28
    1a70:	df 91       	pop	r29
    1a72:	08 95       	ret

00001a74 <EXTI_enuSetSenseLevel>:

ES_t EXTI_enuSetSenseLevel(u8 Copy_u8IntPin , u8 Copy_u8SenseLevel)
{
    1a74:	df 93       	push	r29
    1a76:	cf 93       	push	r28
    1a78:	00 d0       	rcall	.+0      	; 0x1a7a <EXTI_enuSetSenseLevel+0x6>
    1a7a:	0f 92       	push	r0
    1a7c:	cd b7       	in	r28, 0x3d	; 61
    1a7e:	de b7       	in	r29, 0x3e	; 62
    1a80:	8a 83       	std	Y+2, r24	; 0x02
    1a82:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState = ES_NOK;
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	89 83       	std	Y+1, r24	; 0x01

    enuSetSenseLevel(Copy_u8IntPin , Copy_u8SenseLevel );
    1a88:	8a 81       	ldd	r24, Y+2	; 0x02
    1a8a:	6b 81       	ldd	r22, Y+3	; 0x03
    1a8c:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <enuSetSenseLevel>

    return Local_enuErrorState;
    1a90:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a92:	0f 90       	pop	r0
    1a94:	0f 90       	pop	r0
    1a96:	0f 90       	pop	r0
    1a98:	cf 91       	pop	r28
    1a9a:	df 91       	pop	r29
    1a9c:	08 95       	ret

00001a9e <EXTI_enuEnableInterrupt>:

ES_t EXTI_enuEnableInterrupt(u8 Copy_u8IntPin)
{
    1a9e:	df 93       	push	r29
    1aa0:	cf 93       	push	r28
    1aa2:	00 d0       	rcall	.+0      	; 0x1aa4 <EXTI_enuEnableInterrupt+0x6>
    1aa4:	cd b7       	in	r28, 0x3d	; 61
    1aa6:	de b7       	in	r29, 0x3e	; 62
    1aa8:	8a 83       	std	Y+2, r24	; 0x02
    ES_t Local_enuErrorState = ES_NOK;
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	89 83       	std	Y+1, r24	; 0x01

    enuSetIntMode(Copy_u8IntPin, EXTI_INTERRUPT_MODE );
    1aae:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab0:	6a e4       	ldi	r22, 0x4A	; 74
    1ab2:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <enuSetIntMode>

    return Local_enuErrorState;
    1ab6:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ab8:	0f 90       	pop	r0
    1aba:	0f 90       	pop	r0
    1abc:	cf 91       	pop	r28
    1abe:	df 91       	pop	r29
    1ac0:	08 95       	ret

00001ac2 <EXTI_enuDisableInterrupt>:

ES_t EXTI_enuDisableInterrupt(u8 Copy_u8IntPin)
{
    1ac2:	df 93       	push	r29
    1ac4:	cf 93       	push	r28
    1ac6:	00 d0       	rcall	.+0      	; 0x1ac8 <EXTI_enuDisableInterrupt+0x6>
    1ac8:	cd b7       	in	r28, 0x3d	; 61
    1aca:	de b7       	in	r29, 0x3e	; 62
    1acc:	8a 83       	std	Y+2, r24	; 0x02
    ES_t Local_enuErrorState = ES_NOK;
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	89 83       	std	Y+1, r24	; 0x01

    enuSetIntMode(Copy_u8IntPin, EXTI_POLLING_MODE );
    1ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad4:	65 e4       	ldi	r22, 0x45	; 69
    1ad6:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <enuSetIntMode>

    return Local_enuErrorState;
    1ada:	89 81       	ldd	r24, Y+1	; 0x01
}
    1adc:	0f 90       	pop	r0
    1ade:	0f 90       	pop	r0
    1ae0:	cf 91       	pop	r28
    1ae2:	df 91       	pop	r29
    1ae4:	08 95       	ret

00001ae6 <EXTI_enuSetCallBack>:

ES_t EXTI_enuSetCallBack(u8 Copy_u8IntPin , void(*Copy_pFunAppFun)(void))
{
    1ae6:	df 93       	push	r29
    1ae8:	cf 93       	push	r28
    1aea:	00 d0       	rcall	.+0      	; 0x1aec <EXTI_enuSetCallBack+0x6>
    1aec:	00 d0       	rcall	.+0      	; 0x1aee <EXTI_enuSetCallBack+0x8>
    1aee:	cd b7       	in	r28, 0x3d	; 61
    1af0:	de b7       	in	r29, 0x3e	; 62
    1af2:	8a 83       	std	Y+2, r24	; 0x02
    1af4:	7c 83       	std	Y+4, r23	; 0x04
    1af6:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState = ES_NOK;
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	89 83       	std	Y+1, r24	; 0x01

    if (Copy_pFunAppFun != NULL)
    1afc:	8b 81       	ldd	r24, Y+3	; 0x03
    1afe:	9c 81       	ldd	r25, Y+4	; 0x04
    1b00:	00 97       	sbiw	r24, 0x00	; 0
    1b02:	69 f0       	breq	.+26     	; 0x1b1e <EXTI_enuSetCallBack+0x38>
    {
        LOC_pfunISRFun[Copy_u8IntPin] = Copy_pFunAppFun;
    1b04:	8a 81       	ldd	r24, Y+2	; 0x02
    1b06:	88 2f       	mov	r24, r24
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	88 0f       	add	r24, r24
    1b0c:	99 1f       	adc	r25, r25
    1b0e:	fc 01       	movw	r30, r24
    1b10:	eb 55       	subi	r30, 0x5B	; 91
    1b12:	fe 4f       	sbci	r31, 0xFE	; 254
    1b14:	8b 81       	ldd	r24, Y+3	; 0x03
    1b16:	9c 81       	ldd	r25, Y+4	; 0x04
    1b18:	91 83       	std	Z+1, r25	; 0x01
    1b1a:	80 83       	st	Z, r24
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <EXTI_enuSetCallBack+0x3c>
    }
    else
    {
        Local_enuErrorState = ES_NULL_POINTER;
    1b1e:	83 e0       	ldi	r24, 0x03	; 3
    1b20:	89 83       	std	Y+1, r24	; 0x01
    }

    return Local_enuErrorState;
    1b22:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b24:	0f 90       	pop	r0
    1b26:	0f 90       	pop	r0
    1b28:	0f 90       	pop	r0
    1b2a:	0f 90       	pop	r0
    1b2c:	cf 91       	pop	r28
    1b2e:	df 91       	pop	r29
    1b30:	08 95       	ret

00001b32 <__vector_1>:
void __vector_1 (void)__attribute__((signal));
void __vector_2 (void)__attribute__((signal));
void __vector_3 (void)__attribute__((signal));
//INT0
void __vector_1 (void)
{
    1b32:	1f 92       	push	r1
    1b34:	0f 92       	push	r0
    1b36:	0f b6       	in	r0, 0x3f	; 63
    1b38:	0f 92       	push	r0
    1b3a:	11 24       	eor	r1, r1
    1b3c:	2f 93       	push	r18
    1b3e:	3f 93       	push	r19
    1b40:	4f 93       	push	r20
    1b42:	5f 93       	push	r21
    1b44:	6f 93       	push	r22
    1b46:	7f 93       	push	r23
    1b48:	8f 93       	push	r24
    1b4a:	9f 93       	push	r25
    1b4c:	af 93       	push	r26
    1b4e:	bf 93       	push	r27
    1b50:	ef 93       	push	r30
    1b52:	ff 93       	push	r31
    1b54:	df 93       	push	r29
    1b56:	cf 93       	push	r28
    1b58:	cd b7       	in	r28, 0x3d	; 61
    1b5a:	de b7       	in	r29, 0x3e	; 62
    if(LOC_pfunISRFun[EXTI_INT0] != NULL)
    1b5c:	80 91 a5 01 	lds	r24, 0x01A5
    1b60:	90 91 a6 01 	lds	r25, 0x01A6
    1b64:	00 97       	sbiw	r24, 0x00	; 0
    1b66:	29 f0       	breq	.+10     	; 0x1b72 <__vector_1+0x40>
    {
        LOC_pfunISRFun[EXTI_INT0] ();
    1b68:	e0 91 a5 01 	lds	r30, 0x01A5
    1b6c:	f0 91 a6 01 	lds	r31, 0x01A6
    1b70:	09 95       	icall
    }
}
    1b72:	cf 91       	pop	r28
    1b74:	df 91       	pop	r29
    1b76:	ff 91       	pop	r31
    1b78:	ef 91       	pop	r30
    1b7a:	bf 91       	pop	r27
    1b7c:	af 91       	pop	r26
    1b7e:	9f 91       	pop	r25
    1b80:	8f 91       	pop	r24
    1b82:	7f 91       	pop	r23
    1b84:	6f 91       	pop	r22
    1b86:	5f 91       	pop	r21
    1b88:	4f 91       	pop	r20
    1b8a:	3f 91       	pop	r19
    1b8c:	2f 91       	pop	r18
    1b8e:	0f 90       	pop	r0
    1b90:	0f be       	out	0x3f, r0	; 63
    1b92:	0f 90       	pop	r0
    1b94:	1f 90       	pop	r1
    1b96:	18 95       	reti

00001b98 <__vector_2>:
//INT1
void __vector_2 (void)
{
    1b98:	1f 92       	push	r1
    1b9a:	0f 92       	push	r0
    1b9c:	0f b6       	in	r0, 0x3f	; 63
    1b9e:	0f 92       	push	r0
    1ba0:	11 24       	eor	r1, r1
    1ba2:	2f 93       	push	r18
    1ba4:	3f 93       	push	r19
    1ba6:	4f 93       	push	r20
    1ba8:	5f 93       	push	r21
    1baa:	6f 93       	push	r22
    1bac:	7f 93       	push	r23
    1bae:	8f 93       	push	r24
    1bb0:	9f 93       	push	r25
    1bb2:	af 93       	push	r26
    1bb4:	bf 93       	push	r27
    1bb6:	ef 93       	push	r30
    1bb8:	ff 93       	push	r31
    1bba:	df 93       	push	r29
    1bbc:	cf 93       	push	r28
    1bbe:	cd b7       	in	r28, 0x3d	; 61
    1bc0:	de b7       	in	r29, 0x3e	; 62
    if(LOC_pfunISRFun[EXTI_INT1] != NULL)
    1bc2:	80 91 a7 01 	lds	r24, 0x01A7
    1bc6:	90 91 a8 01 	lds	r25, 0x01A8
    1bca:	00 97       	sbiw	r24, 0x00	; 0
    1bcc:	29 f0       	breq	.+10     	; 0x1bd8 <__vector_2+0x40>
    {
        LOC_pfunISRFun[EXTI_INT1] ();
    1bce:	e0 91 a7 01 	lds	r30, 0x01A7
    1bd2:	f0 91 a8 01 	lds	r31, 0x01A8
    1bd6:	09 95       	icall
    }
}
    1bd8:	cf 91       	pop	r28
    1bda:	df 91       	pop	r29
    1bdc:	ff 91       	pop	r31
    1bde:	ef 91       	pop	r30
    1be0:	bf 91       	pop	r27
    1be2:	af 91       	pop	r26
    1be4:	9f 91       	pop	r25
    1be6:	8f 91       	pop	r24
    1be8:	7f 91       	pop	r23
    1bea:	6f 91       	pop	r22
    1bec:	5f 91       	pop	r21
    1bee:	4f 91       	pop	r20
    1bf0:	3f 91       	pop	r19
    1bf2:	2f 91       	pop	r18
    1bf4:	0f 90       	pop	r0
    1bf6:	0f be       	out	0x3f, r0	; 63
    1bf8:	0f 90       	pop	r0
    1bfa:	1f 90       	pop	r1
    1bfc:	18 95       	reti

00001bfe <__vector_3>:
//INT2
void __vector_3 (void)
{
    1bfe:	1f 92       	push	r1
    1c00:	0f 92       	push	r0
    1c02:	0f b6       	in	r0, 0x3f	; 63
    1c04:	0f 92       	push	r0
    1c06:	11 24       	eor	r1, r1
    1c08:	2f 93       	push	r18
    1c0a:	3f 93       	push	r19
    1c0c:	4f 93       	push	r20
    1c0e:	5f 93       	push	r21
    1c10:	6f 93       	push	r22
    1c12:	7f 93       	push	r23
    1c14:	8f 93       	push	r24
    1c16:	9f 93       	push	r25
    1c18:	af 93       	push	r26
    1c1a:	bf 93       	push	r27
    1c1c:	ef 93       	push	r30
    1c1e:	ff 93       	push	r31
    1c20:	df 93       	push	r29
    1c22:	cf 93       	push	r28
    1c24:	cd b7       	in	r28, 0x3d	; 61
    1c26:	de b7       	in	r29, 0x3e	; 62
    if(LOC_pfunISRFun[EXTI_INT2] != NULL)
    1c28:	80 91 a9 01 	lds	r24, 0x01A9
    1c2c:	90 91 aa 01 	lds	r25, 0x01AA
    1c30:	00 97       	sbiw	r24, 0x00	; 0
    1c32:	29 f0       	breq	.+10     	; 0x1c3e <__vector_3+0x40>
    {
        LOC_pfunISRFun[EXTI_INT2] ();
    1c34:	e0 91 a9 01 	lds	r30, 0x01A9
    1c38:	f0 91 aa 01 	lds	r31, 0x01AA
    1c3c:	09 95       	icall
    }
    
}
    1c3e:	cf 91       	pop	r28
    1c40:	df 91       	pop	r29
    1c42:	ff 91       	pop	r31
    1c44:	ef 91       	pop	r30
    1c46:	bf 91       	pop	r27
    1c48:	af 91       	pop	r26
    1c4a:	9f 91       	pop	r25
    1c4c:	8f 91       	pop	r24
    1c4e:	7f 91       	pop	r23
    1c50:	6f 91       	pop	r22
    1c52:	5f 91       	pop	r21
    1c54:	4f 91       	pop	r20
    1c56:	3f 91       	pop	r19
    1c58:	2f 91       	pop	r18
    1c5a:	0f 90       	pop	r0
    1c5c:	0f be       	out	0x3f, r0	; 63
    1c5e:	0f 90       	pop	r0
    1c60:	1f 90       	pop	r1
    1c62:	18 95       	reti

00001c64 <enuSetIntMode>:


static ES_t enuSetIntMode(u8 Copy_u8IntPin, u8 Copy_u8IntMode)
{
    1c64:	df 93       	push	r29
    1c66:	cf 93       	push	r28
    1c68:	00 d0       	rcall	.+0      	; 0x1c6a <enuSetIntMode+0x6>
    1c6a:	00 d0       	rcall	.+0      	; 0x1c6c <enuSetIntMode+0x8>
    1c6c:	0f 92       	push	r0
    1c6e:	cd b7       	in	r28, 0x3d	; 61
    1c70:	de b7       	in	r29, 0x3e	; 62
    1c72:	89 83       	std	Y+1, r24	; 0x01
    1c74:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_u8IntPin)
    1c76:	89 81       	ldd	r24, Y+1	; 0x01
    1c78:	28 2f       	mov	r18, r24
    1c7a:	30 e0       	ldi	r19, 0x00	; 0
    1c7c:	3c 83       	std	Y+4, r19	; 0x04
    1c7e:	2b 83       	std	Y+3, r18	; 0x03
    1c80:	8b 81       	ldd	r24, Y+3	; 0x03
    1c82:	9c 81       	ldd	r25, Y+4	; 0x04
    1c84:	81 30       	cpi	r24, 0x01	; 1
    1c86:	91 05       	cpc	r25, r1
    1c88:	e1 f0       	breq	.+56     	; 0x1cc2 <enuSetIntMode+0x5e>
    1c8a:	2b 81       	ldd	r18, Y+3	; 0x03
    1c8c:	3c 81       	ldd	r19, Y+4	; 0x04
    1c8e:	22 30       	cpi	r18, 0x02	; 2
    1c90:	31 05       	cpc	r19, r1
    1c92:	51 f1       	breq	.+84     	; 0x1ce8 <enuSetIntMode+0x84>
    1c94:	8b 81       	ldd	r24, Y+3	; 0x03
    1c96:	9c 81       	ldd	r25, Y+4	; 0x04
    1c98:	00 97       	sbiw	r24, 0x00	; 0
    1c9a:	c1 f5       	brne	.+112    	; 0x1d0c <enuSetIntMode+0xa8>
    {
        case EXTI_INT0:
            if (Copy_u8IntMode == EXTI_INTERRUPT_MODE)
    1c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9e:	8a 34       	cpi	r24, 0x4A	; 74
    1ca0:	41 f4       	brne	.+16     	; 0x1cb2 <enuSetIntMode+0x4e>
            {
                GICR |= (1<<6);
    1ca2:	ab e5       	ldi	r26, 0x5B	; 91
    1ca4:	b0 e0       	ldi	r27, 0x00	; 0
    1ca6:	eb e5       	ldi	r30, 0x5B	; 91
    1ca8:	f0 e0       	ldi	r31, 0x00	; 0
    1caa:	80 81       	ld	r24, Z
    1cac:	80 64       	ori	r24, 0x40	; 64
    1cae:	8c 93       	st	X, r24
    1cb0:	2d c0       	rjmp	.+90     	; 0x1d0c <enuSetIntMode+0xa8>
            }
            else 
            {
                GICR &=~ (1<<6);
    1cb2:	ab e5       	ldi	r26, 0x5B	; 91
    1cb4:	b0 e0       	ldi	r27, 0x00	; 0
    1cb6:	eb e5       	ldi	r30, 0x5B	; 91
    1cb8:	f0 e0       	ldi	r31, 0x00	; 0
    1cba:	80 81       	ld	r24, Z
    1cbc:	8f 7b       	andi	r24, 0xBF	; 191
    1cbe:	8c 93       	st	X, r24
    1cc0:	25 c0       	rjmp	.+74     	; 0x1d0c <enuSetIntMode+0xa8>
            }
            break;
            
        case EXTI_INT1:
            if (Copy_u8IntMode == EXTI_INTERRUPT_MODE)
    1cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cc4:	8a 34       	cpi	r24, 0x4A	; 74
    1cc6:	41 f4       	brne	.+16     	; 0x1cd8 <enuSetIntMode+0x74>
            {
                GICR |= (1<<7);
    1cc8:	ab e5       	ldi	r26, 0x5B	; 91
    1cca:	b0 e0       	ldi	r27, 0x00	; 0
    1ccc:	eb e5       	ldi	r30, 0x5B	; 91
    1cce:	f0 e0       	ldi	r31, 0x00	; 0
    1cd0:	80 81       	ld	r24, Z
    1cd2:	80 68       	ori	r24, 0x80	; 128
    1cd4:	8c 93       	st	X, r24
    1cd6:	1a c0       	rjmp	.+52     	; 0x1d0c <enuSetIntMode+0xa8>
            }
            else 
            {
                GICR &=~ (1<<7);
    1cd8:	ab e5       	ldi	r26, 0x5B	; 91
    1cda:	b0 e0       	ldi	r27, 0x00	; 0
    1cdc:	eb e5       	ldi	r30, 0x5B	; 91
    1cde:	f0 e0       	ldi	r31, 0x00	; 0
    1ce0:	80 81       	ld	r24, Z
    1ce2:	8f 77       	andi	r24, 0x7F	; 127
    1ce4:	8c 93       	st	X, r24
    1ce6:	12 c0       	rjmp	.+36     	; 0x1d0c <enuSetIntMode+0xa8>
            }
            break;

        case EXTI_INT2:
            if (Copy_u8IntMode == EXTI_INTERRUPT_MODE)
    1ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    1cea:	8a 34       	cpi	r24, 0x4A	; 74
    1cec:	41 f4       	brne	.+16     	; 0x1cfe <enuSetIntMode+0x9a>
            {
                GICR |= (1<<5);
    1cee:	ab e5       	ldi	r26, 0x5B	; 91
    1cf0:	b0 e0       	ldi	r27, 0x00	; 0
    1cf2:	eb e5       	ldi	r30, 0x5B	; 91
    1cf4:	f0 e0       	ldi	r31, 0x00	; 0
    1cf6:	80 81       	ld	r24, Z
    1cf8:	80 62       	ori	r24, 0x20	; 32
    1cfa:	8c 93       	st	X, r24
    1cfc:	07 c0       	rjmp	.+14     	; 0x1d0c <enuSetIntMode+0xa8>
            }
            else 
            {
                GICR &=~ (1<<6);
    1cfe:	ab e5       	ldi	r26, 0x5B	; 91
    1d00:	b0 e0       	ldi	r27, 0x00	; 0
    1d02:	eb e5       	ldi	r30, 0x5B	; 91
    1d04:	f0 e0       	ldi	r31, 0x00	; 0
    1d06:	80 81       	ld	r24, Z
    1d08:	8f 7b       	andi	r24, 0xBF	; 191
    1d0a:	8c 93       	st	X, r24
            }
            break;
    }
}
    1d0c:	0f 90       	pop	r0
    1d0e:	0f 90       	pop	r0
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	0f 90       	pop	r0
    1d16:	cf 91       	pop	r28
    1d18:	df 91       	pop	r29
    1d1a:	08 95       	ret

00001d1c <enuSetSenseLevel>:
static ES_t enuSetSenseLevel(u8 Copy_u8IntPin, u8 Copy_u8SenseLevel)
{
    1d1c:	df 93       	push	r29
    1d1e:	cf 93       	push	r28
    1d20:	00 d0       	rcall	.+0      	; 0x1d22 <enuSetSenseLevel+0x6>
    1d22:	00 d0       	rcall	.+0      	; 0x1d24 <enuSetSenseLevel+0x8>
    1d24:	0f 92       	push	r0
    1d26:	cd b7       	in	r28, 0x3d	; 61
    1d28:	de b7       	in	r29, 0x3e	; 62
    1d2a:	89 83       	std	Y+1, r24	; 0x01
    1d2c:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_u8IntPin)
    1d2e:	89 81       	ldd	r24, Y+1	; 0x01
    1d30:	28 2f       	mov	r18, r24
    1d32:	30 e0       	ldi	r19, 0x00	; 0
    1d34:	3c 83       	std	Y+4, r19	; 0x04
    1d36:	2b 83       	std	Y+3, r18	; 0x03
    1d38:	8b 81       	ldd	r24, Y+3	; 0x03
    1d3a:	9c 81       	ldd	r25, Y+4	; 0x04
    1d3c:	81 30       	cpi	r24, 0x01	; 1
    1d3e:	91 05       	cpc	r25, r1
    1d40:	09 f4       	brne	.+2      	; 0x1d44 <enuSetSenseLevel+0x28>
    1d42:	46 c0       	rjmp	.+140    	; 0x1dd0 <enuSetSenseLevel+0xb4>
    1d44:	2b 81       	ldd	r18, Y+3	; 0x03
    1d46:	3c 81       	ldd	r19, Y+4	; 0x04
    1d48:	22 30       	cpi	r18, 0x02	; 2
    1d4a:	31 05       	cpc	r19, r1
    1d4c:	09 f4       	brne	.+2      	; 0x1d50 <enuSetSenseLevel+0x34>
    1d4e:	7a c0       	rjmp	.+244    	; 0x1e44 <enuSetSenseLevel+0x128>
    1d50:	8b 81       	ldd	r24, Y+3	; 0x03
    1d52:	9c 81       	ldd	r25, Y+4	; 0x04
    1d54:	00 97       	sbiw	r24, 0x00	; 0
    1d56:	09 f0       	breq	.+2      	; 0x1d5a <enuSetSenseLevel+0x3e>
    1d58:	8a c0       	rjmp	.+276    	; 0x1e6e <enuSetSenseLevel+0x152>
    {
        case EXTI_INT0:
            if (Copy_u8SenseLevel == EXTI_LOW_LEVEL)
    1d5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5c:	81 34       	cpi	r24, 0x41	; 65
    1d5e:	41 f4       	brne	.+16     	; 0x1d70 <enuSetSenseLevel+0x54>
            {
                MCUCR &= ~(3<<0);
    1d60:	a5 e5       	ldi	r26, 0x55	; 85
    1d62:	b0 e0       	ldi	r27, 0x00	; 0
    1d64:	e5 e5       	ldi	r30, 0x55	; 85
    1d66:	f0 e0       	ldi	r31, 0x00	; 0
    1d68:	80 81       	ld	r24, Z
    1d6a:	8c 7f       	andi	r24, 0xFC	; 252
    1d6c:	8c 93       	st	X, r24
    1d6e:	7f c0       	rjmp	.+254    	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_ANY_CHANGE)
    1d70:	8a 81       	ldd	r24, Y+2	; 0x02
    1d72:	80 32       	cpi	r24, 0x20	; 32
    1d74:	79 f4       	brne	.+30     	; 0x1d94 <enuSetSenseLevel+0x78>
            {
                MCUCR &= ~(3<<0);
    1d76:	a5 e5       	ldi	r26, 0x55	; 85
    1d78:	b0 e0       	ldi	r27, 0x00	; 0
    1d7a:	e5 e5       	ldi	r30, 0x55	; 85
    1d7c:	f0 e0       	ldi	r31, 0x00	; 0
    1d7e:	80 81       	ld	r24, Z
    1d80:	8c 7f       	andi	r24, 0xFC	; 252
    1d82:	8c 93       	st	X, r24
                MCUCR |=  (1<<0);
    1d84:	a5 e5       	ldi	r26, 0x55	; 85
    1d86:	b0 e0       	ldi	r27, 0x00	; 0
    1d88:	e5 e5       	ldi	r30, 0x55	; 85
    1d8a:	f0 e0       	ldi	r31, 0x00	; 0
    1d8c:	80 81       	ld	r24, Z
    1d8e:	81 60       	ori	r24, 0x01	; 1
    1d90:	8c 93       	st	X, r24
    1d92:	6d c0       	rjmp	.+218    	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_FALLING)
    1d94:	8a 81       	ldd	r24, Y+2	; 0x02
    1d96:	8c 30       	cpi	r24, 0x0C	; 12
    1d98:	79 f4       	brne	.+30     	; 0x1db8 <enuSetSenseLevel+0x9c>
            {
                MCUCR &= ~(3<<0);
    1d9a:	a5 e5       	ldi	r26, 0x55	; 85
    1d9c:	b0 e0       	ldi	r27, 0x00	; 0
    1d9e:	e5 e5       	ldi	r30, 0x55	; 85
    1da0:	f0 e0       	ldi	r31, 0x00	; 0
    1da2:	80 81       	ld	r24, Z
    1da4:	8c 7f       	andi	r24, 0xFC	; 252
    1da6:	8c 93       	st	X, r24
                MCUCR |=  (1<<1);
    1da8:	a5 e5       	ldi	r26, 0x55	; 85
    1daa:	b0 e0       	ldi	r27, 0x00	; 0
    1dac:	e5 e5       	ldi	r30, 0x55	; 85
    1dae:	f0 e0       	ldi	r31, 0x00	; 0
    1db0:	80 81       	ld	r24, Z
    1db2:	82 60       	ori	r24, 0x02	; 2
    1db4:	8c 93       	st	X, r24
    1db6:	5b c0       	rjmp	.+182    	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_RISING)
    1db8:	8a 81       	ldd	r24, Y+2	; 0x02
    1dba:	8a 35       	cpi	r24, 0x5A	; 90
    1dbc:	09 f0       	breq	.+2      	; 0x1dc0 <enuSetSenseLevel+0xa4>
    1dbe:	57 c0       	rjmp	.+174    	; 0x1e6e <enuSetSenseLevel+0x152>
            {
                MCUCR |=  (3<<0);
    1dc0:	a5 e5       	ldi	r26, 0x55	; 85
    1dc2:	b0 e0       	ldi	r27, 0x00	; 0
    1dc4:	e5 e5       	ldi	r30, 0x55	; 85
    1dc6:	f0 e0       	ldi	r31, 0x00	; 0
    1dc8:	80 81       	ld	r24, Z
    1dca:	83 60       	ori	r24, 0x03	; 3
    1dcc:	8c 93       	st	X, r24
    1dce:	4f c0       	rjmp	.+158    	; 0x1e6e <enuSetSenseLevel+0x152>
            {
            }
            break;
            
        case EXTI_INT1:
            if (Copy_u8SenseLevel == EXTI_LOW_LEVEL)
    1dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd2:	81 34       	cpi	r24, 0x41	; 65
    1dd4:	41 f4       	brne	.+16     	; 0x1de6 <enuSetSenseLevel+0xca>
            {
                MCUCR &= ~(3<<2);
    1dd6:	a5 e5       	ldi	r26, 0x55	; 85
    1dd8:	b0 e0       	ldi	r27, 0x00	; 0
    1dda:	e5 e5       	ldi	r30, 0x55	; 85
    1ddc:	f0 e0       	ldi	r31, 0x00	; 0
    1dde:	80 81       	ld	r24, Z
    1de0:	83 7f       	andi	r24, 0xF3	; 243
    1de2:	8c 93       	st	X, r24
    1de4:	44 c0       	rjmp	.+136    	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_ANY_CHANGE)
    1de6:	8a 81       	ldd	r24, Y+2	; 0x02
    1de8:	80 32       	cpi	r24, 0x20	; 32
    1dea:	79 f4       	brne	.+30     	; 0x1e0a <enuSetSenseLevel+0xee>
            {
                MCUCR &= ~(3<<2);
    1dec:	a5 e5       	ldi	r26, 0x55	; 85
    1dee:	b0 e0       	ldi	r27, 0x00	; 0
    1df0:	e5 e5       	ldi	r30, 0x55	; 85
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	83 7f       	andi	r24, 0xF3	; 243
    1df8:	8c 93       	st	X, r24
                MCUCR |=  (1<<2);
    1dfa:	a5 e5       	ldi	r26, 0x55	; 85
    1dfc:	b0 e0       	ldi	r27, 0x00	; 0
    1dfe:	e5 e5       	ldi	r30, 0x55	; 85
    1e00:	f0 e0       	ldi	r31, 0x00	; 0
    1e02:	80 81       	ld	r24, Z
    1e04:	84 60       	ori	r24, 0x04	; 4
    1e06:	8c 93       	st	X, r24
    1e08:	32 c0       	rjmp	.+100    	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_FALLING)
    1e0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0c:	8c 30       	cpi	r24, 0x0C	; 12
    1e0e:	79 f4       	brne	.+30     	; 0x1e2e <enuSetSenseLevel+0x112>
            {
                MCUCR &= ~(3<<2);
    1e10:	a5 e5       	ldi	r26, 0x55	; 85
    1e12:	b0 e0       	ldi	r27, 0x00	; 0
    1e14:	e5 e5       	ldi	r30, 0x55	; 85
    1e16:	f0 e0       	ldi	r31, 0x00	; 0
    1e18:	80 81       	ld	r24, Z
    1e1a:	83 7f       	andi	r24, 0xF3	; 243
    1e1c:	8c 93       	st	X, r24
                MCUCR |=  (1<<3);
    1e1e:	a5 e5       	ldi	r26, 0x55	; 85
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	e5 e5       	ldi	r30, 0x55	; 85
    1e24:	f0 e0       	ldi	r31, 0x00	; 0
    1e26:	80 81       	ld	r24, Z
    1e28:	88 60       	ori	r24, 0x08	; 8
    1e2a:	8c 93       	st	X, r24
    1e2c:	20 c0       	rjmp	.+64     	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_RISING)
    1e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e30:	8a 35       	cpi	r24, 0x5A	; 90
    1e32:	e9 f4       	brne	.+58     	; 0x1e6e <enuSetSenseLevel+0x152>
            {
                MCUCR |=  (3<<2);
    1e34:	a5 e5       	ldi	r26, 0x55	; 85
    1e36:	b0 e0       	ldi	r27, 0x00	; 0
    1e38:	e5 e5       	ldi	r30, 0x55	; 85
    1e3a:	f0 e0       	ldi	r31, 0x00	; 0
    1e3c:	80 81       	ld	r24, Z
    1e3e:	8c 60       	ori	r24, 0x0C	; 12
    1e40:	8c 93       	st	X, r24
    1e42:	15 c0       	rjmp	.+42     	; 0x1e6e <enuSetSenseLevel+0x152>
            {
            }
            break;

        case EXTI_INT2:
            if (Copy_u8SenseLevel == EXTI_FALLING)
    1e44:	8a 81       	ldd	r24, Y+2	; 0x02
    1e46:	8c 30       	cpi	r24, 0x0C	; 12
    1e48:	41 f4       	brne	.+16     	; 0x1e5a <enuSetSenseLevel+0x13e>
            {
                MCUCSR &= ~(1<<6);
    1e4a:	a4 e5       	ldi	r26, 0x54	; 84
    1e4c:	b0 e0       	ldi	r27, 0x00	; 0
    1e4e:	e4 e5       	ldi	r30, 0x54	; 84
    1e50:	f0 e0       	ldi	r31, 0x00	; 0
    1e52:	80 81       	ld	r24, Z
    1e54:	8f 7b       	andi	r24, 0xBF	; 191
    1e56:	8c 93       	st	X, r24
    1e58:	0a c0       	rjmp	.+20     	; 0x1e6e <enuSetSenseLevel+0x152>
            }
            else if (Copy_u8SenseLevel == EXTI_RISING)
    1e5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e5c:	8a 35       	cpi	r24, 0x5A	; 90
    1e5e:	39 f4       	brne	.+14     	; 0x1e6e <enuSetSenseLevel+0x152>
            {
                MCUCSR |=  (1<<6);
    1e60:	a4 e5       	ldi	r26, 0x54	; 84
    1e62:	b0 e0       	ldi	r27, 0x00	; 0
    1e64:	e4 e5       	ldi	r30, 0x54	; 84
    1e66:	f0 e0       	ldi	r31, 0x00	; 0
    1e68:	80 81       	ld	r24, Z
    1e6a:	80 64       	ori	r24, 0x40	; 64
    1e6c:	8c 93       	st	X, r24
            else 
            {
            }
            break;
    }
    1e6e:	0f 90       	pop	r0
    1e70:	0f 90       	pop	r0
    1e72:	0f 90       	pop	r0
    1e74:	0f 90       	pop	r0
    1e76:	0f 90       	pop	r0
    1e78:	cf 91       	pop	r28
    1e7a:	df 91       	pop	r29
    1e7c:	08 95       	ret

00001e7e <DIO_enuInit>:
#include "DIO_config.h"
#include "DIO_priv.h"


ES_t DIO_enuInit(void)
{
    1e7e:	df 93       	push	r29
    1e80:	cf 93       	push	r28
    1e82:	0f 92       	push	r0
    1e84:	cd b7       	in	r28, 0x3d	; 61
    1e86:	de b7       	in	r29, 0x3e	; 62
    ES_t Local_enuErrorState = ES_NOK;
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	89 83       	std	Y+1, r24	; 0x01

    

    return Local_enuErrorState;
    1e8c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1e8e:	0f 90       	pop	r0
    1e90:	cf 91       	pop	r28
    1e92:	df 91       	pop	r29
    1e94:	08 95       	ret

00001e96 <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8GroupID , u8 Copy_u8PinID , u8 Copy_u8Direction)
{
    1e96:	df 93       	push	r29
    1e98:	cf 93       	push	r28
    1e9a:	00 d0       	rcall	.+0      	; 0x1e9c <DIO_enuSetPinDirection+0x6>
    1e9c:	00 d0       	rcall	.+0      	; 0x1e9e <DIO_enuSetPinDirection+0x8>
    1e9e:	00 d0       	rcall	.+0      	; 0x1ea0 <DIO_enuSetPinDirection+0xa>
    1ea0:	cd b7       	in	r28, 0x3d	; 61
    1ea2:	de b7       	in	r29, 0x3e	; 62
    1ea4:	8a 83       	std	Y+2, r24	; 0x02
    1ea6:	6b 83       	std	Y+3, r22	; 0x03
    1ea8:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState = ES_NOK;
    1eaa:	81 e0       	ldi	r24, 0x01	; 1
    1eac:	89 83       	std	Y+1, r24	; 0x01

    if ((Copy_u8GroupID <= DIO_GROUP_D) && (Copy_u8PinID <= DIO_PIN_7)
    1eae:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb0:	84 30       	cpi	r24, 0x04	; 4
    1eb2:	08 f0       	brcs	.+2      	; 0x1eb6 <DIO_enuSetPinDirection+0x20>
    1eb4:	d0 c0       	rjmp	.+416    	; 0x2056 <DIO_enuSetPinDirection+0x1c0>
    1eb6:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb8:	88 30       	cpi	r24, 0x08	; 8
    1eba:	08 f0       	brcs	.+2      	; 0x1ebe <DIO_enuSetPinDirection+0x28>
    1ebc:	cc c0       	rjmp	.+408    	; 0x2056 <DIO_enuSetPinDirection+0x1c0>
    1ebe:	8c 81       	ldd	r24, Y+4	; 0x04
    1ec0:	82 30       	cpi	r24, 0x02	; 2
    1ec2:	08 f0       	brcs	.+2      	; 0x1ec6 <DIO_enuSetPinDirection+0x30>
    1ec4:	c8 c0       	rjmp	.+400    	; 0x2056 <DIO_enuSetPinDirection+0x1c0>
            && (Copy_u8Direction <= DIO_OUTPUT))
    {
        switch(Copy_u8GroupID)
    1ec6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec8:	28 2f       	mov	r18, r24
    1eca:	30 e0       	ldi	r19, 0x00	; 0
    1ecc:	3e 83       	std	Y+6, r19	; 0x06
    1ece:	2d 83       	std	Y+5, r18	; 0x05
    1ed0:	6d 81       	ldd	r22, Y+5	; 0x05
    1ed2:	7e 81       	ldd	r23, Y+6	; 0x06
    1ed4:	61 30       	cpi	r22, 0x01	; 1
    1ed6:	71 05       	cpc	r23, r1
    1ed8:	09 f4       	brne	.+2      	; 0x1edc <DIO_enuSetPinDirection+0x46>
    1eda:	41 c0       	rjmp	.+130    	; 0x1f5e <DIO_enuSetPinDirection+0xc8>
    1edc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ede:	9e 81       	ldd	r25, Y+6	; 0x06
    1ee0:	82 30       	cpi	r24, 0x02	; 2
    1ee2:	91 05       	cpc	r25, r1
    1ee4:	34 f4       	brge	.+12     	; 0x1ef2 <DIO_enuSetPinDirection+0x5c>
    1ee6:	2d 81       	ldd	r18, Y+5	; 0x05
    1ee8:	3e 81       	ldd	r19, Y+6	; 0x06
    1eea:	21 15       	cp	r18, r1
    1eec:	31 05       	cpc	r19, r1
    1eee:	71 f0       	breq	.+28     	; 0x1f0c <DIO_enuSetPinDirection+0x76>
    1ef0:	b0 c0       	rjmp	.+352    	; 0x2052 <DIO_enuSetPinDirection+0x1bc>
    1ef2:	6d 81       	ldd	r22, Y+5	; 0x05
    1ef4:	7e 81       	ldd	r23, Y+6	; 0x06
    1ef6:	62 30       	cpi	r22, 0x02	; 2
    1ef8:	71 05       	cpc	r23, r1
    1efa:	09 f4       	brne	.+2      	; 0x1efe <DIO_enuSetPinDirection+0x68>
    1efc:	59 c0       	rjmp	.+178    	; 0x1fb0 <DIO_enuSetPinDirection+0x11a>
    1efe:	8d 81       	ldd	r24, Y+5	; 0x05
    1f00:	9e 81       	ldd	r25, Y+6	; 0x06
    1f02:	83 30       	cpi	r24, 0x03	; 3
    1f04:	91 05       	cpc	r25, r1
    1f06:	09 f4       	brne	.+2      	; 0x1f0a <DIO_enuSetPinDirection+0x74>
    1f08:	7c c0       	rjmp	.+248    	; 0x2002 <DIO_enuSetPinDirection+0x16c>
    1f0a:	a3 c0       	rjmp	.+326    	; 0x2052 <DIO_enuSetPinDirection+0x1bc>
        {
            case DIO_GROUP_A:
                DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);
    1f0c:	aa e3       	ldi	r26, 0x3A	; 58
    1f0e:	b0 e0       	ldi	r27, 0x00	; 0
    1f10:	ea e3       	ldi	r30, 0x3A	; 58
    1f12:	f0 e0       	ldi	r31, 0x00	; 0
    1f14:	80 81       	ld	r24, Z
    1f16:	48 2f       	mov	r20, r24
    1f18:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1a:	28 2f       	mov	r18, r24
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	81 e0       	ldi	r24, 0x01	; 1
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	02 c0       	rjmp	.+4      	; 0x1f28 <DIO_enuSetPinDirection+0x92>
    1f24:	88 0f       	add	r24, r24
    1f26:	99 1f       	adc	r25, r25
    1f28:	2a 95       	dec	r18
    1f2a:	e2 f7       	brpl	.-8      	; 0x1f24 <DIO_enuSetPinDirection+0x8e>
    1f2c:	80 95       	com	r24
    1f2e:	84 23       	and	r24, r20
    1f30:	8c 93       	st	X, r24
                DDRA |=  (Copy_u8Direction << Copy_u8PinID);
    1f32:	aa e3       	ldi	r26, 0x3A	; 58
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	ea e3       	ldi	r30, 0x3A	; 58
    1f38:	f0 e0       	ldi	r31, 0x00	; 0
    1f3a:	80 81       	ld	r24, Z
    1f3c:	48 2f       	mov	r20, r24
    1f3e:	8c 81       	ldd	r24, Y+4	; 0x04
    1f40:	28 2f       	mov	r18, r24
    1f42:	30 e0       	ldi	r19, 0x00	; 0
    1f44:	8b 81       	ldd	r24, Y+3	; 0x03
    1f46:	88 2f       	mov	r24, r24
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	b9 01       	movw	r22, r18
    1f4c:	02 c0       	rjmp	.+4      	; 0x1f52 <DIO_enuSetPinDirection+0xbc>
    1f4e:	66 0f       	add	r22, r22
    1f50:	77 1f       	adc	r23, r23
    1f52:	8a 95       	dec	r24
    1f54:	e2 f7       	brpl	.-8      	; 0x1f4e <DIO_enuSetPinDirection+0xb8>
    1f56:	cb 01       	movw	r24, r22
    1f58:	84 2b       	or	r24, r20
    1f5a:	8c 93       	st	X, r24
    1f5c:	7a c0       	rjmp	.+244    	; 0x2052 <DIO_enuSetPinDirection+0x1bc>
            break;

            case DIO_GROUP_B:
                DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    1f5e:	a7 e3       	ldi	r26, 0x37	; 55
    1f60:	b0 e0       	ldi	r27, 0x00	; 0
    1f62:	e7 e3       	ldi	r30, 0x37	; 55
    1f64:	f0 e0       	ldi	r31, 0x00	; 0
    1f66:	80 81       	ld	r24, Z
    1f68:	48 2f       	mov	r20, r24
    1f6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	30 e0       	ldi	r19, 0x00	; 0
    1f70:	81 e0       	ldi	r24, 0x01	; 1
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	02 c0       	rjmp	.+4      	; 0x1f7a <DIO_enuSetPinDirection+0xe4>
    1f76:	88 0f       	add	r24, r24
    1f78:	99 1f       	adc	r25, r25
    1f7a:	2a 95       	dec	r18
    1f7c:	e2 f7       	brpl	.-8      	; 0x1f76 <DIO_enuSetPinDirection+0xe0>
    1f7e:	80 95       	com	r24
    1f80:	84 23       	and	r24, r20
    1f82:	8c 93       	st	X, r24
                DDRB |=  (Copy_u8Direction << Copy_u8PinID);
    1f84:	a7 e3       	ldi	r26, 0x37	; 55
    1f86:	b0 e0       	ldi	r27, 0x00	; 0
    1f88:	e7 e3       	ldi	r30, 0x37	; 55
    1f8a:	f0 e0       	ldi	r31, 0x00	; 0
    1f8c:	80 81       	ld	r24, Z
    1f8e:	48 2f       	mov	r20, r24
    1f90:	8c 81       	ldd	r24, Y+4	; 0x04
    1f92:	28 2f       	mov	r18, r24
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	8b 81       	ldd	r24, Y+3	; 0x03
    1f98:	88 2f       	mov	r24, r24
    1f9a:	90 e0       	ldi	r25, 0x00	; 0
    1f9c:	b9 01       	movw	r22, r18
    1f9e:	02 c0       	rjmp	.+4      	; 0x1fa4 <DIO_enuSetPinDirection+0x10e>
    1fa0:	66 0f       	add	r22, r22
    1fa2:	77 1f       	adc	r23, r23
    1fa4:	8a 95       	dec	r24
    1fa6:	e2 f7       	brpl	.-8      	; 0x1fa0 <DIO_enuSetPinDirection+0x10a>
    1fa8:	cb 01       	movw	r24, r22
    1faa:	84 2b       	or	r24, r20
    1fac:	8c 93       	st	X, r24
    1fae:	51 c0       	rjmp	.+162    	; 0x2052 <DIO_enuSetPinDirection+0x1bc>
            break;

            case DIO_GROUP_C:
                DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    1fb0:	a4 e3       	ldi	r26, 0x34	; 52
    1fb2:	b0 e0       	ldi	r27, 0x00	; 0
    1fb4:	e4 e3       	ldi	r30, 0x34	; 52
    1fb6:	f0 e0       	ldi	r31, 0x00	; 0
    1fb8:	80 81       	ld	r24, Z
    1fba:	48 2f       	mov	r20, r24
    1fbc:	8b 81       	ldd	r24, Y+3	; 0x03
    1fbe:	28 2f       	mov	r18, r24
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	81 e0       	ldi	r24, 0x01	; 1
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	02 c0       	rjmp	.+4      	; 0x1fcc <DIO_enuSetPinDirection+0x136>
    1fc8:	88 0f       	add	r24, r24
    1fca:	99 1f       	adc	r25, r25
    1fcc:	2a 95       	dec	r18
    1fce:	e2 f7       	brpl	.-8      	; 0x1fc8 <DIO_enuSetPinDirection+0x132>
    1fd0:	80 95       	com	r24
    1fd2:	84 23       	and	r24, r20
    1fd4:	8c 93       	st	X, r24
                DDRC |=  (Copy_u8Direction << Copy_u8PinID);
    1fd6:	a4 e3       	ldi	r26, 0x34	; 52
    1fd8:	b0 e0       	ldi	r27, 0x00	; 0
    1fda:	e4 e3       	ldi	r30, 0x34	; 52
    1fdc:	f0 e0       	ldi	r31, 0x00	; 0
    1fde:	80 81       	ld	r24, Z
    1fe0:	48 2f       	mov	r20, r24
    1fe2:	8c 81       	ldd	r24, Y+4	; 0x04
    1fe4:	28 2f       	mov	r18, r24
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    1fea:	88 2f       	mov	r24, r24
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	b9 01       	movw	r22, r18
    1ff0:	02 c0       	rjmp	.+4      	; 0x1ff6 <DIO_enuSetPinDirection+0x160>
    1ff2:	66 0f       	add	r22, r22
    1ff4:	77 1f       	adc	r23, r23
    1ff6:	8a 95       	dec	r24
    1ff8:	e2 f7       	brpl	.-8      	; 0x1ff2 <DIO_enuSetPinDirection+0x15c>
    1ffa:	cb 01       	movw	r24, r22
    1ffc:	84 2b       	or	r24, r20
    1ffe:	8c 93       	st	X, r24
    2000:	28 c0       	rjmp	.+80     	; 0x2052 <DIO_enuSetPinDirection+0x1bc>
            break;
            
            case DIO_GROUP_D:
                DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    2002:	a1 e3       	ldi	r26, 0x31	; 49
    2004:	b0 e0       	ldi	r27, 0x00	; 0
    2006:	e1 e3       	ldi	r30, 0x31	; 49
    2008:	f0 e0       	ldi	r31, 0x00	; 0
    200a:	80 81       	ld	r24, Z
    200c:	48 2f       	mov	r20, r24
    200e:	8b 81       	ldd	r24, Y+3	; 0x03
    2010:	28 2f       	mov	r18, r24
    2012:	30 e0       	ldi	r19, 0x00	; 0
    2014:	81 e0       	ldi	r24, 0x01	; 1
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	02 c0       	rjmp	.+4      	; 0x201e <DIO_enuSetPinDirection+0x188>
    201a:	88 0f       	add	r24, r24
    201c:	99 1f       	adc	r25, r25
    201e:	2a 95       	dec	r18
    2020:	e2 f7       	brpl	.-8      	; 0x201a <DIO_enuSetPinDirection+0x184>
    2022:	80 95       	com	r24
    2024:	84 23       	and	r24, r20
    2026:	8c 93       	st	X, r24
                DDRD |=  (Copy_u8Direction << Copy_u8PinID);
    2028:	a1 e3       	ldi	r26, 0x31	; 49
    202a:	b0 e0       	ldi	r27, 0x00	; 0
    202c:	e1 e3       	ldi	r30, 0x31	; 49
    202e:	f0 e0       	ldi	r31, 0x00	; 0
    2030:	80 81       	ld	r24, Z
    2032:	48 2f       	mov	r20, r24
    2034:	8c 81       	ldd	r24, Y+4	; 0x04
    2036:	28 2f       	mov	r18, r24
    2038:	30 e0       	ldi	r19, 0x00	; 0
    203a:	8b 81       	ldd	r24, Y+3	; 0x03
    203c:	88 2f       	mov	r24, r24
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	b9 01       	movw	r22, r18
    2042:	02 c0       	rjmp	.+4      	; 0x2048 <DIO_enuSetPinDirection+0x1b2>
    2044:	66 0f       	add	r22, r22
    2046:	77 1f       	adc	r23, r23
    2048:	8a 95       	dec	r24
    204a:	e2 f7       	brpl	.-8      	; 0x2044 <DIO_enuSetPinDirection+0x1ae>
    204c:	cb 01       	movw	r24, r22
    204e:	84 2b       	or	r24, r20
    2050:	8c 93       	st	X, r24
            break;

            default:
            break;
        }
        Local_enuErrorState = ES_OK;
    2052:	19 82       	std	Y+1, r1	; 0x01
    2054:	02 c0       	rjmp	.+4      	; 0x205a <DIO_enuSetPinDirection+0x1c4>
    }
    else
    {
        Local_enuErrorState = ES_OUT_OF_RANGE;
    2056:	82 e0       	ldi	r24, 0x02	; 2
    2058:	89 83       	std	Y+1, r24	; 0x01
    }

    return Local_enuErrorState;
    205a:	89 81       	ldd	r24, Y+1	; 0x01
}
    205c:	26 96       	adiw	r28, 0x06	; 6
    205e:	0f b6       	in	r0, 0x3f	; 63
    2060:	f8 94       	cli
    2062:	de bf       	out	0x3e, r29	; 62
    2064:	0f be       	out	0x3f, r0	; 63
    2066:	cd bf       	out	0x3d, r28	; 61
    2068:	cf 91       	pop	r28
    206a:	df 91       	pop	r29
    206c:	08 95       	ret

0000206e <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8GroupID , u8 Copy_u8PinID , u8 Copy_u8Value)
{
    206e:	df 93       	push	r29
    2070:	cf 93       	push	r28
    2072:	cd b7       	in	r28, 0x3d	; 61
    2074:	de b7       	in	r29, 0x3e	; 62
    2076:	29 97       	sbiw	r28, 0x09	; 9
    2078:	0f b6       	in	r0, 0x3f	; 63
    207a:	f8 94       	cli
    207c:	de bf       	out	0x3e, r29	; 62
    207e:	0f be       	out	0x3f, r0	; 63
    2080:	cd bf       	out	0x3d, r28	; 61
    2082:	8a 83       	std	Y+2, r24	; 0x02
    2084:	6b 83       	std	Y+3, r22	; 0x03
    2086:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState = ES_NOK;
    2088:	81 e0       	ldi	r24, 0x01	; 1
    208a:	89 83       	std	Y+1, r24	; 0x01

        if ((Copy_u8GroupID <= DIO_GROUP_D) && (Copy_u8PinID <= DIO_PIN_7)
    208c:	8a 81       	ldd	r24, Y+2	; 0x02
    208e:	84 30       	cpi	r24, 0x04	; 4
    2090:	08 f0       	brcs	.+2      	; 0x2094 <DIO_enuSetPinValue+0x26>
    2092:	df c0       	rjmp	.+446    	; 0x2252 <DIO_enuSetPinValue+0x1e4>
    2094:	8b 81       	ldd	r24, Y+3	; 0x03
    2096:	88 30       	cpi	r24, 0x08	; 8
    2098:	08 f0       	brcs	.+2      	; 0x209c <DIO_enuSetPinValue+0x2e>
    209a:	db c0       	rjmp	.+438    	; 0x2252 <DIO_enuSetPinValue+0x1e4>
    209c:	8c 81       	ldd	r24, Y+4	; 0x04
    209e:	82 30       	cpi	r24, 0x02	; 2
    20a0:	08 f0       	brcs	.+2      	; 0x20a4 <DIO_enuSetPinValue+0x36>
    20a2:	d7 c0       	rjmp	.+430    	; 0x2252 <DIO_enuSetPinValue+0x1e4>
            && (Copy_u8Value <= DIO_HIGH))
    {
        switch(Copy_u8GroupID)
    20a4:	8a 81       	ldd	r24, Y+2	; 0x02
    20a6:	28 2f       	mov	r18, r24
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	39 87       	std	Y+9, r19	; 0x09
    20ac:	28 87       	std	Y+8, r18	; 0x08
    20ae:	88 85       	ldd	r24, Y+8	; 0x08
    20b0:	99 85       	ldd	r25, Y+9	; 0x09
    20b2:	81 30       	cpi	r24, 0x01	; 1
    20b4:	91 05       	cpc	r25, r1
    20b6:	09 f4       	brne	.+2      	; 0x20ba <DIO_enuSetPinValue+0x4c>
    20b8:	44 c0       	rjmp	.+136    	; 0x2142 <DIO_enuSetPinValue+0xd4>
    20ba:	e8 85       	ldd	r30, Y+8	; 0x08
    20bc:	f9 85       	ldd	r31, Y+9	; 0x09
    20be:	e2 30       	cpi	r30, 0x02	; 2
    20c0:	f1 05       	cpc	r31, r1
    20c2:	34 f4       	brge	.+12     	; 0x20d0 <DIO_enuSetPinValue+0x62>
    20c4:	28 85       	ldd	r18, Y+8	; 0x08
    20c6:	39 85       	ldd	r19, Y+9	; 0x09
    20c8:	21 15       	cp	r18, r1
    20ca:	31 05       	cpc	r19, r1
    20cc:	71 f0       	breq	.+28     	; 0x20ea <DIO_enuSetPinValue+0x7c>
    20ce:	bf c0       	rjmp	.+382    	; 0x224e <DIO_enuSetPinValue+0x1e0>
    20d0:	88 85       	ldd	r24, Y+8	; 0x08
    20d2:	99 85       	ldd	r25, Y+9	; 0x09
    20d4:	82 30       	cpi	r24, 0x02	; 2
    20d6:	91 05       	cpc	r25, r1
    20d8:	09 f4       	brne	.+2      	; 0x20dc <DIO_enuSetPinValue+0x6e>
    20da:	62 c0       	rjmp	.+196    	; 0x21a0 <DIO_enuSetPinValue+0x132>
    20dc:	e8 85       	ldd	r30, Y+8	; 0x08
    20de:	f9 85       	ldd	r31, Y+9	; 0x09
    20e0:	e3 30       	cpi	r30, 0x03	; 3
    20e2:	f1 05       	cpc	r31, r1
    20e4:	09 f4       	brne	.+2      	; 0x20e8 <DIO_enuSetPinValue+0x7a>
    20e6:	88 c0       	rjmp	.+272    	; 0x21f8 <DIO_enuSetPinValue+0x18a>
    20e8:	b2 c0       	rjmp	.+356    	; 0x224e <DIO_enuSetPinValue+0x1e0>
        {
            case DIO_GROUP_A:
                if(Copy_u8Value == DIO_HIGH)
    20ea:	8c 81       	ldd	r24, Y+4	; 0x04
    20ec:	81 30       	cpi	r24, 0x01	; 1
    20ee:	a1 f4       	brne	.+40     	; 0x2118 <DIO_enuSetPinValue+0xaa>
                {
                    PORTA |=  (DIO_MASK_BIT << Copy_u8PinID);
    20f0:	ab e3       	ldi	r26, 0x3B	; 59
    20f2:	b0 e0       	ldi	r27, 0x00	; 0
    20f4:	eb e3       	ldi	r30, 0x3B	; 59
    20f6:	f0 e0       	ldi	r31, 0x00	; 0
    20f8:	80 81       	ld	r24, Z
    20fa:	48 2f       	mov	r20, r24
    20fc:	8b 81       	ldd	r24, Y+3	; 0x03
    20fe:	28 2f       	mov	r18, r24
    2100:	30 e0       	ldi	r19, 0x00	; 0
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	02 2e       	mov	r0, r18
    2108:	02 c0       	rjmp	.+4      	; 0x210e <DIO_enuSetPinValue+0xa0>
    210a:	88 0f       	add	r24, r24
    210c:	99 1f       	adc	r25, r25
    210e:	0a 94       	dec	r0
    2110:	e2 f7       	brpl	.-8      	; 0x210a <DIO_enuSetPinValue+0x9c>
    2112:	84 2b       	or	r24, r20
    2114:	8c 93       	st	X, r24
    2116:	9b c0       	rjmp	.+310    	; 0x224e <DIO_enuSetPinValue+0x1e0>
                }
                else
                {
                    PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);
    2118:	ab e3       	ldi	r26, 0x3B	; 59
    211a:	b0 e0       	ldi	r27, 0x00	; 0
    211c:	eb e3       	ldi	r30, 0x3B	; 59
    211e:	f0 e0       	ldi	r31, 0x00	; 0
    2120:	80 81       	ld	r24, Z
    2122:	48 2f       	mov	r20, r24
    2124:	8b 81       	ldd	r24, Y+3	; 0x03
    2126:	28 2f       	mov	r18, r24
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	81 e0       	ldi	r24, 0x01	; 1
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	02 2e       	mov	r0, r18
    2130:	02 c0       	rjmp	.+4      	; 0x2136 <DIO_enuSetPinValue+0xc8>
    2132:	88 0f       	add	r24, r24
    2134:	99 1f       	adc	r25, r25
    2136:	0a 94       	dec	r0
    2138:	e2 f7       	brpl	.-8      	; 0x2132 <DIO_enuSetPinValue+0xc4>
    213a:	80 95       	com	r24
    213c:	84 23       	and	r24, r20
    213e:	8c 93       	st	X, r24
    2140:	86 c0       	rjmp	.+268    	; 0x224e <DIO_enuSetPinValue+0x1e0>
                }
            break;

            case DIO_GROUP_B:
                PORTB = (Copy_u8Value == DIO_HIGH)? (PORTB | (DIO_MASK_BIT<<Copy_u8PinID)) : (PORTB &  (~(DIO_MASK_BIT<<Copy_u8PinID)));
    2142:	28 e3       	ldi	r18, 0x38	; 56
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	3f 83       	std	Y+7, r19	; 0x07
    2148:	2e 83       	std	Y+6, r18	; 0x06
    214a:	8c 81       	ldd	r24, Y+4	; 0x04
    214c:	81 30       	cpi	r24, 0x01	; 1
    214e:	91 f4       	brne	.+36     	; 0x2174 <DIO_enuSetPinValue+0x106>
    2150:	e8 e3       	ldi	r30, 0x38	; 56
    2152:	f0 e0       	ldi	r31, 0x00	; 0
    2154:	80 81       	ld	r24, Z
    2156:	48 2f       	mov	r20, r24
    2158:	8b 81       	ldd	r24, Y+3	; 0x03
    215a:	28 2f       	mov	r18, r24
    215c:	30 e0       	ldi	r19, 0x00	; 0
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	02 2e       	mov	r0, r18
    2164:	02 c0       	rjmp	.+4      	; 0x216a <DIO_enuSetPinValue+0xfc>
    2166:	88 0f       	add	r24, r24
    2168:	99 1f       	adc	r25, r25
    216a:	0a 94       	dec	r0
    216c:	e2 f7       	brpl	.-8      	; 0x2166 <DIO_enuSetPinValue+0xf8>
    216e:	84 2b       	or	r24, r20
    2170:	8d 83       	std	Y+5, r24	; 0x05
    2172:	11 c0       	rjmp	.+34     	; 0x2196 <DIO_enuSetPinValue+0x128>
    2174:	e8 e3       	ldi	r30, 0x38	; 56
    2176:	f0 e0       	ldi	r31, 0x00	; 0
    2178:	80 81       	ld	r24, Z
    217a:	48 2f       	mov	r20, r24
    217c:	8b 81       	ldd	r24, Y+3	; 0x03
    217e:	28 2f       	mov	r18, r24
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	81 e0       	ldi	r24, 0x01	; 1
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	02 c0       	rjmp	.+4      	; 0x218c <DIO_enuSetPinValue+0x11e>
    2188:	88 0f       	add	r24, r24
    218a:	99 1f       	adc	r25, r25
    218c:	2a 95       	dec	r18
    218e:	e2 f7       	brpl	.-8      	; 0x2188 <DIO_enuSetPinValue+0x11a>
    2190:	80 95       	com	r24
    2192:	84 23       	and	r24, r20
    2194:	8d 83       	std	Y+5, r24	; 0x05
    2196:	2d 81       	ldd	r18, Y+5	; 0x05
    2198:	ee 81       	ldd	r30, Y+6	; 0x06
    219a:	ff 81       	ldd	r31, Y+7	; 0x07
    219c:	20 83       	st	Z, r18
    219e:	57 c0       	rjmp	.+174    	; 0x224e <DIO_enuSetPinValue+0x1e0>
            break;

            case DIO_GROUP_C:
                if(Copy_u8Value == DIO_HIGH)
    21a0:	8c 81       	ldd	r24, Y+4	; 0x04
    21a2:	81 30       	cpi	r24, 0x01	; 1
    21a4:	a1 f4       	brne	.+40     	; 0x21ce <DIO_enuSetPinValue+0x160>
                {
                    PORTC |=  (DIO_MASK_BIT << Copy_u8PinID);
    21a6:	a5 e3       	ldi	r26, 0x35	; 53
    21a8:	b0 e0       	ldi	r27, 0x00	; 0
    21aa:	e5 e3       	ldi	r30, 0x35	; 53
    21ac:	f0 e0       	ldi	r31, 0x00	; 0
    21ae:	80 81       	ld	r24, Z
    21b0:	48 2f       	mov	r20, r24
    21b2:	8b 81       	ldd	r24, Y+3	; 0x03
    21b4:	28 2f       	mov	r18, r24
    21b6:	30 e0       	ldi	r19, 0x00	; 0
    21b8:	81 e0       	ldi	r24, 0x01	; 1
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	02 2e       	mov	r0, r18
    21be:	02 c0       	rjmp	.+4      	; 0x21c4 <DIO_enuSetPinValue+0x156>
    21c0:	88 0f       	add	r24, r24
    21c2:	99 1f       	adc	r25, r25
    21c4:	0a 94       	dec	r0
    21c6:	e2 f7       	brpl	.-8      	; 0x21c0 <DIO_enuSetPinValue+0x152>
    21c8:	84 2b       	or	r24, r20
    21ca:	8c 93       	st	X, r24
    21cc:	40 c0       	rjmp	.+128    	; 0x224e <DIO_enuSetPinValue+0x1e0>
                }
                else
                {
                    PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    21ce:	a5 e3       	ldi	r26, 0x35	; 53
    21d0:	b0 e0       	ldi	r27, 0x00	; 0
    21d2:	e5 e3       	ldi	r30, 0x35	; 53
    21d4:	f0 e0       	ldi	r31, 0x00	; 0
    21d6:	80 81       	ld	r24, Z
    21d8:	48 2f       	mov	r20, r24
    21da:	8b 81       	ldd	r24, Y+3	; 0x03
    21dc:	28 2f       	mov	r18, r24
    21de:	30 e0       	ldi	r19, 0x00	; 0
    21e0:	81 e0       	ldi	r24, 0x01	; 1
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	02 2e       	mov	r0, r18
    21e6:	02 c0       	rjmp	.+4      	; 0x21ec <DIO_enuSetPinValue+0x17e>
    21e8:	88 0f       	add	r24, r24
    21ea:	99 1f       	adc	r25, r25
    21ec:	0a 94       	dec	r0
    21ee:	e2 f7       	brpl	.-8      	; 0x21e8 <DIO_enuSetPinValue+0x17a>
    21f0:	80 95       	com	r24
    21f2:	84 23       	and	r24, r20
    21f4:	8c 93       	st	X, r24
    21f6:	2b c0       	rjmp	.+86     	; 0x224e <DIO_enuSetPinValue+0x1e0>
                }
                break;
            
            case DIO_GROUP_D:
                if(Copy_u8Value == DIO_HIGH)
    21f8:	8c 81       	ldd	r24, Y+4	; 0x04
    21fa:	81 30       	cpi	r24, 0x01	; 1
    21fc:	a1 f4       	brne	.+40     	; 0x2226 <DIO_enuSetPinValue+0x1b8>
                {
                    PORTD |=  (DIO_MASK_BIT << Copy_u8PinID);
    21fe:	a2 e3       	ldi	r26, 0x32	; 50
    2200:	b0 e0       	ldi	r27, 0x00	; 0
    2202:	e2 e3       	ldi	r30, 0x32	; 50
    2204:	f0 e0       	ldi	r31, 0x00	; 0
    2206:	80 81       	ld	r24, Z
    2208:	48 2f       	mov	r20, r24
    220a:	8b 81       	ldd	r24, Y+3	; 0x03
    220c:	28 2f       	mov	r18, r24
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	81 e0       	ldi	r24, 0x01	; 1
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	02 2e       	mov	r0, r18
    2216:	02 c0       	rjmp	.+4      	; 0x221c <DIO_enuSetPinValue+0x1ae>
    2218:	88 0f       	add	r24, r24
    221a:	99 1f       	adc	r25, r25
    221c:	0a 94       	dec	r0
    221e:	e2 f7       	brpl	.-8      	; 0x2218 <DIO_enuSetPinValue+0x1aa>
    2220:	84 2b       	or	r24, r20
    2222:	8c 93       	st	X, r24
    2224:	14 c0       	rjmp	.+40     	; 0x224e <DIO_enuSetPinValue+0x1e0>
                }
                else
                {
                    PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    2226:	a2 e3       	ldi	r26, 0x32	; 50
    2228:	b0 e0       	ldi	r27, 0x00	; 0
    222a:	e2 e3       	ldi	r30, 0x32	; 50
    222c:	f0 e0       	ldi	r31, 0x00	; 0
    222e:	80 81       	ld	r24, Z
    2230:	48 2f       	mov	r20, r24
    2232:	8b 81       	ldd	r24, Y+3	; 0x03
    2234:	28 2f       	mov	r18, r24
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	81 e0       	ldi	r24, 0x01	; 1
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	02 2e       	mov	r0, r18
    223e:	02 c0       	rjmp	.+4      	; 0x2244 <DIO_enuSetPinValue+0x1d6>
    2240:	88 0f       	add	r24, r24
    2242:	99 1f       	adc	r25, r25
    2244:	0a 94       	dec	r0
    2246:	e2 f7       	brpl	.-8      	; 0x2240 <DIO_enuSetPinValue+0x1d2>
    2248:	80 95       	com	r24
    224a:	84 23       	and	r24, r20
    224c:	8c 93       	st	X, r24
                break;

            default:
            break;
        }
        Local_enuErrorState = ES_OK;
    224e:	19 82       	std	Y+1, r1	; 0x01
    2250:	02 c0       	rjmp	.+4      	; 0x2256 <DIO_enuSetPinValue+0x1e8>
    }
    else
    {
        Local_enuErrorState = ES_OUT_OF_RANGE;
    2252:	82 e0       	ldi	r24, 0x02	; 2
    2254:	89 83       	std	Y+1, r24	; 0x01
    }

    return Local_enuErrorState;
    2256:	89 81       	ldd	r24, Y+1	; 0x01
}
    2258:	29 96       	adiw	r28, 0x09	; 9
    225a:	0f b6       	in	r0, 0x3f	; 63
    225c:	f8 94       	cli
    225e:	de bf       	out	0x3e, r29	; 62
    2260:	0f be       	out	0x3f, r0	; 63
    2262:	cd bf       	out	0x3d, r28	; 61
    2264:	cf 91       	pop	r28
    2266:	df 91       	pop	r29
    2268:	08 95       	ret

0000226a <DIO_enuTogglePinValue>:

ES_t DIO_enuTogglePinValue(u8 Copy_u8GroupID , u8 Copy_u8PinID)
{
    226a:	df 93       	push	r29
    226c:	cf 93       	push	r28
    226e:	00 d0       	rcall	.+0      	; 0x2270 <DIO_enuTogglePinValue+0x6>
    2270:	00 d0       	rcall	.+0      	; 0x2272 <DIO_enuTogglePinValue+0x8>
    2272:	0f 92       	push	r0
    2274:	cd b7       	in	r28, 0x3d	; 61
    2276:	de b7       	in	r29, 0x3e	; 62
    2278:	8a 83       	std	Y+2, r24	; 0x02
    227a:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState = ES_NOK;
    227c:	81 e0       	ldi	r24, 0x01	; 1
    227e:	89 83       	std	Y+1, r24	; 0x01

    if ((Copy_u8GroupID <= DIO_GROUP_D) && (Copy_u8PinID <= DIO_PIN_7))
    2280:	8a 81       	ldd	r24, Y+2	; 0x02
    2282:	84 30       	cpi	r24, 0x04	; 4
    2284:	08 f0       	brcs	.+2      	; 0x2288 <DIO_enuTogglePinValue+0x1e>
    2286:	74 c0       	rjmp	.+232    	; 0x2370 <DIO_enuTogglePinValue+0x106>
    2288:	8b 81       	ldd	r24, Y+3	; 0x03
    228a:	88 30       	cpi	r24, 0x08	; 8
    228c:	08 f0       	brcs	.+2      	; 0x2290 <DIO_enuTogglePinValue+0x26>
    228e:	70 c0       	rjmp	.+224    	; 0x2370 <DIO_enuTogglePinValue+0x106>
    {
        switch(Copy_u8GroupID)
    2290:	8a 81       	ldd	r24, Y+2	; 0x02
    2292:	28 2f       	mov	r18, r24
    2294:	30 e0       	ldi	r19, 0x00	; 0
    2296:	3d 83       	std	Y+5, r19	; 0x05
    2298:	2c 83       	std	Y+4, r18	; 0x04
    229a:	8c 81       	ldd	r24, Y+4	; 0x04
    229c:	9d 81       	ldd	r25, Y+5	; 0x05
    229e:	81 30       	cpi	r24, 0x01	; 1
    22a0:	91 05       	cpc	r25, r1
    22a2:	49 f1       	breq	.+82     	; 0x22f6 <DIO_enuTogglePinValue+0x8c>
    22a4:	2c 81       	ldd	r18, Y+4	; 0x04
    22a6:	3d 81       	ldd	r19, Y+5	; 0x05
    22a8:	22 30       	cpi	r18, 0x02	; 2
    22aa:	31 05       	cpc	r19, r1
    22ac:	2c f4       	brge	.+10     	; 0x22b8 <DIO_enuTogglePinValue+0x4e>
    22ae:	8c 81       	ldd	r24, Y+4	; 0x04
    22b0:	9d 81       	ldd	r25, Y+5	; 0x05
    22b2:	00 97       	sbiw	r24, 0x00	; 0
    22b4:	61 f0       	breq	.+24     	; 0x22ce <DIO_enuTogglePinValue+0x64>
    22b6:	5a c0       	rjmp	.+180    	; 0x236c <DIO_enuTogglePinValue+0x102>
    22b8:	2c 81       	ldd	r18, Y+4	; 0x04
    22ba:	3d 81       	ldd	r19, Y+5	; 0x05
    22bc:	22 30       	cpi	r18, 0x02	; 2
    22be:	31 05       	cpc	r19, r1
    22c0:	71 f1       	breq	.+92     	; 0x231e <DIO_enuTogglePinValue+0xb4>
    22c2:	8c 81       	ldd	r24, Y+4	; 0x04
    22c4:	9d 81       	ldd	r25, Y+5	; 0x05
    22c6:	83 30       	cpi	r24, 0x03	; 3
    22c8:	91 05       	cpc	r25, r1
    22ca:	e9 f1       	breq	.+122    	; 0x2346 <DIO_enuTogglePinValue+0xdc>
    22cc:	4f c0       	rjmp	.+158    	; 0x236c <DIO_enuTogglePinValue+0x102>
        {
            case DIO_GROUP_A:
                PORTA ^= (DIO_MASK_BIT <<Copy_u8PinID);
    22ce:	ab e3       	ldi	r26, 0x3B	; 59
    22d0:	b0 e0       	ldi	r27, 0x00	; 0
    22d2:	eb e3       	ldi	r30, 0x3B	; 59
    22d4:	f0 e0       	ldi	r31, 0x00	; 0
    22d6:	80 81       	ld	r24, Z
    22d8:	48 2f       	mov	r20, r24
    22da:	8b 81       	ldd	r24, Y+3	; 0x03
    22dc:	28 2f       	mov	r18, r24
    22de:	30 e0       	ldi	r19, 0x00	; 0
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	02 2e       	mov	r0, r18
    22e6:	02 c0       	rjmp	.+4      	; 0x22ec <DIO_enuTogglePinValue+0x82>
    22e8:	88 0f       	add	r24, r24
    22ea:	99 1f       	adc	r25, r25
    22ec:	0a 94       	dec	r0
    22ee:	e2 f7       	brpl	.-8      	; 0x22e8 <DIO_enuTogglePinValue+0x7e>
    22f0:	84 27       	eor	r24, r20
    22f2:	8c 93       	st	X, r24
    22f4:	3b c0       	rjmp	.+118    	; 0x236c <DIO_enuTogglePinValue+0x102>
            break;

            case DIO_GROUP_B:
                PORTB ^= (DIO_MASK_BIT <<Copy_u8PinID);
    22f6:	a8 e3       	ldi	r26, 0x38	; 56
    22f8:	b0 e0       	ldi	r27, 0x00	; 0
    22fa:	e8 e3       	ldi	r30, 0x38	; 56
    22fc:	f0 e0       	ldi	r31, 0x00	; 0
    22fe:	80 81       	ld	r24, Z
    2300:	48 2f       	mov	r20, r24
    2302:	8b 81       	ldd	r24, Y+3	; 0x03
    2304:	28 2f       	mov	r18, r24
    2306:	30 e0       	ldi	r19, 0x00	; 0
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	02 2e       	mov	r0, r18
    230e:	02 c0       	rjmp	.+4      	; 0x2314 <DIO_enuTogglePinValue+0xaa>
    2310:	88 0f       	add	r24, r24
    2312:	99 1f       	adc	r25, r25
    2314:	0a 94       	dec	r0
    2316:	e2 f7       	brpl	.-8      	; 0x2310 <DIO_enuTogglePinValue+0xa6>
    2318:	84 27       	eor	r24, r20
    231a:	8c 93       	st	X, r24
    231c:	27 c0       	rjmp	.+78     	; 0x236c <DIO_enuTogglePinValue+0x102>
            break;

            case DIO_GROUP_C:
                PORTC ^= (DIO_MASK_BIT <<Copy_u8PinID);
    231e:	a5 e3       	ldi	r26, 0x35	; 53
    2320:	b0 e0       	ldi	r27, 0x00	; 0
    2322:	e5 e3       	ldi	r30, 0x35	; 53
    2324:	f0 e0       	ldi	r31, 0x00	; 0
    2326:	80 81       	ld	r24, Z
    2328:	48 2f       	mov	r20, r24
    232a:	8b 81       	ldd	r24, Y+3	; 0x03
    232c:	28 2f       	mov	r18, r24
    232e:	30 e0       	ldi	r19, 0x00	; 0
    2330:	81 e0       	ldi	r24, 0x01	; 1
    2332:	90 e0       	ldi	r25, 0x00	; 0
    2334:	02 2e       	mov	r0, r18
    2336:	02 c0       	rjmp	.+4      	; 0x233c <DIO_enuTogglePinValue+0xd2>
    2338:	88 0f       	add	r24, r24
    233a:	99 1f       	adc	r25, r25
    233c:	0a 94       	dec	r0
    233e:	e2 f7       	brpl	.-8      	; 0x2338 <DIO_enuTogglePinValue+0xce>
    2340:	84 27       	eor	r24, r20
    2342:	8c 93       	st	X, r24
    2344:	13 c0       	rjmp	.+38     	; 0x236c <DIO_enuTogglePinValue+0x102>
            break;
            
            case DIO_GROUP_D:
                PORTD ^= (DIO_MASK_BIT <<Copy_u8PinID);
    2346:	a2 e3       	ldi	r26, 0x32	; 50
    2348:	b0 e0       	ldi	r27, 0x00	; 0
    234a:	e2 e3       	ldi	r30, 0x32	; 50
    234c:	f0 e0       	ldi	r31, 0x00	; 0
    234e:	80 81       	ld	r24, Z
    2350:	48 2f       	mov	r20, r24
    2352:	8b 81       	ldd	r24, Y+3	; 0x03
    2354:	28 2f       	mov	r18, r24
    2356:	30 e0       	ldi	r19, 0x00	; 0
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	02 2e       	mov	r0, r18
    235e:	02 c0       	rjmp	.+4      	; 0x2364 <DIO_enuTogglePinValue+0xfa>
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	0a 94       	dec	r0
    2366:	e2 f7       	brpl	.-8      	; 0x2360 <DIO_enuTogglePinValue+0xf6>
    2368:	84 27       	eor	r24, r20
    236a:	8c 93       	st	X, r24
            break;

            default:
            break;
        }
        Local_enuErrorState = ES_OK;
    236c:	19 82       	std	Y+1, r1	; 0x01
    236e:	02 c0       	rjmp	.+4      	; 0x2374 <DIO_enuTogglePinValue+0x10a>
    }
    else
    {
        Local_enuErrorState = ES_OUT_OF_RANGE;
    2370:	82 e0       	ldi	r24, 0x02	; 2
    2372:	89 83       	std	Y+1, r24	; 0x01
    }

    return Local_enuErrorState;
    2374:	89 81       	ldd	r24, Y+1	; 0x01
}
    2376:	0f 90       	pop	r0
    2378:	0f 90       	pop	r0
    237a:	0f 90       	pop	r0
    237c:	0f 90       	pop	r0
    237e:	0f 90       	pop	r0
    2380:	cf 91       	pop	r28
    2382:	df 91       	pop	r29
    2384:	08 95       	ret

00002386 <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(u8 Copy_u8GroupID , u8 Copy_u8PinID , u8 * Copy_pu8PinValue)
{
    2386:	df 93       	push	r29
    2388:	cf 93       	push	r28
    238a:	cd b7       	in	r28, 0x3d	; 61
    238c:	de b7       	in	r29, 0x3e	; 62
    238e:	27 97       	sbiw	r28, 0x07	; 7
    2390:	0f b6       	in	r0, 0x3f	; 63
    2392:	f8 94       	cli
    2394:	de bf       	out	0x3e, r29	; 62
    2396:	0f be       	out	0x3f, r0	; 63
    2398:	cd bf       	out	0x3d, r28	; 61
    239a:	8a 83       	std	Y+2, r24	; 0x02
    239c:	6b 83       	std	Y+3, r22	; 0x03
    239e:	5d 83       	std	Y+5, r21	; 0x05
    23a0:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState = ES_NOK;
    23a2:	81 e0       	ldi	r24, 0x01	; 1
    23a4:	89 83       	std	Y+1, r24	; 0x01

    if (Copy_pu8PinValue != NULL)
    23a6:	8c 81       	ldd	r24, Y+4	; 0x04
    23a8:	9d 81       	ldd	r25, Y+5	; 0x05
    23aa:	00 97       	sbiw	r24, 0x00	; 0
    23ac:	09 f4       	brne	.+2      	; 0x23b0 <DIO_enuGetPinValue+0x2a>
    23ae:	7d c0       	rjmp	.+250    	; 0x24aa <DIO_enuGetPinValue+0x124>
    {
        if ((Copy_u8GroupID <= DIO_GROUP_D) && (Copy_u8PinID <= DIO_PIN_7))
    23b0:	8a 81       	ldd	r24, Y+2	; 0x02
    23b2:	84 30       	cpi	r24, 0x04	; 4
    23b4:	08 f0       	brcs	.+2      	; 0x23b8 <DIO_enuGetPinValue+0x32>
    23b6:	76 c0       	rjmp	.+236    	; 0x24a4 <DIO_enuGetPinValue+0x11e>
    23b8:	8b 81       	ldd	r24, Y+3	; 0x03
    23ba:	88 30       	cpi	r24, 0x08	; 8
    23bc:	08 f0       	brcs	.+2      	; 0x23c0 <DIO_enuGetPinValue+0x3a>
    23be:	72 c0       	rjmp	.+228    	; 0x24a4 <DIO_enuGetPinValue+0x11e>
        {
            switch(Copy_u8GroupID)
    23c0:	8a 81       	ldd	r24, Y+2	; 0x02
    23c2:	28 2f       	mov	r18, r24
    23c4:	30 e0       	ldi	r19, 0x00	; 0
    23c6:	3f 83       	std	Y+7, r19	; 0x07
    23c8:	2e 83       	std	Y+6, r18	; 0x06
    23ca:	4e 81       	ldd	r20, Y+6	; 0x06
    23cc:	5f 81       	ldd	r21, Y+7	; 0x07
    23ce:	41 30       	cpi	r20, 0x01	; 1
    23d0:	51 05       	cpc	r21, r1
    23d2:	59 f1       	breq	.+86     	; 0x242a <DIO_enuGetPinValue+0xa4>
    23d4:	8e 81       	ldd	r24, Y+6	; 0x06
    23d6:	9f 81       	ldd	r25, Y+7	; 0x07
    23d8:	82 30       	cpi	r24, 0x02	; 2
    23da:	91 05       	cpc	r25, r1
    23dc:	34 f4       	brge	.+12     	; 0x23ea <DIO_enuGetPinValue+0x64>
    23de:	2e 81       	ldd	r18, Y+6	; 0x06
    23e0:	3f 81       	ldd	r19, Y+7	; 0x07
    23e2:	21 15       	cp	r18, r1
    23e4:	31 05       	cpc	r19, r1
    23e6:	69 f0       	breq	.+26     	; 0x2402 <DIO_enuGetPinValue+0x7c>
    23e8:	5b c0       	rjmp	.+182    	; 0x24a0 <DIO_enuGetPinValue+0x11a>
    23ea:	4e 81       	ldd	r20, Y+6	; 0x06
    23ec:	5f 81       	ldd	r21, Y+7	; 0x07
    23ee:	42 30       	cpi	r20, 0x02	; 2
    23f0:	51 05       	cpc	r21, r1
    23f2:	79 f1       	breq	.+94     	; 0x2452 <DIO_enuGetPinValue+0xcc>
    23f4:	8e 81       	ldd	r24, Y+6	; 0x06
    23f6:	9f 81       	ldd	r25, Y+7	; 0x07
    23f8:	83 30       	cpi	r24, 0x03	; 3
    23fa:	91 05       	cpc	r25, r1
    23fc:	09 f4       	brne	.+2      	; 0x2400 <DIO_enuGetPinValue+0x7a>
    23fe:	3d c0       	rjmp	.+122    	; 0x247a <DIO_enuGetPinValue+0xf4>
    2400:	4f c0       	rjmp	.+158    	; 0x24a0 <DIO_enuGetPinValue+0x11a>
            {
                case DIO_GROUP_A:
                    *Copy_pu8PinValue = ((PINA >> Copy_u8PinID) & DIO_MASK_BIT);
    2402:	e9 e3       	ldi	r30, 0x39	; 57
    2404:	f0 e0       	ldi	r31, 0x00	; 0
    2406:	80 81       	ld	r24, Z
    2408:	28 2f       	mov	r18, r24
    240a:	30 e0       	ldi	r19, 0x00	; 0
    240c:	8b 81       	ldd	r24, Y+3	; 0x03
    240e:	88 2f       	mov	r24, r24
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	a9 01       	movw	r20, r18
    2414:	02 c0       	rjmp	.+4      	; 0x241a <DIO_enuGetPinValue+0x94>
    2416:	55 95       	asr	r21
    2418:	47 95       	ror	r20
    241a:	8a 95       	dec	r24
    241c:	e2 f7       	brpl	.-8      	; 0x2416 <DIO_enuGetPinValue+0x90>
    241e:	ca 01       	movw	r24, r20
    2420:	81 70       	andi	r24, 0x01	; 1
    2422:	ec 81       	ldd	r30, Y+4	; 0x04
    2424:	fd 81       	ldd	r31, Y+5	; 0x05
    2426:	80 83       	st	Z, r24
    2428:	3b c0       	rjmp	.+118    	; 0x24a0 <DIO_enuGetPinValue+0x11a>
                break;

                case DIO_GROUP_B:
                    *Copy_pu8PinValue = ((PINB >> Copy_u8PinID) & DIO_MASK_BIT);
    242a:	e6 e3       	ldi	r30, 0x36	; 54
    242c:	f0 e0       	ldi	r31, 0x00	; 0
    242e:	80 81       	ld	r24, Z
    2430:	28 2f       	mov	r18, r24
    2432:	30 e0       	ldi	r19, 0x00	; 0
    2434:	8b 81       	ldd	r24, Y+3	; 0x03
    2436:	88 2f       	mov	r24, r24
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	a9 01       	movw	r20, r18
    243c:	02 c0       	rjmp	.+4      	; 0x2442 <DIO_enuGetPinValue+0xbc>
    243e:	55 95       	asr	r21
    2440:	47 95       	ror	r20
    2442:	8a 95       	dec	r24
    2444:	e2 f7       	brpl	.-8      	; 0x243e <DIO_enuGetPinValue+0xb8>
    2446:	ca 01       	movw	r24, r20
    2448:	81 70       	andi	r24, 0x01	; 1
    244a:	ec 81       	ldd	r30, Y+4	; 0x04
    244c:	fd 81       	ldd	r31, Y+5	; 0x05
    244e:	80 83       	st	Z, r24
    2450:	27 c0       	rjmp	.+78     	; 0x24a0 <DIO_enuGetPinValue+0x11a>
                break;

                case DIO_GROUP_C:
                    *Copy_pu8PinValue = ((PINC >> Copy_u8PinID) & DIO_MASK_BIT);
    2452:	e3 e3       	ldi	r30, 0x33	; 51
    2454:	f0 e0       	ldi	r31, 0x00	; 0
    2456:	80 81       	ld	r24, Z
    2458:	28 2f       	mov	r18, r24
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	8b 81       	ldd	r24, Y+3	; 0x03
    245e:	88 2f       	mov	r24, r24
    2460:	90 e0       	ldi	r25, 0x00	; 0
    2462:	a9 01       	movw	r20, r18
    2464:	02 c0       	rjmp	.+4      	; 0x246a <DIO_enuGetPinValue+0xe4>
    2466:	55 95       	asr	r21
    2468:	47 95       	ror	r20
    246a:	8a 95       	dec	r24
    246c:	e2 f7       	brpl	.-8      	; 0x2466 <DIO_enuGetPinValue+0xe0>
    246e:	ca 01       	movw	r24, r20
    2470:	81 70       	andi	r24, 0x01	; 1
    2472:	ec 81       	ldd	r30, Y+4	; 0x04
    2474:	fd 81       	ldd	r31, Y+5	; 0x05
    2476:	80 83       	st	Z, r24
    2478:	13 c0       	rjmp	.+38     	; 0x24a0 <DIO_enuGetPinValue+0x11a>
                break;
                
                case DIO_GROUP_D:
                    *Copy_pu8PinValue = ((PIND >> Copy_u8PinID) & DIO_MASK_BIT);
    247a:	e0 e3       	ldi	r30, 0x30	; 48
    247c:	f0 e0       	ldi	r31, 0x00	; 0
    247e:	80 81       	ld	r24, Z
    2480:	28 2f       	mov	r18, r24
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	8b 81       	ldd	r24, Y+3	; 0x03
    2486:	88 2f       	mov	r24, r24
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	a9 01       	movw	r20, r18
    248c:	02 c0       	rjmp	.+4      	; 0x2492 <DIO_enuGetPinValue+0x10c>
    248e:	55 95       	asr	r21
    2490:	47 95       	ror	r20
    2492:	8a 95       	dec	r24
    2494:	e2 f7       	brpl	.-8      	; 0x248e <DIO_enuGetPinValue+0x108>
    2496:	ca 01       	movw	r24, r20
    2498:	81 70       	andi	r24, 0x01	; 1
    249a:	ec 81       	ldd	r30, Y+4	; 0x04
    249c:	fd 81       	ldd	r31, Y+5	; 0x05
    249e:	80 83       	st	Z, r24
                break;

                default:
                break;
            }
            Local_enuErrorState = ES_OK;
    24a0:	19 82       	std	Y+1, r1	; 0x01
    24a2:	05 c0       	rjmp	.+10     	; 0x24ae <DIO_enuGetPinValue+0x128>
        }
        else
        {
            Local_enuErrorState = ES_OUT_OF_RANGE;
    24a4:	82 e0       	ldi	r24, 0x02	; 2
    24a6:	89 83       	std	Y+1, r24	; 0x01
    24a8:	02 c0       	rjmp	.+4      	; 0x24ae <DIO_enuGetPinValue+0x128>
        }
    }   
    else
    {
        Local_enuErrorState = ES_NULL_POINTER;
    24aa:	83 e0       	ldi	r24, 0x03	; 3
    24ac:	89 83       	std	Y+1, r24	; 0x01
    } 

    return Local_enuErrorState;
    24ae:	89 81       	ldd	r24, Y+1	; 0x01
}
    24b0:	27 96       	adiw	r28, 0x07	; 7
    24b2:	0f b6       	in	r0, 0x3f	; 63
    24b4:	f8 94       	cli
    24b6:	de bf       	out	0x3e, r29	; 62
    24b8:	0f be       	out	0x3f, r0	; 63
    24ba:	cd bf       	out	0x3d, r28	; 61
    24bc:	cf 91       	pop	r28
    24be:	df 91       	pop	r29
    24c0:	08 95       	ret

000024c2 <LCD_enuInit>:
#include "LCD_priv.h"

#include <util\delay.h>

ES_t LCD_enuInit(void)
{
    24c2:	df 93       	push	r29
    24c4:	cf 93       	push	r28
    24c6:	cd b7       	in	r28, 0x3d	; 61
    24c8:	de b7       	in	r29, 0x3e	; 62
    24ca:	6d 97       	sbiw	r28, 0x1d	; 29
    24cc:	0f b6       	in	r0, 0x3f	; 63
    24ce:	f8 94       	cli
    24d0:	de bf       	out	0x3e, r29	; 62
    24d2:	0f be       	out	0x3f, r0	; 63
    24d4:	cd bf       	out	0x3d, r28	; 61
    ES_t Local_enuErrorState = ES_NOK;
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	8d 8f       	std	Y+29, r24	; 0x1d
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	90 e0       	ldi	r25, 0x00	; 0
    24de:	ac e0       	ldi	r26, 0x0C	; 12
    24e0:	b2 e4       	ldi	r27, 0x42	; 66
    24e2:	89 8f       	std	Y+25, r24	; 0x19
    24e4:	9a 8f       	std	Y+26, r25	; 0x1a
    24e6:	ab 8f       	std	Y+27, r26	; 0x1b
    24e8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24ea:	69 8d       	ldd	r22, Y+25	; 0x19
    24ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    24ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    24f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    24f2:	20 e0       	ldi	r18, 0x00	; 0
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	4a e7       	ldi	r20, 0x7A	; 122
    24f8:	55 e4       	ldi	r21, 0x45	; 69
    24fa:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    24fe:	dc 01       	movw	r26, r24
    2500:	cb 01       	movw	r24, r22
    2502:	8d 8b       	std	Y+21, r24	; 0x15
    2504:	9e 8b       	std	Y+22, r25	; 0x16
    2506:	af 8b       	std	Y+23, r26	; 0x17
    2508:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    250a:	6d 89       	ldd	r22, Y+21	; 0x15
    250c:	7e 89       	ldd	r23, Y+22	; 0x16
    250e:	8f 89       	ldd	r24, Y+23	; 0x17
    2510:	98 8d       	ldd	r25, Y+24	; 0x18
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	40 e8       	ldi	r20, 0x80	; 128
    2518:	5f e3       	ldi	r21, 0x3F	; 63
    251a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    251e:	88 23       	and	r24, r24
    2520:	2c f4       	brge	.+10     	; 0x252c <LCD_enuInit+0x6a>
		__ticks = 1;
    2522:	81 e0       	ldi	r24, 0x01	; 1
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	9c 8b       	std	Y+20, r25	; 0x14
    2528:	8b 8b       	std	Y+19, r24	; 0x13
    252a:	3f c0       	rjmp	.+126    	; 0x25aa <LCD_enuInit+0xe8>
	else if (__tmp > 65535)
    252c:	6d 89       	ldd	r22, Y+21	; 0x15
    252e:	7e 89       	ldd	r23, Y+22	; 0x16
    2530:	8f 89       	ldd	r24, Y+23	; 0x17
    2532:	98 8d       	ldd	r25, Y+24	; 0x18
    2534:	20 e0       	ldi	r18, 0x00	; 0
    2536:	3f ef       	ldi	r19, 0xFF	; 255
    2538:	4f e7       	ldi	r20, 0x7F	; 127
    253a:	57 e4       	ldi	r21, 0x47	; 71
    253c:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    2540:	18 16       	cp	r1, r24
    2542:	4c f5       	brge	.+82     	; 0x2596 <LCD_enuInit+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2544:	69 8d       	ldd	r22, Y+25	; 0x19
    2546:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2548:	8b 8d       	ldd	r24, Y+27	; 0x1b
    254a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    254c:	20 e0       	ldi	r18, 0x00	; 0
    254e:	30 e0       	ldi	r19, 0x00	; 0
    2550:	40 e2       	ldi	r20, 0x20	; 32
    2552:	51 e4       	ldi	r21, 0x41	; 65
    2554:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2558:	dc 01       	movw	r26, r24
    255a:	cb 01       	movw	r24, r22
    255c:	bc 01       	movw	r22, r24
    255e:	cd 01       	movw	r24, r26
    2560:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2564:	dc 01       	movw	r26, r24
    2566:	cb 01       	movw	r24, r22
    2568:	9c 8b       	std	Y+20, r25	; 0x14
    256a:	8b 8b       	std	Y+19, r24	; 0x13
    256c:	0f c0       	rjmp	.+30     	; 0x258c <LCD_enuInit+0xca>
    256e:	80 e9       	ldi	r24, 0x90	; 144
    2570:	91 e0       	ldi	r25, 0x01	; 1
    2572:	9a 8b       	std	Y+18, r25	; 0x12
    2574:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2576:	89 89       	ldd	r24, Y+17	; 0x11
    2578:	9a 89       	ldd	r25, Y+18	; 0x12
    257a:	01 97       	sbiw	r24, 0x01	; 1
    257c:	f1 f7       	brne	.-4      	; 0x257a <LCD_enuInit+0xb8>
    257e:	9a 8b       	std	Y+18, r25	; 0x12
    2580:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2582:	8b 89       	ldd	r24, Y+19	; 0x13
    2584:	9c 89       	ldd	r25, Y+20	; 0x14
    2586:	01 97       	sbiw	r24, 0x01	; 1
    2588:	9c 8b       	std	Y+20, r25	; 0x14
    258a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    258c:	8b 89       	ldd	r24, Y+19	; 0x13
    258e:	9c 89       	ldd	r25, Y+20	; 0x14
    2590:	00 97       	sbiw	r24, 0x00	; 0
    2592:	69 f7       	brne	.-38     	; 0x256e <LCD_enuInit+0xac>
    2594:	14 c0       	rjmp	.+40     	; 0x25be <LCD_enuInit+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2596:	6d 89       	ldd	r22, Y+21	; 0x15
    2598:	7e 89       	ldd	r23, Y+22	; 0x16
    259a:	8f 89       	ldd	r24, Y+23	; 0x17
    259c:	98 8d       	ldd	r25, Y+24	; 0x18
    259e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    25a2:	dc 01       	movw	r26, r24
    25a4:	cb 01       	movw	r24, r22
    25a6:	9c 8b       	std	Y+20, r25	; 0x14
    25a8:	8b 8b       	std	Y+19, r24	; 0x13
    25aa:	8b 89       	ldd	r24, Y+19	; 0x13
    25ac:	9c 89       	ldd	r25, Y+20	; 0x14
    25ae:	98 8b       	std	Y+16, r25	; 0x10
    25b0:	8f 87       	std	Y+15, r24	; 0x0f
    25b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    25b4:	98 89       	ldd	r25, Y+16	; 0x10
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	f1 f7       	brne	.-4      	; 0x25b6 <LCD_enuInit+0xf4>
    25ba:	98 8b       	std	Y+16, r25	; 0x10
    25bc:	8f 87       	std	Y+15, r24	; 0x0f

    _delay_ms(35);

    DIO_enuSetPinDirection(LCD_RS_GRP , LCD_RS_PIN , DIO_OUTPUT);
    25be:	81 e0       	ldi	r24, 0x01	; 1
    25c0:	61 e0       	ldi	r22, 0x01	; 1
    25c2:	41 e0       	ldi	r20, 0x01	; 1
    25c4:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(LCD_RW_GRP , LCD_RW_PIN , DIO_OUTPUT);
    25c8:	81 e0       	ldi	r24, 0x01	; 1
    25ca:	62 e0       	ldi	r22, 0x02	; 2
    25cc:	41 e0       	ldi	r20, 0x01	; 1
    25ce:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(LCD_EN_GRP , LCD_EN_PIN , DIO_OUTPUT);
    25d2:	81 e0       	ldi	r24, 0x01	; 1
    25d4:	63 e0       	ldi	r22, 0x03	; 3
    25d6:	41 e0       	ldi	r20, 0x01	; 1
    25d8:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>

    DIO_enuSetPinDirection(LCD_D7_GRP , LCD_D7_PIN , DIO_OUTPUT);
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	67 e0       	ldi	r22, 0x07	; 7
    25e0:	41 e0       	ldi	r20, 0x01	; 1
    25e2:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(LCD_D6_GRP , LCD_D6_PIN , DIO_OUTPUT);
    25e6:	80 e0       	ldi	r24, 0x00	; 0
    25e8:	66 e0       	ldi	r22, 0x06	; 6
    25ea:	41 e0       	ldi	r20, 0x01	; 1
    25ec:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(LCD_D5_GRP , LCD_D5_PIN , DIO_OUTPUT);
    25f0:	80 e0       	ldi	r24, 0x00	; 0
    25f2:	65 e0       	ldi	r22, 0x05	; 5
    25f4:	41 e0       	ldi	r20, 0x01	; 1
    25f6:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(LCD_D4_GRP , LCD_D4_PIN , DIO_OUTPUT);
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	64 e0       	ldi	r22, 0x04	; 4
    25fe:	41 e0       	ldi	r20, 0x01	; 1
    2600:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
        /******** Function Set Command ************/
        DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
        enuWriteNLatch(0x38);
    #elif LCD_MODE == FOUR_BIT
        /******** Function Set Command ************/
        DIO_enuSetPinValue(LCD_D7_GRP, LCD_D7_PIN , 0);
    2604:	80 e0       	ldi	r24, 0x00	; 0
    2606:	67 e0       	ldi	r22, 0x07	; 7
    2608:	40 e0       	ldi	r20, 0x00	; 0
    260a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D6_GRP, LCD_D6_PIN , 0);
    260e:	80 e0       	ldi	r24, 0x00	; 0
    2610:	66 e0       	ldi	r22, 0x06	; 6
    2612:	40 e0       	ldi	r20, 0x00	; 0
    2614:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D5_GRP, LCD_D5_PIN , 1);
    2618:	80 e0       	ldi	r24, 0x00	; 0
    261a:	65 e0       	ldi	r22, 0x05	; 5
    261c:	41 e0       	ldi	r20, 0x01	; 1
    261e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D4_GRP, LCD_D4_PIN , 0);
    2622:	80 e0       	ldi	r24, 0x00	; 0
    2624:	64 e0       	ldi	r22, 0x04	; 4
    2626:	40 e0       	ldi	r20, 0x00	; 0
    2628:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
       
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_HIGH);
    262c:	81 e0       	ldi	r24, 0x01	; 1
    262e:	63 e0       	ldi	r22, 0x03	; 3
    2630:	41 e0       	ldi	r20, 0x01	; 1
    2632:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    2636:	80 e0       	ldi	r24, 0x00	; 0
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	a0 e8       	ldi	r26, 0x80	; 128
    263c:	bf e3       	ldi	r27, 0x3F	; 63
    263e:	8b 87       	std	Y+11, r24	; 0x0b
    2640:	9c 87       	std	Y+12, r25	; 0x0c
    2642:	ad 87       	std	Y+13, r26	; 0x0d
    2644:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2646:	6b 85       	ldd	r22, Y+11	; 0x0b
    2648:	7c 85       	ldd	r23, Y+12	; 0x0c
    264a:	8d 85       	ldd	r24, Y+13	; 0x0d
    264c:	9e 85       	ldd	r25, Y+14	; 0x0e
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
    2652:	4a e7       	ldi	r20, 0x7A	; 122
    2654:	55 e4       	ldi	r21, 0x45	; 69
    2656:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    265a:	dc 01       	movw	r26, r24
    265c:	cb 01       	movw	r24, r22
    265e:	8f 83       	std	Y+7, r24	; 0x07
    2660:	98 87       	std	Y+8, r25	; 0x08
    2662:	a9 87       	std	Y+9, r26	; 0x09
    2664:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2666:	6f 81       	ldd	r22, Y+7	; 0x07
    2668:	78 85       	ldd	r23, Y+8	; 0x08
    266a:	89 85       	ldd	r24, Y+9	; 0x09
    266c:	9a 85       	ldd	r25, Y+10	; 0x0a
    266e:	20 e0       	ldi	r18, 0x00	; 0
    2670:	30 e0       	ldi	r19, 0x00	; 0
    2672:	40 e8       	ldi	r20, 0x80	; 128
    2674:	5f e3       	ldi	r21, 0x3F	; 63
    2676:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    267a:	88 23       	and	r24, r24
    267c:	2c f4       	brge	.+10     	; 0x2688 <LCD_enuInit+0x1c6>
		__ticks = 1;
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	90 e0       	ldi	r25, 0x00	; 0
    2682:	9e 83       	std	Y+6, r25	; 0x06
    2684:	8d 83       	std	Y+5, r24	; 0x05
    2686:	3f c0       	rjmp	.+126    	; 0x2706 <LCD_enuInit+0x244>
	else if (__tmp > 65535)
    2688:	6f 81       	ldd	r22, Y+7	; 0x07
    268a:	78 85       	ldd	r23, Y+8	; 0x08
    268c:	89 85       	ldd	r24, Y+9	; 0x09
    268e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	3f ef       	ldi	r19, 0xFF	; 255
    2694:	4f e7       	ldi	r20, 0x7F	; 127
    2696:	57 e4       	ldi	r21, 0x47	; 71
    2698:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    269c:	18 16       	cp	r1, r24
    269e:	4c f5       	brge	.+82     	; 0x26f2 <LCD_enuInit+0x230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    26a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    26a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    26a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	40 e2       	ldi	r20, 0x20	; 32
    26ae:	51 e4       	ldi	r21, 0x41	; 65
    26b0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    26b4:	dc 01       	movw	r26, r24
    26b6:	cb 01       	movw	r24, r22
    26b8:	bc 01       	movw	r22, r24
    26ba:	cd 01       	movw	r24, r26
    26bc:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    26c0:	dc 01       	movw	r26, r24
    26c2:	cb 01       	movw	r24, r22
    26c4:	9e 83       	std	Y+6, r25	; 0x06
    26c6:	8d 83       	std	Y+5, r24	; 0x05
    26c8:	0f c0       	rjmp	.+30     	; 0x26e8 <LCD_enuInit+0x226>
    26ca:	80 e9       	ldi	r24, 0x90	; 144
    26cc:	91 e0       	ldi	r25, 0x01	; 1
    26ce:	9c 83       	std	Y+4, r25	; 0x04
    26d0:	8b 83       	std	Y+3, r24	; 0x03
    26d2:	8b 81       	ldd	r24, Y+3	; 0x03
    26d4:	9c 81       	ldd	r25, Y+4	; 0x04
    26d6:	01 97       	sbiw	r24, 0x01	; 1
    26d8:	f1 f7       	brne	.-4      	; 0x26d6 <LCD_enuInit+0x214>
    26da:	9c 83       	std	Y+4, r25	; 0x04
    26dc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26de:	8d 81       	ldd	r24, Y+5	; 0x05
    26e0:	9e 81       	ldd	r25, Y+6	; 0x06
    26e2:	01 97       	sbiw	r24, 0x01	; 1
    26e4:	9e 83       	std	Y+6, r25	; 0x06
    26e6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26e8:	8d 81       	ldd	r24, Y+5	; 0x05
    26ea:	9e 81       	ldd	r25, Y+6	; 0x06
    26ec:	00 97       	sbiw	r24, 0x00	; 0
    26ee:	69 f7       	brne	.-38     	; 0x26ca <LCD_enuInit+0x208>
    26f0:	14 c0       	rjmp	.+40     	; 0x271a <LCD_enuInit+0x258>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26f2:	6f 81       	ldd	r22, Y+7	; 0x07
    26f4:	78 85       	ldd	r23, Y+8	; 0x08
    26f6:	89 85       	ldd	r24, Y+9	; 0x09
    26f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    26fa:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    26fe:	dc 01       	movw	r26, r24
    2700:	cb 01       	movw	r24, r22
    2702:	9e 83       	std	Y+6, r25	; 0x06
    2704:	8d 83       	std	Y+5, r24	; 0x05
    2706:	8d 81       	ldd	r24, Y+5	; 0x05
    2708:	9e 81       	ldd	r25, Y+6	; 0x06
    270a:	9a 83       	std	Y+2, r25	; 0x02
    270c:	89 83       	std	Y+1, r24	; 0x01
    270e:	89 81       	ldd	r24, Y+1	; 0x01
    2710:	9a 81       	ldd	r25, Y+2	; 0x02
    2712:	01 97       	sbiw	r24, 0x01	; 1
    2714:	f1 f7       	brne	.-4      	; 0x2712 <LCD_enuInit+0x250>
    2716:	9a 83       	std	Y+2, r25	; 0x02
    2718:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(1);
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_LOW);
    271a:	81 e0       	ldi	r24, 0x01	; 1
    271c:	63 e0       	ldi	r22, 0x03	; 3
    271e:	40 e0       	ldi	r20, 0x00	; 0
    2720:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        
        DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	61 e0       	ldi	r22, 0x01	; 1
    2728:	40 e0       	ldi	r20, 0x00	; 0
    272a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        enuWriteNLatch(0x28);
    272e:	88 e2       	ldi	r24, 0x28	; 40
    2730:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>
    #else
        #error LCD Mode config must be EIGHT_BIT or FOUR_BIT
    #endif
    /******** Display ON/OFF Control Command ************/
    DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2734:	81 e0       	ldi	r24, 0x01	; 1
    2736:	61 e0       	ldi	r22, 0x01	; 1
    2738:	40 e0       	ldi	r20, 0x00	; 0
    273a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    enuWriteNLatch(0x0F);
    273e:	8f e0       	ldi	r24, 0x0F	; 15
    2740:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>
    
    /******** Clear Display Command ************/
    DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2744:	81 e0       	ldi	r24, 0x01	; 1
    2746:	61 e0       	ldi	r22, 0x01	; 1
    2748:	40 e0       	ldi	r20, 0x00	; 0
    274a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    enuWriteNLatch(0x01);
    274e:	81 e0       	ldi	r24, 0x01	; 1
    2750:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>

    /******** Entry Set Mode Command ************/
    DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2754:	81 e0       	ldi	r24, 0x01	; 1
    2756:	61 e0       	ldi	r22, 0x01	; 1
    2758:	40 e0       	ldi	r20, 0x00	; 0
    275a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    enuWriteNLatch(0x06);
    275e:	86 e0       	ldi	r24, 0x06	; 6
    2760:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>

    return Local_enuErrorState;
    2764:	8d 8d       	ldd	r24, Y+29	; 0x1d
}
    2766:	6d 96       	adiw	r28, 0x1d	; 29
    2768:	0f b6       	in	r0, 0x3f	; 63
    276a:	f8 94       	cli
    276c:	de bf       	out	0x3e, r29	; 62
    276e:	0f be       	out	0x3f, r0	; 63
    2770:	cd bf       	out	0x3d, r28	; 61
    2772:	cf 91       	pop	r28
    2774:	df 91       	pop	r29
    2776:	08 95       	ret

00002778 <LCD_enuSendCommand>:

ES_t LCD_enuSendCommand(u8 Copy_u8Command)
{
    2778:	df 93       	push	r29
    277a:	cf 93       	push	r28
    277c:	00 d0       	rcall	.+0      	; 0x277e <LCD_enuSendCommand+0x6>
    277e:	cd b7       	in	r28, 0x3d	; 61
    2780:	de b7       	in	r29, 0x3e	; 62
    2782:	8a 83       	std	Y+2, r24	; 0x02
    ES_t Local_enuErrorState = ES_NOK;
    2784:	81 e0       	ldi	r24, 0x01	; 1
    2786:	89 83       	std	Y+1, r24	; 0x01

    DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2788:	81 e0       	ldi	r24, 0x01	; 1
    278a:	61 e0       	ldi	r22, 0x01	; 1
    278c:	40 e0       	ldi	r20, 0x00	; 0
    278e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    enuWriteNLatch(Copy_u8Command);
    2792:	8a 81       	ldd	r24, Y+2	; 0x02
    2794:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>

    return Local_enuErrorState;
    2798:	89 81       	ldd	r24, Y+1	; 0x01
}
    279a:	0f 90       	pop	r0
    279c:	0f 90       	pop	r0
    279e:	cf 91       	pop	r28
    27a0:	df 91       	pop	r29
    27a2:	08 95       	ret

000027a4 <LCD_enuSendData>:

ES_t LCD_enuSendData(u8 Copy_u8Data)
{
    27a4:	df 93       	push	r29
    27a6:	cf 93       	push	r28
    27a8:	00 d0       	rcall	.+0      	; 0x27aa <LCD_enuSendData+0x6>
    27aa:	cd b7       	in	r28, 0x3d	; 61
    27ac:	de b7       	in	r29, 0x3e	; 62
    27ae:	8a 83       	std	Y+2, r24	; 0x02
    ES_t Local_enuErrorState = ES_NOK;
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	89 83       	std	Y+1, r24	; 0x01

    DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_HIGH);
    27b4:	81 e0       	ldi	r24, 0x01	; 1
    27b6:	61 e0       	ldi	r22, 0x01	; 1
    27b8:	41 e0       	ldi	r20, 0x01	; 1
    27ba:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    enuWriteNLatch(Copy_u8Data);
    27be:	8a 81       	ldd	r24, Y+2	; 0x02
    27c0:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>

    return Local_enuErrorState;
    27c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    27c6:	0f 90       	pop	r0
    27c8:	0f 90       	pop	r0
    27ca:	cf 91       	pop	r28
    27cc:	df 91       	pop	r29
    27ce:	08 95       	ret

000027d0 <LCD_enuSendString>:

ES_t LCD_enuSendString(const char *Copy_pcString)
{
    27d0:	df 93       	push	r29
    27d2:	cf 93       	push	r28
    27d4:	00 d0       	rcall	.+0      	; 0x27d6 <LCD_enuSendString+0x6>
    27d6:	cd b7       	in	r28, 0x3d	; 61
    27d8:	de b7       	in	r29, 0x3e	; 62
    27da:	9a 83       	std	Y+2, r25	; 0x02
    27dc:	89 83       	std	Y+1, r24	; 0x01
    27de:	10 c0       	rjmp	.+32     	; 0x2800 <LCD_enuSendString+0x30>
    while (*Copy_pcString)
    {
        DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_HIGH);
    27e0:	81 e0       	ldi	r24, 0x01	; 1
    27e2:	61 e0       	ldi	r22, 0x01	; 1
    27e4:	41 e0       	ldi	r20, 0x01	; 1
    27e6:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        enuWriteNLatch(*Copy_pcString++);
    27ea:	e9 81       	ldd	r30, Y+1	; 0x01
    27ec:	fa 81       	ldd	r31, Y+2	; 0x02
    27ee:	20 81       	ld	r18, Z
    27f0:	89 81       	ldd	r24, Y+1	; 0x01
    27f2:	9a 81       	ldd	r25, Y+2	; 0x02
    27f4:	01 96       	adiw	r24, 0x01	; 1
    27f6:	9a 83       	std	Y+2, r25	; 0x02
    27f8:	89 83       	std	Y+1, r24	; 0x01
    27fa:	82 2f       	mov	r24, r18
    27fc:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>
    return Local_enuErrorState;
}

ES_t LCD_enuSendString(const char *Copy_pcString)
{
    while (*Copy_pcString)
    2800:	e9 81       	ldd	r30, Y+1	; 0x01
    2802:	fa 81       	ldd	r31, Y+2	; 0x02
    2804:	80 81       	ld	r24, Z
    2806:	88 23       	and	r24, r24
    2808:	59 f7       	brne	.-42     	; 0x27e0 <LCD_enuSendString+0x10>
    {
        DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_HIGH);
        enuWriteNLatch(*Copy_pcString++);
    }
    return ES_OK;
    280a:	80 e0       	ldi	r24, 0x00	; 0
}
    280c:	0f 90       	pop	r0
    280e:	0f 90       	pop	r0
    2810:	cf 91       	pop	r28
    2812:	df 91       	pop	r29
    2814:	08 95       	ret

00002816 <LCD_enuGotoXY>:


ES_t LCD_enuGotoXY(u8 Copy_u8X , u8 Copy_u8Y)
{
    2816:	df 93       	push	r29
    2818:	cf 93       	push	r28
    281a:	00 d0       	rcall	.+0      	; 0x281c <LCD_enuGotoXY+0x6>
    281c:	0f 92       	push	r0
    281e:	cd b7       	in	r28, 0x3d	; 61
    2820:	de b7       	in	r29, 0x3e	; 62
    2822:	8a 83       	std	Y+2, r24	; 0x02
    2824:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState = ES_NOK;
    2826:	81 e0       	ldi	r24, 0x01	; 1
    2828:	89 83       	std	Y+1, r24	; 0x01

    if (((Copy_u8X >=1) && (Copy_u8X <=2)) && ((Copy_u8Y >=1) && (Copy_u8Y <=16)))
    282a:	8a 81       	ldd	r24, Y+2	; 0x02
    282c:	88 23       	and	r24, r24
    282e:	11 f1       	breq	.+68     	; 0x2874 <LCD_enuGotoXY+0x5e>
    2830:	8a 81       	ldd	r24, Y+2	; 0x02
    2832:	83 30       	cpi	r24, 0x03	; 3
    2834:	f8 f4       	brcc	.+62     	; 0x2874 <LCD_enuGotoXY+0x5e>
    2836:	8b 81       	ldd	r24, Y+3	; 0x03
    2838:	88 23       	and	r24, r24
    283a:	e1 f0       	breq	.+56     	; 0x2874 <LCD_enuGotoXY+0x5e>
    283c:	8b 81       	ldd	r24, Y+3	; 0x03
    283e:	81 31       	cpi	r24, 0x11	; 17
    2840:	c8 f4       	brcc	.+50     	; 0x2874 <LCD_enuGotoXY+0x5e>
    {
        DIO_enuSetPinValue(LCD_RS_GRP , LCD_RS_PIN , DIO_LOW);
    2842:	81 e0       	ldi	r24, 0x01	; 1
    2844:	61 e0       	ldi	r22, 0x01	; 1
    2846:	40 e0       	ldi	r20, 0x00	; 0
    2848:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        enuWriteNLatch((0x80 + (0x40*(Copy_u8X -1))) + (Copy_u8Y -1) );
    284c:	8a 81       	ldd	r24, Y+2	; 0x02
    284e:	88 2f       	mov	r24, r24
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	01 96       	adiw	r24, 0x01	; 1
    2854:	00 24       	eor	r0, r0
    2856:	96 95       	lsr	r25
    2858:	87 95       	ror	r24
    285a:	07 94       	ror	r0
    285c:	96 95       	lsr	r25
    285e:	87 95       	ror	r24
    2860:	07 94       	ror	r0
    2862:	98 2f       	mov	r25, r24
    2864:	80 2d       	mov	r24, r0
    2866:	98 2f       	mov	r25, r24
    2868:	8b 81       	ldd	r24, Y+3	; 0x03
    286a:	89 0f       	add	r24, r25
    286c:	81 50       	subi	r24, 0x01	; 1
    286e:	0e 94 43 14 	call	0x2886	; 0x2886 <enuWriteNLatch>
    2872:	02 c0       	rjmp	.+4      	; 0x2878 <LCD_enuGotoXY+0x62>
    }
    else
    {
        Local_enuErrorState = ES_OUT_OF_RANGE;
    2874:	82 e0       	ldi	r24, 0x02	; 2
    2876:	89 83       	std	Y+1, r24	; 0x01
    }

    return Local_enuErrorState;
    2878:	89 81       	ldd	r24, Y+1	; 0x01
}
    287a:	0f 90       	pop	r0
    287c:	0f 90       	pop	r0
    287e:	0f 90       	pop	r0
    2880:	cf 91       	pop	r28
    2882:	df 91       	pop	r29
    2884:	08 95       	ret

00002886 <enuWriteNLatch>:


static ES_t enuWriteNLatch(u8 Copy_u8Byte)
{
    2886:	df 93       	push	r29
    2888:	cf 93       	push	r28
    288a:	cd b7       	in	r28, 0x3d	; 61
    288c:	de b7       	in	r29, 0x3e	; 62
    288e:	ab 97       	sbiw	r28, 0x2b	; 43
    2890:	0f b6       	in	r0, 0x3f	; 63
    2892:	f8 94       	cli
    2894:	de bf       	out	0x3e, r29	; 62
    2896:	0f be       	out	0x3f, r0	; 63
    2898:	cd bf       	out	0x3d, r28	; 61
    289a:	8b a7       	std	Y+43, r24	; 0x2b
    DIO_enuSetPinValue(LCD_RW_GRP , LCD_RW_PIN , DIO_LOW);
    289c:	81 e0       	ldi	r24, 0x01	; 1
    289e:	62 e0       	ldi	r22, 0x02	; 2
    28a0:	40 e0       	ldi	r20, 0x00	; 0
    28a2:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(LCD_EN_GRP , LCD_EN_PIN , DIO_LOW);
    28a6:	81 e0       	ldi	r24, 0x01	; 1
    28a8:	63 e0       	ldi	r22, 0x03	; 3
    28aa:	40 e0       	ldi	r20, 0x00	; 0
    28ac:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

        // delay for waiting LCD to finish its cureent job
        _delay_ms(2);

    #elif LCD_MODE == FOUR_BIT
        DIO_enuSetPinValue(LCD_D7_GRP, LCD_D7_PIN , ((Copy_u8Byte>>7) & 1));
    28b0:	8b a5       	ldd	r24, Y+43	; 0x2b
    28b2:	98 2f       	mov	r25, r24
    28b4:	99 1f       	adc	r25, r25
    28b6:	99 27       	eor	r25, r25
    28b8:	99 1f       	adc	r25, r25
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	67 e0       	ldi	r22, 0x07	; 7
    28be:	49 2f       	mov	r20, r25
    28c0:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D6_GRP, LCD_D6_PIN , ((Copy_u8Byte>>6) & 1));
    28c4:	8b a5       	ldd	r24, Y+43	; 0x2b
    28c6:	82 95       	swap	r24
    28c8:	86 95       	lsr	r24
    28ca:	86 95       	lsr	r24
    28cc:	83 70       	andi	r24, 0x03	; 3
    28ce:	98 2f       	mov	r25, r24
    28d0:	91 70       	andi	r25, 0x01	; 1
    28d2:	80 e0       	ldi	r24, 0x00	; 0
    28d4:	66 e0       	ldi	r22, 0x06	; 6
    28d6:	49 2f       	mov	r20, r25
    28d8:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D5_GRP, LCD_D5_PIN , ((Copy_u8Byte>>5) & 1));
    28dc:	8b a5       	ldd	r24, Y+43	; 0x2b
    28de:	82 95       	swap	r24
    28e0:	86 95       	lsr	r24
    28e2:	87 70       	andi	r24, 0x07	; 7
    28e4:	98 2f       	mov	r25, r24
    28e6:	91 70       	andi	r25, 0x01	; 1
    28e8:	80 e0       	ldi	r24, 0x00	; 0
    28ea:	65 e0       	ldi	r22, 0x05	; 5
    28ec:	49 2f       	mov	r20, r25
    28ee:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D4_GRP, LCD_D4_PIN , ((Copy_u8Byte>>4) & 1));
    28f2:	8b a5       	ldd	r24, Y+43	; 0x2b
    28f4:	82 95       	swap	r24
    28f6:	8f 70       	andi	r24, 0x0F	; 15
    28f8:	98 2f       	mov	r25, r24
    28fa:	91 70       	andi	r25, 0x01	; 1
    28fc:	80 e0       	ldi	r24, 0x00	; 0
    28fe:	64 e0       	ldi	r22, 0x04	; 4
    2900:	49 2f       	mov	r20, r25
    2902:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
       
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_HIGH);
    2906:	81 e0       	ldi	r24, 0x01	; 1
    2908:	63 e0       	ldi	r22, 0x03	; 3
    290a:	41 e0       	ldi	r20, 0x01	; 1
    290c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	a0 e8       	ldi	r26, 0x80	; 128
    2916:	bf e3       	ldi	r27, 0x3F	; 63
    2918:	8f a3       	std	Y+39, r24	; 0x27
    291a:	98 a7       	std	Y+40, r25	; 0x28
    291c:	a9 a7       	std	Y+41, r26	; 0x29
    291e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2920:	6f a1       	ldd	r22, Y+39	; 0x27
    2922:	78 a5       	ldd	r23, Y+40	; 0x28
    2924:	89 a5       	ldd	r24, Y+41	; 0x29
    2926:	9a a5       	ldd	r25, Y+42	; 0x2a
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	4a e7       	ldi	r20, 0x7A	; 122
    292e:	55 e4       	ldi	r21, 0x45	; 69
    2930:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	8b a3       	std	Y+35, r24	; 0x23
    293a:	9c a3       	std	Y+36, r25	; 0x24
    293c:	ad a3       	std	Y+37, r26	; 0x25
    293e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2940:	6b a1       	ldd	r22, Y+35	; 0x23
    2942:	7c a1       	ldd	r23, Y+36	; 0x24
    2944:	8d a1       	ldd	r24, Y+37	; 0x25
    2946:	9e a1       	ldd	r25, Y+38	; 0x26
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	30 e0       	ldi	r19, 0x00	; 0
    294c:	40 e8       	ldi	r20, 0x80	; 128
    294e:	5f e3       	ldi	r21, 0x3F	; 63
    2950:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    2954:	88 23       	and	r24, r24
    2956:	2c f4       	brge	.+10     	; 0x2962 <enuWriteNLatch+0xdc>
		__ticks = 1;
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	9a a3       	std	Y+34, r25	; 0x22
    295e:	89 a3       	std	Y+33, r24	; 0x21
    2960:	3f c0       	rjmp	.+126    	; 0x29e0 <enuWriteNLatch+0x15a>
	else if (__tmp > 65535)
    2962:	6b a1       	ldd	r22, Y+35	; 0x23
    2964:	7c a1       	ldd	r23, Y+36	; 0x24
    2966:	8d a1       	ldd	r24, Y+37	; 0x25
    2968:	9e a1       	ldd	r25, Y+38	; 0x26
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	3f ef       	ldi	r19, 0xFF	; 255
    296e:	4f e7       	ldi	r20, 0x7F	; 127
    2970:	57 e4       	ldi	r21, 0x47	; 71
    2972:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    2976:	18 16       	cp	r1, r24
    2978:	4c f5       	brge	.+82     	; 0x29cc <enuWriteNLatch+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    297a:	6f a1       	ldd	r22, Y+39	; 0x27
    297c:	78 a5       	ldd	r23, Y+40	; 0x28
    297e:	89 a5       	ldd	r24, Y+41	; 0x29
    2980:	9a a5       	ldd	r25, Y+42	; 0x2a
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e2       	ldi	r20, 0x20	; 32
    2988:	51 e4       	ldi	r21, 0x41	; 65
    298a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    298e:	dc 01       	movw	r26, r24
    2990:	cb 01       	movw	r24, r22
    2992:	bc 01       	movw	r22, r24
    2994:	cd 01       	movw	r24, r26
    2996:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    299a:	dc 01       	movw	r26, r24
    299c:	cb 01       	movw	r24, r22
    299e:	9a a3       	std	Y+34, r25	; 0x22
    29a0:	89 a3       	std	Y+33, r24	; 0x21
    29a2:	0f c0       	rjmp	.+30     	; 0x29c2 <enuWriteNLatch+0x13c>
    29a4:	80 e9       	ldi	r24, 0x90	; 144
    29a6:	91 e0       	ldi	r25, 0x01	; 1
    29a8:	98 a3       	std	Y+32, r25	; 0x20
    29aa:	8f 8f       	std	Y+31, r24	; 0x1f
    29ac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    29ae:	98 a1       	ldd	r25, Y+32	; 0x20
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <enuWriteNLatch+0x12a>
    29b4:	98 a3       	std	Y+32, r25	; 0x20
    29b6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29b8:	89 a1       	ldd	r24, Y+33	; 0x21
    29ba:	9a a1       	ldd	r25, Y+34	; 0x22
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	9a a3       	std	Y+34, r25	; 0x22
    29c0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29c2:	89 a1       	ldd	r24, Y+33	; 0x21
    29c4:	9a a1       	ldd	r25, Y+34	; 0x22
    29c6:	00 97       	sbiw	r24, 0x00	; 0
    29c8:	69 f7       	brne	.-38     	; 0x29a4 <enuWriteNLatch+0x11e>
    29ca:	14 c0       	rjmp	.+40     	; 0x29f4 <enuWriteNLatch+0x16e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29cc:	6b a1       	ldd	r22, Y+35	; 0x23
    29ce:	7c a1       	ldd	r23, Y+36	; 0x24
    29d0:	8d a1       	ldd	r24, Y+37	; 0x25
    29d2:	9e a1       	ldd	r25, Y+38	; 0x26
    29d4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    29d8:	dc 01       	movw	r26, r24
    29da:	cb 01       	movw	r24, r22
    29dc:	9a a3       	std	Y+34, r25	; 0x22
    29de:	89 a3       	std	Y+33, r24	; 0x21
    29e0:	89 a1       	ldd	r24, Y+33	; 0x21
    29e2:	9a a1       	ldd	r25, Y+34	; 0x22
    29e4:	9e 8f       	std	Y+30, r25	; 0x1e
    29e6:	8d 8f       	std	Y+29, r24	; 0x1d
    29e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    29ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <enuWriteNLatch+0x166>
    29f0:	9e 8f       	std	Y+30, r25	; 0x1e
    29f2:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(1);
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_LOW);
    29f4:	81 e0       	ldi	r24, 0x01	; 1
    29f6:	63 e0       	ldi	r22, 0x03	; 3
    29f8:	40 e0       	ldi	r20, 0x00	; 0
    29fa:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        
        DIO_enuSetPinValue(LCD_D7_GRP, LCD_D7_PIN , ((Copy_u8Byte>>3) & 1));
    29fe:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a00:	86 95       	lsr	r24
    2a02:	86 95       	lsr	r24
    2a04:	86 95       	lsr	r24
    2a06:	98 2f       	mov	r25, r24
    2a08:	91 70       	andi	r25, 0x01	; 1
    2a0a:	80 e0       	ldi	r24, 0x00	; 0
    2a0c:	67 e0       	ldi	r22, 0x07	; 7
    2a0e:	49 2f       	mov	r20, r25
    2a10:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D6_GRP, LCD_D6_PIN , ((Copy_u8Byte>>2) & 1));
    2a14:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a16:	86 95       	lsr	r24
    2a18:	86 95       	lsr	r24
    2a1a:	98 2f       	mov	r25, r24
    2a1c:	91 70       	andi	r25, 0x01	; 1
    2a1e:	80 e0       	ldi	r24, 0x00	; 0
    2a20:	66 e0       	ldi	r22, 0x06	; 6
    2a22:	49 2f       	mov	r20, r25
    2a24:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D5_GRP, LCD_D5_PIN , ((Copy_u8Byte>>1) & 1));
    2a28:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a2a:	86 95       	lsr	r24
    2a2c:	98 2f       	mov	r25, r24
    2a2e:	91 70       	andi	r25, 0x01	; 1
    2a30:	80 e0       	ldi	r24, 0x00	; 0
    2a32:	65 e0       	ldi	r22, 0x05	; 5
    2a34:	49 2f       	mov	r20, r25
    2a36:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        DIO_enuSetPinValue(LCD_D4_GRP, LCD_D4_PIN , ((Copy_u8Byte>>0) & 1));
    2a3a:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a3c:	98 2f       	mov	r25, r24
    2a3e:	91 70       	andi	r25, 0x01	; 1
    2a40:	80 e0       	ldi	r24, 0x00	; 0
    2a42:	64 e0       	ldi	r22, 0x04	; 4
    2a44:	49 2f       	mov	r20, r25
    2a46:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
       
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_HIGH);
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	63 e0       	ldi	r22, 0x03	; 3
    2a4e:	41 e0       	ldi	r20, 0x01	; 1
    2a50:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    2a54:	80 e0       	ldi	r24, 0x00	; 0
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	a0 e8       	ldi	r26, 0x80	; 128
    2a5a:	bf e3       	ldi	r27, 0x3F	; 63
    2a5c:	89 8f       	std	Y+25, r24	; 0x19
    2a5e:	9a 8f       	std	Y+26, r25	; 0x1a
    2a60:	ab 8f       	std	Y+27, r26	; 0x1b
    2a62:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a64:	69 8d       	ldd	r22, Y+25	; 0x19
    2a66:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a6c:	20 e0       	ldi	r18, 0x00	; 0
    2a6e:	30 e0       	ldi	r19, 0x00	; 0
    2a70:	4a e7       	ldi	r20, 0x7A	; 122
    2a72:	55 e4       	ldi	r21, 0x45	; 69
    2a74:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2a78:	dc 01       	movw	r26, r24
    2a7a:	cb 01       	movw	r24, r22
    2a7c:	8d 8b       	std	Y+21, r24	; 0x15
    2a7e:	9e 8b       	std	Y+22, r25	; 0x16
    2a80:	af 8b       	std	Y+23, r26	; 0x17
    2a82:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2a84:	6d 89       	ldd	r22, Y+21	; 0x15
    2a86:	7e 89       	ldd	r23, Y+22	; 0x16
    2a88:	8f 89       	ldd	r24, Y+23	; 0x17
    2a8a:	98 8d       	ldd	r25, Y+24	; 0x18
    2a8c:	20 e0       	ldi	r18, 0x00	; 0
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	40 e8       	ldi	r20, 0x80	; 128
    2a92:	5f e3       	ldi	r21, 0x3F	; 63
    2a94:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    2a98:	88 23       	and	r24, r24
    2a9a:	2c f4       	brge	.+10     	; 0x2aa6 <enuWriteNLatch+0x220>
		__ticks = 1;
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	90 e0       	ldi	r25, 0x00	; 0
    2aa0:	9c 8b       	std	Y+20, r25	; 0x14
    2aa2:	8b 8b       	std	Y+19, r24	; 0x13
    2aa4:	3f c0       	rjmp	.+126    	; 0x2b24 <enuWriteNLatch+0x29e>
	else if (__tmp > 65535)
    2aa6:	6d 89       	ldd	r22, Y+21	; 0x15
    2aa8:	7e 89       	ldd	r23, Y+22	; 0x16
    2aaa:	8f 89       	ldd	r24, Y+23	; 0x17
    2aac:	98 8d       	ldd	r25, Y+24	; 0x18
    2aae:	20 e0       	ldi	r18, 0x00	; 0
    2ab0:	3f ef       	ldi	r19, 0xFF	; 255
    2ab2:	4f e7       	ldi	r20, 0x7F	; 127
    2ab4:	57 e4       	ldi	r21, 0x47	; 71
    2ab6:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    2aba:	18 16       	cp	r1, r24
    2abc:	4c f5       	brge	.+82     	; 0x2b10 <enuWriteNLatch+0x28a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2abe:	69 8d       	ldd	r22, Y+25	; 0x19
    2ac0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ac2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ac4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ac6:	20 e0       	ldi	r18, 0x00	; 0
    2ac8:	30 e0       	ldi	r19, 0x00	; 0
    2aca:	40 e2       	ldi	r20, 0x20	; 32
    2acc:	51 e4       	ldi	r21, 0x41	; 65
    2ace:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2ad2:	dc 01       	movw	r26, r24
    2ad4:	cb 01       	movw	r24, r22
    2ad6:	bc 01       	movw	r22, r24
    2ad8:	cd 01       	movw	r24, r26
    2ada:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2ade:	dc 01       	movw	r26, r24
    2ae0:	cb 01       	movw	r24, r22
    2ae2:	9c 8b       	std	Y+20, r25	; 0x14
    2ae4:	8b 8b       	std	Y+19, r24	; 0x13
    2ae6:	0f c0       	rjmp	.+30     	; 0x2b06 <enuWriteNLatch+0x280>
    2ae8:	80 e9       	ldi	r24, 0x90	; 144
    2aea:	91 e0       	ldi	r25, 0x01	; 1
    2aec:	9a 8b       	std	Y+18, r25	; 0x12
    2aee:	89 8b       	std	Y+17, r24	; 0x11
    2af0:	89 89       	ldd	r24, Y+17	; 0x11
    2af2:	9a 89       	ldd	r25, Y+18	; 0x12
    2af4:	01 97       	sbiw	r24, 0x01	; 1
    2af6:	f1 f7       	brne	.-4      	; 0x2af4 <enuWriteNLatch+0x26e>
    2af8:	9a 8b       	std	Y+18, r25	; 0x12
    2afa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2afc:	8b 89       	ldd	r24, Y+19	; 0x13
    2afe:	9c 89       	ldd	r25, Y+20	; 0x14
    2b00:	01 97       	sbiw	r24, 0x01	; 1
    2b02:	9c 8b       	std	Y+20, r25	; 0x14
    2b04:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b06:	8b 89       	ldd	r24, Y+19	; 0x13
    2b08:	9c 89       	ldd	r25, Y+20	; 0x14
    2b0a:	00 97       	sbiw	r24, 0x00	; 0
    2b0c:	69 f7       	brne	.-38     	; 0x2ae8 <enuWriteNLatch+0x262>
    2b0e:	14 c0       	rjmp	.+40     	; 0x2b38 <enuWriteNLatch+0x2b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b10:	6d 89       	ldd	r22, Y+21	; 0x15
    2b12:	7e 89       	ldd	r23, Y+22	; 0x16
    2b14:	8f 89       	ldd	r24, Y+23	; 0x17
    2b16:	98 8d       	ldd	r25, Y+24	; 0x18
    2b18:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2b1c:	dc 01       	movw	r26, r24
    2b1e:	cb 01       	movw	r24, r22
    2b20:	9c 8b       	std	Y+20, r25	; 0x14
    2b22:	8b 8b       	std	Y+19, r24	; 0x13
    2b24:	8b 89       	ldd	r24, Y+19	; 0x13
    2b26:	9c 89       	ldd	r25, Y+20	; 0x14
    2b28:	98 8b       	std	Y+16, r25	; 0x10
    2b2a:	8f 87       	std	Y+15, r24	; 0x0f
    2b2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b2e:	98 89       	ldd	r25, Y+16	; 0x10
    2b30:	01 97       	sbiw	r24, 0x01	; 1
    2b32:	f1 f7       	brne	.-4      	; 0x2b30 <enuWriteNLatch+0x2aa>
    2b34:	98 8b       	std	Y+16, r25	; 0x10
    2b36:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(1);
        DIO_enuSetPinValue(LCD_EN_GRP, LCD_EN_PIN , DIO_LOW);
    2b38:	81 e0       	ldi	r24, 0x01	; 1
    2b3a:	63 e0       	ldi	r22, 0x03	; 3
    2b3c:	40 e0       	ldi	r20, 0x00	; 0
    2b3e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    2b42:	80 e0       	ldi	r24, 0x00	; 0
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	a0 e0       	ldi	r26, 0x00	; 0
    2b48:	b0 e4       	ldi	r27, 0x40	; 64
    2b4a:	8b 87       	std	Y+11, r24	; 0x0b
    2b4c:	9c 87       	std	Y+12, r25	; 0x0c
    2b4e:	ad 87       	std	Y+13, r26	; 0x0d
    2b50:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b52:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b54:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b56:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b58:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	4a e7       	ldi	r20, 0x7A	; 122
    2b60:	55 e4       	ldi	r21, 0x45	; 69
    2b62:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2b66:	dc 01       	movw	r26, r24
    2b68:	cb 01       	movw	r24, r22
    2b6a:	8f 83       	std	Y+7, r24	; 0x07
    2b6c:	98 87       	std	Y+8, r25	; 0x08
    2b6e:	a9 87       	std	Y+9, r26	; 0x09
    2b70:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b72:	6f 81       	ldd	r22, Y+7	; 0x07
    2b74:	78 85       	ldd	r23, Y+8	; 0x08
    2b76:	89 85       	ldd	r24, Y+9	; 0x09
    2b78:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	40 e8       	ldi	r20, 0x80	; 128
    2b80:	5f e3       	ldi	r21, 0x3F	; 63
    2b82:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    2b86:	88 23       	and	r24, r24
    2b88:	2c f4       	brge	.+10     	; 0x2b94 <enuWriteNLatch+0x30e>
		__ticks = 1;
    2b8a:	81 e0       	ldi	r24, 0x01	; 1
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	9e 83       	std	Y+6, r25	; 0x06
    2b90:	8d 83       	std	Y+5, r24	; 0x05
    2b92:	3f c0       	rjmp	.+126    	; 0x2c12 <enuWriteNLatch+0x38c>
	else if (__tmp > 65535)
    2b94:	6f 81       	ldd	r22, Y+7	; 0x07
    2b96:	78 85       	ldd	r23, Y+8	; 0x08
    2b98:	89 85       	ldd	r24, Y+9	; 0x09
    2b9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	3f ef       	ldi	r19, 0xFF	; 255
    2ba0:	4f e7       	ldi	r20, 0x7F	; 127
    2ba2:	57 e4       	ldi	r21, 0x47	; 71
    2ba4:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    2ba8:	18 16       	cp	r1, r24
    2baa:	4c f5       	brge	.+82     	; 0x2bfe <enuWriteNLatch+0x378>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bac:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bae:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bb4:	20 e0       	ldi	r18, 0x00	; 0
    2bb6:	30 e0       	ldi	r19, 0x00	; 0
    2bb8:	40 e2       	ldi	r20, 0x20	; 32
    2bba:	51 e4       	ldi	r21, 0x41	; 65
    2bbc:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2bc0:	dc 01       	movw	r26, r24
    2bc2:	cb 01       	movw	r24, r22
    2bc4:	bc 01       	movw	r22, r24
    2bc6:	cd 01       	movw	r24, r26
    2bc8:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2bcc:	dc 01       	movw	r26, r24
    2bce:	cb 01       	movw	r24, r22
    2bd0:	9e 83       	std	Y+6, r25	; 0x06
    2bd2:	8d 83       	std	Y+5, r24	; 0x05
    2bd4:	0f c0       	rjmp	.+30     	; 0x2bf4 <enuWriteNLatch+0x36e>
    2bd6:	80 e9       	ldi	r24, 0x90	; 144
    2bd8:	91 e0       	ldi	r25, 0x01	; 1
    2bda:	9c 83       	std	Y+4, r25	; 0x04
    2bdc:	8b 83       	std	Y+3, r24	; 0x03
    2bde:	8b 81       	ldd	r24, Y+3	; 0x03
    2be0:	9c 81       	ldd	r25, Y+4	; 0x04
    2be2:	01 97       	sbiw	r24, 0x01	; 1
    2be4:	f1 f7       	brne	.-4      	; 0x2be2 <enuWriteNLatch+0x35c>
    2be6:	9c 83       	std	Y+4, r25	; 0x04
    2be8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bea:	8d 81       	ldd	r24, Y+5	; 0x05
    2bec:	9e 81       	ldd	r25, Y+6	; 0x06
    2bee:	01 97       	sbiw	r24, 0x01	; 1
    2bf0:	9e 83       	std	Y+6, r25	; 0x06
    2bf2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bf4:	8d 81       	ldd	r24, Y+5	; 0x05
    2bf6:	9e 81       	ldd	r25, Y+6	; 0x06
    2bf8:	00 97       	sbiw	r24, 0x00	; 0
    2bfa:	69 f7       	brne	.-38     	; 0x2bd6 <enuWriteNLatch+0x350>
    2bfc:	14 c0       	rjmp	.+40     	; 0x2c26 <enuWriteNLatch+0x3a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bfe:	6f 81       	ldd	r22, Y+7	; 0x07
    2c00:	78 85       	ldd	r23, Y+8	; 0x08
    2c02:	89 85       	ldd	r24, Y+9	; 0x09
    2c04:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c06:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2c0a:	dc 01       	movw	r26, r24
    2c0c:	cb 01       	movw	r24, r22
    2c0e:	9e 83       	std	Y+6, r25	; 0x06
    2c10:	8d 83       	std	Y+5, r24	; 0x05
    2c12:	8d 81       	ldd	r24, Y+5	; 0x05
    2c14:	9e 81       	ldd	r25, Y+6	; 0x06
    2c16:	9a 83       	std	Y+2, r25	; 0x02
    2c18:	89 83       	std	Y+1, r24	; 0x01
    2c1a:	89 81       	ldd	r24, Y+1	; 0x01
    2c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c1e:	01 97       	sbiw	r24, 0x01	; 1
    2c20:	f1 f7       	brne	.-4      	; 0x2c1e <enuWriteNLatch+0x398>
    2c22:	9a 83       	std	Y+2, r25	; 0x02
    2c24:	89 83       	std	Y+1, r24	; 0x01

    #else
        #error LCD Mode config must be EIGHT_BIT or FOUR_BIT
    #endif

    return ES_OK;
    2c26:	80 e0       	ldi	r24, 0x00	; 0
}
    2c28:	ab 96       	adiw	r28, 0x2b	; 43
    2c2a:	0f b6       	in	r0, 0x3f	; 63
    2c2c:	f8 94       	cli
    2c2e:	de bf       	out	0x3e, r29	; 62
    2c30:	0f be       	out	0x3f, r0	; 63
    2c32:	cd bf       	out	0x3d, r28	; 61
    2c34:	cf 91       	pop	r28
    2c36:	df 91       	pop	r29
    2c38:	08 95       	ret

00002c3a <ICU_vidInit>:
static u16 LOC_u16TimerOvfCounts;
static u8 LOC_u8DutyCycle = 0xff;
static u16 LOC_u16Frequency = 0xffff;

void ICU_vidInit(void)
{
    2c3a:	df 93       	push	r29
    2c3c:	cf 93       	push	r28
    2c3e:	cd b7       	in	r28, 0x3d	; 61
    2c40:	de b7       	in	r29, 0x3e	; 62
    Timer0_vidInit();
    2c42:	0e 94 b1 08 	call	0x1162	; 0x1162 <Timer0_vidInit>
    EXTI_enuInit();
    2c46:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <EXTI_enuInit>
    DIO_enuSetPinDirection(DIO_GROUP_D, DIO_PIN_3, DIO_INPUT);
    2c4a:	83 e0       	ldi	r24, 0x03	; 3
    2c4c:	63 e0       	ldi	r22, 0x03	; 3
    2c4e:	40 e0       	ldi	r20, 0x00	; 0
    2c50:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinValue(DIO_GROUP_D, DIO_PIN_3, DIO_FLOAT);
    2c54:	83 e0       	ldi	r24, 0x03	; 3
    2c56:	63 e0       	ldi	r22, 0x03	; 3
    2c58:	40 e0       	ldi	r20, 0x00	; 0
    2c5a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

    EXTI_enuSetCallBack(EXTI_INT1 , vidReadingTask);
    2c5e:	2a e0       	ldi	r18, 0x0A	; 10
    2c60:	37 e1       	ldi	r19, 0x17	; 23
    2c62:	81 e0       	ldi	r24, 0x01	; 1
    2c64:	b9 01       	movw	r22, r18
    2c66:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <EXTI_enuSetCallBack>
    Timer_vidCallBack(vidTimerCallBack);
    2c6a:	8a ef       	ldi	r24, 0xFA	; 250
    2c6c:	96 e1       	ldi	r25, 0x16	; 22
    2c6e:	0e 94 33 0c 	call	0x1866	; 0x1866 <Timer_vidCallBack>
    Timer_vidEnableInterrupt();
    2c72:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <Timer_vidEnableInterrupt>
}
    2c76:	cf 91       	pop	r28
    2c78:	df 91       	pop	r29
    2c7a:	08 95       	ret

00002c7c <ICU_vidCalculatePWMParams>:


void ICU_vidCalculatePWMParams(void)
{
    2c7c:	ef 92       	push	r14
    2c7e:	ff 92       	push	r15
    2c80:	0f 93       	push	r16
    2c82:	1f 93       	push	r17
    2c84:	df 93       	push	r29
    2c86:	cf 93       	push	r28
    2c88:	00 d0       	rcall	.+0      	; 0x2c8a <ICU_vidCalculatePWMParams+0xe>
    2c8a:	00 d0       	rcall	.+0      	; 0x2c8c <ICU_vidCalculatePWMParams+0x10>
    2c8c:	cd b7       	in	r28, 0x3d	; 61
    2c8e:	de b7       	in	r29, 0x3e	; 62
    if (LOC_enuICUStateMachine == IDLE)
    2c90:	80 91 cb 00 	lds	r24, 0x00CB
    2c94:	83 30       	cpi	r24, 0x03	; 3
    2c96:	09 f0       	breq	.+2      	; 0x2c9a <ICU_vidCalculatePWMParams+0x1e>
    2c98:	63 c0       	rjmp	.+198    	; 0x2d60 <ICU_vidCalculatePWMParams+0xe4>
    {
        u16 Local_u16TonCounts = (LOC_strICUParams.u8TonCounts + (LOC_strICUParams.u8TonOvfCounts*256UL));
    2c9a:	80 91 ab 01 	lds	r24, 0x01AB
    2c9e:	28 2f       	mov	r18, r24
    2ca0:	30 e0       	ldi	r19, 0x00	; 0
    2ca2:	80 91 ad 01 	lds	r24, 0x01AD
    2ca6:	90 91 ae 01 	lds	r25, 0x01AE
    2caa:	cc 01       	movw	r24, r24
    2cac:	a0 e0       	ldi	r26, 0x00	; 0
    2cae:	b0 e0       	ldi	r27, 0x00	; 0
    2cb0:	ba 2f       	mov	r27, r26
    2cb2:	a9 2f       	mov	r26, r25
    2cb4:	98 2f       	mov	r25, r24
    2cb6:	88 27       	eor	r24, r24
    2cb8:	82 0f       	add	r24, r18
    2cba:	93 1f       	adc	r25, r19
    2cbc:	9c 83       	std	Y+4, r25	; 0x04
    2cbe:	8b 83       	std	Y+3, r24	; 0x03
        u16 Local_u16TcycleCounts = (LOC_strICUParams.u8TcCounts + (LOC_strICUParams.u8TcOvfCounts*256UL));
    2cc0:	80 91 ac 01 	lds	r24, 0x01AC
    2cc4:	28 2f       	mov	r18, r24
    2cc6:	30 e0       	ldi	r19, 0x00	; 0
    2cc8:	80 91 af 01 	lds	r24, 0x01AF
    2ccc:	90 91 b0 01 	lds	r25, 0x01B0
    2cd0:	cc 01       	movw	r24, r24
    2cd2:	a0 e0       	ldi	r26, 0x00	; 0
    2cd4:	b0 e0       	ldi	r27, 0x00	; 0
    2cd6:	ba 2f       	mov	r27, r26
    2cd8:	a9 2f       	mov	r26, r25
    2cda:	98 2f       	mov	r25, r24
    2cdc:	88 27       	eor	r24, r24
    2cde:	82 0f       	add	r24, r18
    2ce0:	93 1f       	adc	r25, r19
    2ce2:	9a 83       	std	Y+2, r25	; 0x02
    2ce4:	89 83       	std	Y+1, r24	; 0x01
    
        LOC_u8DutyCycle = (u8)((Local_u16TonCounts *100UL)/Local_u16TcycleCounts);
    2ce6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ce8:	9c 81       	ldd	r25, Y+4	; 0x04
    2cea:	cc 01       	movw	r24, r24
    2cec:	a0 e0       	ldi	r26, 0x00	; 0
    2cee:	b0 e0       	ldi	r27, 0x00	; 0
    2cf0:	24 e6       	ldi	r18, 0x64	; 100
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	40 e0       	ldi	r20, 0x00	; 0
    2cf6:	50 e0       	ldi	r21, 0x00	; 0
    2cf8:	bc 01       	movw	r22, r24
    2cfa:	cd 01       	movw	r24, r26
    2cfc:	0e 94 37 3c 	call	0x786e	; 0x786e <__mulsi3>
    2d00:	7b 01       	movw	r14, r22
    2d02:	8c 01       	movw	r16, r24
    2d04:	89 81       	ldd	r24, Y+1	; 0x01
    2d06:	9a 81       	ldd	r25, Y+2	; 0x02
    2d08:	9c 01       	movw	r18, r24
    2d0a:	40 e0       	ldi	r20, 0x00	; 0
    2d0c:	50 e0       	ldi	r21, 0x00	; 0
    2d0e:	c8 01       	movw	r24, r16
    2d10:	b7 01       	movw	r22, r14
    2d12:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <__udivmodsi4>
    2d16:	da 01       	movw	r26, r20
    2d18:	c9 01       	movw	r24, r18
    2d1a:	80 93 cc 00 	sts	0x00CC, r24
    
        LOC_u16Frequency = (u16)((16000000UL / (Local_u16TcycleCounts * 8UL)));
    2d1e:	89 81       	ldd	r24, Y+1	; 0x01
    2d20:	9a 81       	ldd	r25, Y+2	; 0x02
    2d22:	cc 01       	movw	r24, r24
    2d24:	a0 e0       	ldi	r26, 0x00	; 0
    2d26:	b0 e0       	ldi	r27, 0x00	; 0
    2d28:	88 0f       	add	r24, r24
    2d2a:	99 1f       	adc	r25, r25
    2d2c:	aa 1f       	adc	r26, r26
    2d2e:	bb 1f       	adc	r27, r27
    2d30:	88 0f       	add	r24, r24
    2d32:	99 1f       	adc	r25, r25
    2d34:	aa 1f       	adc	r26, r26
    2d36:	bb 1f       	adc	r27, r27
    2d38:	88 0f       	add	r24, r24
    2d3a:	99 1f       	adc	r25, r25
    2d3c:	aa 1f       	adc	r26, r26
    2d3e:	bb 1f       	adc	r27, r27
    2d40:	9c 01       	movw	r18, r24
    2d42:	ad 01       	movw	r20, r26
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	94 e2       	ldi	r25, 0x24	; 36
    2d48:	a4 ef       	ldi	r26, 0xF4	; 244
    2d4a:	b0 e0       	ldi	r27, 0x00	; 0
    2d4c:	bc 01       	movw	r22, r24
    2d4e:	cd 01       	movw	r24, r26
    2d50:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <__udivmodsi4>
    2d54:	da 01       	movw	r26, r20
    2d56:	c9 01       	movw	r24, r18
    2d58:	90 93 ce 00 	sts	0x00CE, r25
    2d5c:	80 93 cd 00 	sts	0x00CD, r24
    }    
}
    2d60:	0f 90       	pop	r0
    2d62:	0f 90       	pop	r0
    2d64:	0f 90       	pop	r0
    2d66:	0f 90       	pop	r0
    2d68:	cf 91       	pop	r28
    2d6a:	df 91       	pop	r29
    2d6c:	1f 91       	pop	r17
    2d6e:	0f 91       	pop	r16
    2d70:	ff 90       	pop	r15
    2d72:	ef 90       	pop	r14
    2d74:	08 95       	ret

00002d76 <ICU_vidStartCapture>:

void ICU_vidStartCapture(void)
{
    2d76:	df 93       	push	r29
    2d78:	cf 93       	push	r28
    2d7a:	cd b7       	in	r28, 0x3d	; 61
    2d7c:	de b7       	in	r29, 0x3e	; 62
    if (LOC_enuICUStateMachine == IDLE)
    2d7e:	80 91 cb 00 	lds	r24, 0x00CB
    2d82:	83 30       	cpi	r24, 0x03	; 3
    2d84:	39 f4       	brne	.+14     	; 0x2d94 <ICU_vidStartCapture+0x1e>
    {
        LOC_enuICUStateMachine = ICU_FIRST_RISING;
    2d86:	10 92 cb 00 	sts	0x00CB, r1
        EXTI_enuEnableInterrupt(EXTI_INT0);
    2d8a:	80 e0       	ldi	r24, 0x00	; 0
    2d8c:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <EXTI_enuEnableInterrupt>
        Timer_vidEnableInterrupt();
    2d90:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <Timer_vidEnableInterrupt>
    }
}
    2d94:	cf 91       	pop	r28
    2d96:	df 91       	pop	r29
    2d98:	08 95       	ret

00002d9a <ICU_u8GetDutyCycle>:


u8 ICU_u8GetDutyCycle(void)
{
    2d9a:	df 93       	push	r29
    2d9c:	cf 93       	push	r28
    2d9e:	0f 92       	push	r0
    2da0:	cd b7       	in	r28, 0x3d	; 61
    2da2:	de b7       	in	r29, 0x3e	; 62
    u8 Local_u8Duty =0xff;
    2da4:	8f ef       	ldi	r24, 0xFF	; 255
    2da6:	89 83       	std	Y+1, r24	; 0x01
    if (LOC_enuICUStateMachine == IDLE)
    2da8:	80 91 cb 00 	lds	r24, 0x00CB
    2dac:	83 30       	cpi	r24, 0x03	; 3
    2dae:	19 f4       	brne	.+6      	; 0x2db6 <ICU_u8GetDutyCycle+0x1c>
    {
        Local_u8Duty = LOC_u8DutyCycle;
    2db0:	80 91 cc 00 	lds	r24, 0x00CC
    2db4:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u8Duty;
    2db6:	89 81       	ldd	r24, Y+1	; 0x01
}
    2db8:	0f 90       	pop	r0
    2dba:	cf 91       	pop	r28
    2dbc:	df 91       	pop	r29
    2dbe:	08 95       	ret

00002dc0 <ICU_u16GetFrequency>:

u16 ICU_u16GetFrequency(void)
{
    2dc0:	df 93       	push	r29
    2dc2:	cf 93       	push	r28
    2dc4:	00 d0       	rcall	.+0      	; 0x2dc6 <ICU_u16GetFrequency+0x6>
    2dc6:	cd b7       	in	r28, 0x3d	; 61
    2dc8:	de b7       	in	r29, 0x3e	; 62
    u16 Local_u16freq =0xffff;
    2dca:	8f ef       	ldi	r24, 0xFF	; 255
    2dcc:	9f ef       	ldi	r25, 0xFF	; 255
    2dce:	9a 83       	std	Y+2, r25	; 0x02
    2dd0:	89 83       	std	Y+1, r24	; 0x01
    if (LOC_enuICUStateMachine == IDLE)
    2dd2:	80 91 cb 00 	lds	r24, 0x00CB
    2dd6:	83 30       	cpi	r24, 0x03	; 3
    2dd8:	31 f4       	brne	.+12     	; 0x2de6 <ICU_u16GetFrequency+0x26>
    {
        Local_u16freq = LOC_u16Frequency;
    2dda:	80 91 cd 00 	lds	r24, 0x00CD
    2dde:	90 91 ce 00 	lds	r25, 0x00CE
    2de2:	9a 83       	std	Y+2, r25	; 0x02
    2de4:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u16freq;
    2de6:	89 81       	ldd	r24, Y+1	; 0x01
    2de8:	9a 81       	ldd	r25, Y+2	; 0x02
}
    2dea:	0f 90       	pop	r0
    2dec:	0f 90       	pop	r0
    2dee:	cf 91       	pop	r28
    2df0:	df 91       	pop	r29
    2df2:	08 95       	ret

00002df4 <vidTimerCallBack>:


static void vidTimerCallBack(void)
{
    2df4:	df 93       	push	r29
    2df6:	cf 93       	push	r28
    2df8:	cd b7       	in	r28, 0x3d	; 61
    2dfa:	de b7       	in	r29, 0x3e	; 62
    LOC_u16TimerOvfCounts++;
    2dfc:	80 91 b1 01 	lds	r24, 0x01B1
    2e00:	90 91 b2 01 	lds	r25, 0x01B2
    2e04:	01 96       	adiw	r24, 0x01	; 1
    2e06:	90 93 b2 01 	sts	0x01B2, r25
    2e0a:	80 93 b1 01 	sts	0x01B1, r24
}
    2e0e:	cf 91       	pop	r28
    2e10:	df 91       	pop	r29
    2e12:	08 95       	ret

00002e14 <vidReadingTask>:

static void vidReadingTask(void)
{
    2e14:	df 93       	push	r29
    2e16:	cf 93       	push	r28
    2e18:	00 d0       	rcall	.+0      	; 0x2e1a <vidReadingTask+0x6>
    2e1a:	cd b7       	in	r28, 0x3d	; 61
    2e1c:	de b7       	in	r29, 0x3e	; 62
    switch (LOC_enuICUStateMachine)
    2e1e:	80 91 cb 00 	lds	r24, 0x00CB
    2e22:	28 2f       	mov	r18, r24
    2e24:	30 e0       	ldi	r19, 0x00	; 0
    2e26:	3a 83       	std	Y+2, r19	; 0x02
    2e28:	29 83       	std	Y+1, r18	; 0x01
    2e2a:	89 81       	ldd	r24, Y+1	; 0x01
    2e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e2e:	81 30       	cpi	r24, 0x01	; 1
    2e30:	91 05       	cpc	r25, r1
    2e32:	c1 f0       	breq	.+48     	; 0x2e64 <vidReadingTask+0x50>
    2e34:	29 81       	ldd	r18, Y+1	; 0x01
    2e36:	3a 81       	ldd	r19, Y+2	; 0x02
    2e38:	22 30       	cpi	r18, 0x02	; 2
    2e3a:	31 05       	cpc	r19, r1
    2e3c:	39 f1       	breq	.+78     	; 0x2e8c <vidReadingTask+0x78>
    2e3e:	89 81       	ldd	r24, Y+1	; 0x01
    2e40:	9a 81       	ldd	r25, Y+2	; 0x02
    2e42:	00 97       	sbiw	r24, 0x00	; 0
    2e44:	b9 f5       	brne	.+110    	; 0x2eb4 <vidReadingTask+0xa0>
    {
    case ICU_FIRST_RISING:
        Timer_vidSetTimerCounts(0);
    2e46:	80 e0       	ldi	r24, 0x00	; 0
    2e48:	0e 94 49 0c 	call	0x1892	; 0x1892 <Timer_vidSetTimerCounts>
        LOC_u16TimerOvfCounts = 0;
    2e4c:	10 92 b2 01 	sts	0x01B2, r1
    2e50:	10 92 b1 01 	sts	0x01B1, r1
        EXTI_enuSetSenseLevel(EXTI_INT0 , EXTI_FALLING);
    2e54:	80 e0       	ldi	r24, 0x00	; 0
    2e56:	6c e0       	ldi	r22, 0x0C	; 12
    2e58:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <EXTI_enuSetSenseLevel>
        LOC_enuICUStateMachine = ICU_FALLING;
    2e5c:	81 e0       	ldi	r24, 0x01	; 1
    2e5e:	80 93 cb 00 	sts	0x00CB, r24
    2e62:	28 c0       	rjmp	.+80     	; 0x2eb4 <vidReadingTask+0xa0>
        break;

    case ICU_FALLING:
        LOC_strICUParams.u8TonCounts = Timer_u8GetTimerCounts();
    2e64:	0e 94 57 0c 	call	0x18ae	; 0x18ae <Timer_u8GetTimerCounts>
    2e68:	80 93 ab 01 	sts	0x01AB, r24
        LOC_strICUParams.u8TonOvfCounts = LOC_u16TimerOvfCounts;
    2e6c:	80 91 b1 01 	lds	r24, 0x01B1
    2e70:	90 91 b2 01 	lds	r25, 0x01B2
    2e74:	90 93 ae 01 	sts	0x01AE, r25
    2e78:	80 93 ad 01 	sts	0x01AD, r24
        EXTI_enuSetSenseLevel(EXTI_INT0 , EXTI_RISING);
    2e7c:	80 e0       	ldi	r24, 0x00	; 0
    2e7e:	6a e5       	ldi	r22, 0x5A	; 90
    2e80:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <EXTI_enuSetSenseLevel>
        LOC_enuICUStateMachine = ICU_SECOND_RISING;
    2e84:	82 e0       	ldi	r24, 0x02	; 2
    2e86:	80 93 cb 00 	sts	0x00CB, r24
    2e8a:	14 c0       	rjmp	.+40     	; 0x2eb4 <vidReadingTask+0xa0>
        break;

    case ICU_SECOND_RISING:
        LOC_strICUParams.u8TcCounts = Timer_u8GetTimerCounts();
    2e8c:	0e 94 57 0c 	call	0x18ae	; 0x18ae <Timer_u8GetTimerCounts>
    2e90:	80 93 ac 01 	sts	0x01AC, r24
        LOC_strICUParams.u8TcOvfCounts = LOC_u16TimerOvfCounts;
    2e94:	80 91 b1 01 	lds	r24, 0x01B1
    2e98:	90 91 b2 01 	lds	r25, 0x01B2
    2e9c:	90 93 b0 01 	sts	0x01B0, r25
    2ea0:	80 93 af 01 	sts	0x01AF, r24
        EXTI_enuDisableInterrupt(EXTI_INT0);
    2ea4:	80 e0       	ldi	r24, 0x00	; 0
    2ea6:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <EXTI_enuDisableInterrupt>
        Timer_vidDisableInterrupt();
    2eaa:	0e 94 6f 0c 	call	0x18de	; 0x18de <Timer_vidDisableInterrupt>
        LOC_enuICUStateMachine = IDLE;
    2eae:	83 e0       	ldi	r24, 0x03	; 3
    2eb0:	80 93 cb 00 	sts	0x00CB, r24
        break;
    
    default:
        break;
    }
}
    2eb4:	0f 90       	pop	r0
    2eb6:	0f 90       	pop	r0
    2eb8:	cf 91       	pop	r28
    2eba:	df 91       	pop	r29
    2ebc:	08 95       	ret

00002ebe <GOTOX>:
#include <util/delay.h>
static u8 LOCAL_u8Counter = 0;
static u8 LOCAL_u8Page = 0;
static u8 LOCAL_u8Address = 0;

static ES_t GOTOX(u8 Copy_u8Page){
    2ebe:	df 93       	push	r29
    2ec0:	cf 93       	push	r28
    2ec2:	cd b7       	in	r28, 0x3d	; 61
    2ec4:	de b7       	in	r29, 0x3e	; 62
    2ec6:	6e 97       	sbiw	r28, 0x1e	; 30
    2ec8:	0f b6       	in	r0, 0x3f	; 63
    2eca:	f8 94       	cli
    2ecc:	de bf       	out	0x3e, r29	; 62
    2ece:	0f be       	out	0x3f, r0	; 63
    2ed0:	cd bf       	out	0x3d, r28	; 61
    2ed2:	8d 8f       	std	Y+29, r24	; 0x1d

	if(Copy_u8Page<8){
    2ed4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ed6:	88 30       	cpi	r24, 0x08	; 8
    2ed8:	08 f0       	brcs	.+2      	; 0x2edc <GOTOX+0x1e>
    2eda:	2c c1       	rjmp	.+600    	; 0x3134 <GOTOX+0x276>

	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    2edc:	80 e0       	ldi	r24, 0x00	; 0
    2ede:	65 e0       	ldi	r22, 0x05	; 5
    2ee0:	40 e0       	ldi	r20, 0x00	; 0
    2ee2:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    2ee6:	80 e0       	ldi	r24, 0x00	; 0
    2ee8:	61 e0       	ldi	r22, 0x01	; 1
    2eea:	40 e0       	ldi	r20, 0x00	; 0
    2eec:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Page >> 0) & 1));
    2ef0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ef2:	98 2f       	mov	r25, r24
    2ef4:	91 70       	andi	r25, 0x01	; 1
    2ef6:	81 e0       	ldi	r24, 0x01	; 1
    2ef8:	60 e0       	ldi	r22, 0x00	; 0
    2efa:	49 2f       	mov	r20, r25
    2efc:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Page >> 1) & 1));
    2f00:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f02:	86 95       	lsr	r24
    2f04:	98 2f       	mov	r25, r24
    2f06:	91 70       	andi	r25, 0x01	; 1
    2f08:	81 e0       	ldi	r24, 0x01	; 1
    2f0a:	61 e0       	ldi	r22, 0x01	; 1
    2f0c:	49 2f       	mov	r20, r25
    2f0e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Page >> 2) & 1));
    2f12:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f14:	86 95       	lsr	r24
    2f16:	86 95       	lsr	r24
    2f18:	98 2f       	mov	r25, r24
    2f1a:	91 70       	andi	r25, 0x01	; 1
    2f1c:	81 e0       	ldi	r24, 0x01	; 1
    2f1e:	62 e0       	ldi	r22, 0x02	; 2
    2f20:	49 2f       	mov	r20, r25
    2f22:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,DIO_HIGH);
    2f26:	81 e0       	ldi	r24, 0x01	; 1
    2f28:	63 e0       	ldi	r22, 0x03	; 3
    2f2a:	41 e0       	ldi	r20, 0x01	; 1
    2f2c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,DIO_HIGH);
    2f30:	81 e0       	ldi	r24, 0x01	; 1
    2f32:	64 e0       	ldi	r22, 0x04	; 4
    2f34:	41 e0       	ldi	r20, 0x01	; 1
    2f36:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,DIO_HIGH);
    2f3a:	81 e0       	ldi	r24, 0x01	; 1
    2f3c:	65 e0       	ldi	r22, 0x05	; 5
    2f3e:	41 e0       	ldi	r20, 0x01	; 1
    2f40:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_LOW);
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	66 e0       	ldi	r22, 0x06	; 6
    2f48:	40 e0       	ldi	r20, 0x00	; 0
    2f4a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_HIGH);
    2f4e:	81 e0       	ldi	r24, 0x01	; 1
    2f50:	67 e0       	ldi	r22, 0x07	; 7
    2f52:	41 e0       	ldi	r20, 0x01	; 1
    2f54:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    2f58:	80 e0       	ldi	r24, 0x00	; 0
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	a0 e4       	ldi	r26, 0x40	; 64
    2f5e:	b0 e4       	ldi	r27, 0x40	; 64
    2f60:	89 8f       	std	Y+25, r24	; 0x19
    2f62:	9a 8f       	std	Y+26, r25	; 0x1a
    2f64:	ab 8f       	std	Y+27, r26	; 0x1b
    2f66:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f68:	69 8d       	ldd	r22, Y+25	; 0x19
    2f6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f70:	20 e0       	ldi	r18, 0x00	; 0
    2f72:	30 e0       	ldi	r19, 0x00	; 0
    2f74:	4a e7       	ldi	r20, 0x7A	; 122
    2f76:	55 e4       	ldi	r21, 0x45	; 69
    2f78:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2f7c:	dc 01       	movw	r26, r24
    2f7e:	cb 01       	movw	r24, r22
    2f80:	8d 8b       	std	Y+21, r24	; 0x15
    2f82:	9e 8b       	std	Y+22, r25	; 0x16
    2f84:	af 8b       	std	Y+23, r26	; 0x17
    2f86:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2f88:	6d 89       	ldd	r22, Y+21	; 0x15
    2f8a:	7e 89       	ldd	r23, Y+22	; 0x16
    2f8c:	8f 89       	ldd	r24, Y+23	; 0x17
    2f8e:	98 8d       	ldd	r25, Y+24	; 0x18
    2f90:	20 e0       	ldi	r18, 0x00	; 0
    2f92:	30 e0       	ldi	r19, 0x00	; 0
    2f94:	40 e8       	ldi	r20, 0x80	; 128
    2f96:	5f e3       	ldi	r21, 0x3F	; 63
    2f98:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    2f9c:	88 23       	and	r24, r24
    2f9e:	2c f4       	brge	.+10     	; 0x2faa <GOTOX+0xec>
		__ticks = 1;
    2fa0:	81 e0       	ldi	r24, 0x01	; 1
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	9c 8b       	std	Y+20, r25	; 0x14
    2fa6:	8b 8b       	std	Y+19, r24	; 0x13
    2fa8:	3f c0       	rjmp	.+126    	; 0x3028 <GOTOX+0x16a>
	else if (__tmp > 65535)
    2faa:	6d 89       	ldd	r22, Y+21	; 0x15
    2fac:	7e 89       	ldd	r23, Y+22	; 0x16
    2fae:	8f 89       	ldd	r24, Y+23	; 0x17
    2fb0:	98 8d       	ldd	r25, Y+24	; 0x18
    2fb2:	20 e0       	ldi	r18, 0x00	; 0
    2fb4:	3f ef       	ldi	r19, 0xFF	; 255
    2fb6:	4f e7       	ldi	r20, 0x7F	; 127
    2fb8:	57 e4       	ldi	r21, 0x47	; 71
    2fba:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    2fbe:	18 16       	cp	r1, r24
    2fc0:	4c f5       	brge	.+82     	; 0x3014 <GOTOX+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fc2:	69 8d       	ldd	r22, Y+25	; 0x19
    2fc4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2fc6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fc8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2fca:	20 e0       	ldi	r18, 0x00	; 0
    2fcc:	30 e0       	ldi	r19, 0x00	; 0
    2fce:	40 e2       	ldi	r20, 0x20	; 32
    2fd0:	51 e4       	ldi	r21, 0x41	; 65
    2fd2:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    2fd6:	dc 01       	movw	r26, r24
    2fd8:	cb 01       	movw	r24, r22
    2fda:	bc 01       	movw	r22, r24
    2fdc:	cd 01       	movw	r24, r26
    2fde:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    2fe2:	dc 01       	movw	r26, r24
    2fe4:	cb 01       	movw	r24, r22
    2fe6:	9c 8b       	std	Y+20, r25	; 0x14
    2fe8:	8b 8b       	std	Y+19, r24	; 0x13
    2fea:	0f c0       	rjmp	.+30     	; 0x300a <GOTOX+0x14c>
    2fec:	80 e9       	ldi	r24, 0x90	; 144
    2fee:	91 e0       	ldi	r25, 0x01	; 1
    2ff0:	9a 8b       	std	Y+18, r25	; 0x12
    2ff2:	89 8b       	std	Y+17, r24	; 0x11
    2ff4:	89 89       	ldd	r24, Y+17	; 0x11
    2ff6:	9a 89       	ldd	r25, Y+18	; 0x12
    2ff8:	01 97       	sbiw	r24, 0x01	; 1
    2ffa:	f1 f7       	brne	.-4      	; 0x2ff8 <GOTOX+0x13a>
    2ffc:	9a 8b       	std	Y+18, r25	; 0x12
    2ffe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3000:	8b 89       	ldd	r24, Y+19	; 0x13
    3002:	9c 89       	ldd	r25, Y+20	; 0x14
    3004:	01 97       	sbiw	r24, 0x01	; 1
    3006:	9c 8b       	std	Y+20, r25	; 0x14
    3008:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    300a:	8b 89       	ldd	r24, Y+19	; 0x13
    300c:	9c 89       	ldd	r25, Y+20	; 0x14
    300e:	00 97       	sbiw	r24, 0x00	; 0
    3010:	69 f7       	brne	.-38     	; 0x2fec <GOTOX+0x12e>
    3012:	14 c0       	rjmp	.+40     	; 0x303c <GOTOX+0x17e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3014:	6d 89       	ldd	r22, Y+21	; 0x15
    3016:	7e 89       	ldd	r23, Y+22	; 0x16
    3018:	8f 89       	ldd	r24, Y+23	; 0x17
    301a:	98 8d       	ldd	r25, Y+24	; 0x18
    301c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3020:	dc 01       	movw	r26, r24
    3022:	cb 01       	movw	r24, r22
    3024:	9c 8b       	std	Y+20, r25	; 0x14
    3026:	8b 8b       	std	Y+19, r24	; 0x13
    3028:	8b 89       	ldd	r24, Y+19	; 0x13
    302a:	9c 89       	ldd	r25, Y+20	; 0x14
    302c:	98 8b       	std	Y+16, r25	; 0x10
    302e:	8f 87       	std	Y+15, r24	; 0x0f
    3030:	8f 85       	ldd	r24, Y+15	; 0x0f
    3032:	98 89       	ldd	r25, Y+16	; 0x10
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	f1 f7       	brne	.-4      	; 0x3034 <GOTOX+0x176>
    3038:	98 8b       	std	Y+16, r25	; 0x10
    303a:	8f 87       	std	Y+15, r24	; 0x0f


    _delay_ms(3);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    303c:	80 e0       	ldi	r24, 0x00	; 0
    303e:	62 e0       	ldi	r22, 0x02	; 2
    3040:	41 e0       	ldi	r20, 0x01	; 1
    3042:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3046:	80 e0       	ldi	r24, 0x00	; 0
    3048:	90 e0       	ldi	r25, 0x00	; 0
    304a:	a0 e8       	ldi	r26, 0x80	; 128
    304c:	bf e3       	ldi	r27, 0x3F	; 63
    304e:	8b 87       	std	Y+11, r24	; 0x0b
    3050:	9c 87       	std	Y+12, r25	; 0x0c
    3052:	ad 87       	std	Y+13, r26	; 0x0d
    3054:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3056:	6b 85       	ldd	r22, Y+11	; 0x0b
    3058:	7c 85       	ldd	r23, Y+12	; 0x0c
    305a:	8d 85       	ldd	r24, Y+13	; 0x0d
    305c:	9e 85       	ldd	r25, Y+14	; 0x0e
    305e:	20 e0       	ldi	r18, 0x00	; 0
    3060:	30 e0       	ldi	r19, 0x00	; 0
    3062:	4a e7       	ldi	r20, 0x7A	; 122
    3064:	55 e4       	ldi	r21, 0x45	; 69
    3066:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    306a:	dc 01       	movw	r26, r24
    306c:	cb 01       	movw	r24, r22
    306e:	8f 83       	std	Y+7, r24	; 0x07
    3070:	98 87       	std	Y+8, r25	; 0x08
    3072:	a9 87       	std	Y+9, r26	; 0x09
    3074:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3076:	6f 81       	ldd	r22, Y+7	; 0x07
    3078:	78 85       	ldd	r23, Y+8	; 0x08
    307a:	89 85       	ldd	r24, Y+9	; 0x09
    307c:	9a 85       	ldd	r25, Y+10	; 0x0a
    307e:	20 e0       	ldi	r18, 0x00	; 0
    3080:	30 e0       	ldi	r19, 0x00	; 0
    3082:	40 e8       	ldi	r20, 0x80	; 128
    3084:	5f e3       	ldi	r21, 0x3F	; 63
    3086:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    308a:	88 23       	and	r24, r24
    308c:	2c f4       	brge	.+10     	; 0x3098 <GOTOX+0x1da>
		__ticks = 1;
    308e:	81 e0       	ldi	r24, 0x01	; 1
    3090:	90 e0       	ldi	r25, 0x00	; 0
    3092:	9e 83       	std	Y+6, r25	; 0x06
    3094:	8d 83       	std	Y+5, r24	; 0x05
    3096:	3f c0       	rjmp	.+126    	; 0x3116 <GOTOX+0x258>
	else if (__tmp > 65535)
    3098:	6f 81       	ldd	r22, Y+7	; 0x07
    309a:	78 85       	ldd	r23, Y+8	; 0x08
    309c:	89 85       	ldd	r24, Y+9	; 0x09
    309e:	9a 85       	ldd	r25, Y+10	; 0x0a
    30a0:	20 e0       	ldi	r18, 0x00	; 0
    30a2:	3f ef       	ldi	r19, 0xFF	; 255
    30a4:	4f e7       	ldi	r20, 0x7F	; 127
    30a6:	57 e4       	ldi	r21, 0x47	; 71
    30a8:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    30ac:	18 16       	cp	r1, r24
    30ae:	4c f5       	brge	.+82     	; 0x3102 <GOTOX+0x244>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    30b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    30b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    30b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    30b8:	20 e0       	ldi	r18, 0x00	; 0
    30ba:	30 e0       	ldi	r19, 0x00	; 0
    30bc:	40 e2       	ldi	r20, 0x20	; 32
    30be:	51 e4       	ldi	r21, 0x41	; 65
    30c0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    30c4:	dc 01       	movw	r26, r24
    30c6:	cb 01       	movw	r24, r22
    30c8:	bc 01       	movw	r22, r24
    30ca:	cd 01       	movw	r24, r26
    30cc:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    30d0:	dc 01       	movw	r26, r24
    30d2:	cb 01       	movw	r24, r22
    30d4:	9e 83       	std	Y+6, r25	; 0x06
    30d6:	8d 83       	std	Y+5, r24	; 0x05
    30d8:	0f c0       	rjmp	.+30     	; 0x30f8 <GOTOX+0x23a>
    30da:	80 e9       	ldi	r24, 0x90	; 144
    30dc:	91 e0       	ldi	r25, 0x01	; 1
    30de:	9c 83       	std	Y+4, r25	; 0x04
    30e0:	8b 83       	std	Y+3, r24	; 0x03
    30e2:	8b 81       	ldd	r24, Y+3	; 0x03
    30e4:	9c 81       	ldd	r25, Y+4	; 0x04
    30e6:	01 97       	sbiw	r24, 0x01	; 1
    30e8:	f1 f7       	brne	.-4      	; 0x30e6 <GOTOX+0x228>
    30ea:	9c 83       	std	Y+4, r25	; 0x04
    30ec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30ee:	8d 81       	ldd	r24, Y+5	; 0x05
    30f0:	9e 81       	ldd	r25, Y+6	; 0x06
    30f2:	01 97       	sbiw	r24, 0x01	; 1
    30f4:	9e 83       	std	Y+6, r25	; 0x06
    30f6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30f8:	8d 81       	ldd	r24, Y+5	; 0x05
    30fa:	9e 81       	ldd	r25, Y+6	; 0x06
    30fc:	00 97       	sbiw	r24, 0x00	; 0
    30fe:	69 f7       	brne	.-38     	; 0x30da <GOTOX+0x21c>
    3100:	14 c0       	rjmp	.+40     	; 0x312a <GOTOX+0x26c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3102:	6f 81       	ldd	r22, Y+7	; 0x07
    3104:	78 85       	ldd	r23, Y+8	; 0x08
    3106:	89 85       	ldd	r24, Y+9	; 0x09
    3108:	9a 85       	ldd	r25, Y+10	; 0x0a
    310a:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    310e:	dc 01       	movw	r26, r24
    3110:	cb 01       	movw	r24, r22
    3112:	9e 83       	std	Y+6, r25	; 0x06
    3114:	8d 83       	std	Y+5, r24	; 0x05
    3116:	8d 81       	ldd	r24, Y+5	; 0x05
    3118:	9e 81       	ldd	r25, Y+6	; 0x06
    311a:	9a 83       	std	Y+2, r25	; 0x02
    311c:	89 83       	std	Y+1, r24	; 0x01
    311e:	89 81       	ldd	r24, Y+1	; 0x01
    3120:	9a 81       	ldd	r25, Y+2	; 0x02
    3122:	01 97       	sbiw	r24, 0x01	; 1
    3124:	f1 f7       	brne	.-4      	; 0x3122 <GOTOX+0x264>
    3126:	9a 83       	std	Y+2, r25	; 0x02
    3128:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(1);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    312a:	80 e0       	ldi	r24, 0x00	; 0
    312c:	62 e0       	ldi	r22, 0x02	; 2
    312e:	40 e0       	ldi	r20, 0x00	; 0
    3130:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//        LOCAL_u8Page=Copy_u8Page;


	}
}
    3134:	6e 96       	adiw	r28, 0x1e	; 30
    3136:	0f b6       	in	r0, 0x3f	; 63
    3138:	f8 94       	cli
    313a:	de bf       	out	0x3e, r29	; 62
    313c:	0f be       	out	0x3f, r0	; 63
    313e:	cd bf       	out	0x3d, r28	; 61
    3140:	cf 91       	pop	r28
    3142:	df 91       	pop	r29
    3144:	08 95       	ret

00003146 <GOTOY>:
static ES_t GOTOY(u8 Copy_u8Address){
    3146:	0f 93       	push	r16
    3148:	1f 93       	push	r17
    314a:	df 93       	push	r29
    314c:	cf 93       	push	r28
    314e:	cd b7       	in	r28, 0x3d	; 61
    3150:	de b7       	in	r29, 0x3e	; 62
    3152:	c8 54       	subi	r28, 0x48	; 72
    3154:	d0 40       	sbci	r29, 0x00	; 0
    3156:	0f b6       	in	r0, 0x3f	; 63
    3158:	f8 94       	cli
    315a:	de bf       	out	0x3e, r29	; 62
    315c:	0f be       	out	0x3f, r0	; 63
    315e:	cd bf       	out	0x3d, r28	; 61
    3160:	fe 01       	movw	r30, r28
    3162:	e9 5b       	subi	r30, 0xB9	; 185
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	80 83       	st	Z, r24
	LOCAL_u8Address=Copy_u8Address;
    3168:	fe 01       	movw	r30, r28
    316a:	e9 5b       	subi	r30, 0xB9	; 185
    316c:	ff 4f       	sbci	r31, 0xFF	; 255
    316e:	80 81       	ld	r24, Z
    3170:	80 93 b5 01 	sts	0x01B5, r24

		if(Copy_u8Address < 64){
    3174:	fe 01       	movw	r30, r28
    3176:	e9 5b       	subi	r30, 0xB9	; 185
    3178:	ff 4f       	sbci	r31, 0xFF	; 255
    317a:	80 81       	ld	r24, Z
    317c:	80 34       	cpi	r24, 0x40	; 64
    317e:	08 f0       	brcs	.+2      	; 0x3182 <GOTOY+0x3c>
    3180:	6d c1       	rjmp	.+730    	; 0x345c <GOTOY+0x316>
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    3182:	80 e0       	ldi	r24, 0x00	; 0
    3184:	65 e0       	ldi	r22, 0x05	; 5
    3186:	40 e0       	ldi	r20, 0x00	; 0
    3188:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    318c:	80 e0       	ldi	r24, 0x00	; 0
    318e:	61 e0       	ldi	r22, 0x01	; 1
    3190:	40 e0       	ldi	r20, 0x00	; 0
    3192:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_HIGH);
    3196:	80 e0       	ldi	r24, 0x00	; 0
    3198:	63 e0       	ldi	r22, 0x03	; 3
    319a:	41 e0       	ldi	r20, 0x01	; 1
    319c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_LOW);
    31a0:	80 e0       	ldi	r24, 0x00	; 0
    31a2:	67 e0       	ldi	r22, 0x07	; 7
    31a4:	40 e0       	ldi	r20, 0x00	; 0
    31a6:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Address >> 0) & 1));
    31aa:	fe 01       	movw	r30, r28
    31ac:	e9 5b       	subi	r30, 0xB9	; 185
    31ae:	ff 4f       	sbci	r31, 0xFF	; 255
    31b0:	80 81       	ld	r24, Z
    31b2:	98 2f       	mov	r25, r24
    31b4:	91 70       	andi	r25, 0x01	; 1
    31b6:	81 e0       	ldi	r24, 0x01	; 1
    31b8:	60 e0       	ldi	r22, 0x00	; 0
    31ba:	49 2f       	mov	r20, r25
    31bc:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Address >> 1) & 1));
    31c0:	fe 01       	movw	r30, r28
    31c2:	e9 5b       	subi	r30, 0xB9	; 185
    31c4:	ff 4f       	sbci	r31, 0xFF	; 255
    31c6:	80 81       	ld	r24, Z
    31c8:	86 95       	lsr	r24
    31ca:	98 2f       	mov	r25, r24
    31cc:	91 70       	andi	r25, 0x01	; 1
    31ce:	81 e0       	ldi	r24, 0x01	; 1
    31d0:	61 e0       	ldi	r22, 0x01	; 1
    31d2:	49 2f       	mov	r20, r25
    31d4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Address >> 2) & 1));
    31d8:	fe 01       	movw	r30, r28
    31da:	e9 5b       	subi	r30, 0xB9	; 185
    31dc:	ff 4f       	sbci	r31, 0xFF	; 255
    31de:	80 81       	ld	r24, Z
    31e0:	86 95       	lsr	r24
    31e2:	86 95       	lsr	r24
    31e4:	98 2f       	mov	r25, r24
    31e6:	91 70       	andi	r25, 0x01	; 1
    31e8:	81 e0       	ldi	r24, 0x01	; 1
    31ea:	62 e0       	ldi	r22, 0x02	; 2
    31ec:	49 2f       	mov	r20, r25
    31ee:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,((Copy_u8Address >> 3) & 1));
    31f2:	fe 01       	movw	r30, r28
    31f4:	e9 5b       	subi	r30, 0xB9	; 185
    31f6:	ff 4f       	sbci	r31, 0xFF	; 255
    31f8:	80 81       	ld	r24, Z
    31fa:	86 95       	lsr	r24
    31fc:	86 95       	lsr	r24
    31fe:	86 95       	lsr	r24
    3200:	98 2f       	mov	r25, r24
    3202:	91 70       	andi	r25, 0x01	; 1
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	63 e0       	ldi	r22, 0x03	; 3
    3208:	49 2f       	mov	r20, r25
    320a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,((Copy_u8Address >> 4) & 1));
    320e:	fe 01       	movw	r30, r28
    3210:	e9 5b       	subi	r30, 0xB9	; 185
    3212:	ff 4f       	sbci	r31, 0xFF	; 255
    3214:	80 81       	ld	r24, Z
    3216:	82 95       	swap	r24
    3218:	8f 70       	andi	r24, 0x0F	; 15
    321a:	98 2f       	mov	r25, r24
    321c:	91 70       	andi	r25, 0x01	; 1
    321e:	81 e0       	ldi	r24, 0x01	; 1
    3220:	64 e0       	ldi	r22, 0x04	; 4
    3222:	49 2f       	mov	r20, r25
    3224:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,((Copy_u8Address >> 5) & 1));
    3228:	fe 01       	movw	r30, r28
    322a:	e9 5b       	subi	r30, 0xB9	; 185
    322c:	ff 4f       	sbci	r31, 0xFF	; 255
    322e:	80 81       	ld	r24, Z
    3230:	82 95       	swap	r24
    3232:	86 95       	lsr	r24
    3234:	87 70       	andi	r24, 0x07	; 7
    3236:	98 2f       	mov	r25, r24
    3238:	91 70       	andi	r25, 0x01	; 1
    323a:	81 e0       	ldi	r24, 0x01	; 1
    323c:	65 e0       	ldi	r22, 0x05	; 5
    323e:	49 2f       	mov	r20, r25
    3240:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_HIGH);
    3244:	81 e0       	ldi	r24, 0x01	; 1
    3246:	66 e0       	ldi	r22, 0x06	; 6
    3248:	41 e0       	ldi	r20, 0x01	; 1
    324a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_LOW);
    324e:	81 e0       	ldi	r24, 0x01	; 1
    3250:	67 e0       	ldi	r22, 0x07	; 7
    3252:	40 e0       	ldi	r20, 0x00	; 0
    3254:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3258:	fe 01       	movw	r30, r28
    325a:	ed 5b       	subi	r30, 0xBD	; 189
    325c:	ff 4f       	sbci	r31, 0xFF	; 255
    325e:	80 e0       	ldi	r24, 0x00	; 0
    3260:	90 e0       	ldi	r25, 0x00	; 0
    3262:	a0 e0       	ldi	r26, 0x00	; 0
    3264:	b0 e4       	ldi	r27, 0x40	; 64
    3266:	80 83       	st	Z, r24
    3268:	91 83       	std	Z+1, r25	; 0x01
    326a:	a2 83       	std	Z+2, r26	; 0x02
    326c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    326e:	8e 01       	movw	r16, r28
    3270:	01 5c       	subi	r16, 0xC1	; 193
    3272:	1f 4f       	sbci	r17, 0xFF	; 255
    3274:	fe 01       	movw	r30, r28
    3276:	ed 5b       	subi	r30, 0xBD	; 189
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	60 81       	ld	r22, Z
    327c:	71 81       	ldd	r23, Z+1	; 0x01
    327e:	82 81       	ldd	r24, Z+2	; 0x02
    3280:	93 81       	ldd	r25, Z+3	; 0x03
    3282:	20 e0       	ldi	r18, 0x00	; 0
    3284:	30 e0       	ldi	r19, 0x00	; 0
    3286:	4a e7       	ldi	r20, 0x7A	; 122
    3288:	55 e4       	ldi	r21, 0x45	; 69
    328a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    328e:	dc 01       	movw	r26, r24
    3290:	cb 01       	movw	r24, r22
    3292:	f8 01       	movw	r30, r16
    3294:	80 83       	st	Z, r24
    3296:	91 83       	std	Z+1, r25	; 0x01
    3298:	a2 83       	std	Z+2, r26	; 0x02
    329a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    329c:	fe 01       	movw	r30, r28
    329e:	ff 96       	adiw	r30, 0x3f	; 63
    32a0:	60 81       	ld	r22, Z
    32a2:	71 81       	ldd	r23, Z+1	; 0x01
    32a4:	82 81       	ldd	r24, Z+2	; 0x02
    32a6:	93 81       	ldd	r25, Z+3	; 0x03
    32a8:	20 e0       	ldi	r18, 0x00	; 0
    32aa:	30 e0       	ldi	r19, 0x00	; 0
    32ac:	40 e8       	ldi	r20, 0x80	; 128
    32ae:	5f e3       	ldi	r21, 0x3F	; 63
    32b0:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    32b4:	88 23       	and	r24, r24
    32b6:	2c f4       	brge	.+10     	; 0x32c2 <GOTOY+0x17c>
		__ticks = 1;
    32b8:	81 e0       	ldi	r24, 0x01	; 1
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	9e af       	std	Y+62, r25	; 0x3e
    32be:	8d af       	std	Y+61, r24	; 0x3d
    32c0:	46 c0       	rjmp	.+140    	; 0x334e <GOTOY+0x208>
	else if (__tmp > 65535)
    32c2:	fe 01       	movw	r30, r28
    32c4:	ff 96       	adiw	r30, 0x3f	; 63
    32c6:	60 81       	ld	r22, Z
    32c8:	71 81       	ldd	r23, Z+1	; 0x01
    32ca:	82 81       	ldd	r24, Z+2	; 0x02
    32cc:	93 81       	ldd	r25, Z+3	; 0x03
    32ce:	20 e0       	ldi	r18, 0x00	; 0
    32d0:	3f ef       	ldi	r19, 0xFF	; 255
    32d2:	4f e7       	ldi	r20, 0x7F	; 127
    32d4:	57 e4       	ldi	r21, 0x47	; 71
    32d6:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    32da:	18 16       	cp	r1, r24
    32dc:	64 f5       	brge	.+88     	; 0x3336 <GOTOY+0x1f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32de:	fe 01       	movw	r30, r28
    32e0:	ed 5b       	subi	r30, 0xBD	; 189
    32e2:	ff 4f       	sbci	r31, 0xFF	; 255
    32e4:	60 81       	ld	r22, Z
    32e6:	71 81       	ldd	r23, Z+1	; 0x01
    32e8:	82 81       	ldd	r24, Z+2	; 0x02
    32ea:	93 81       	ldd	r25, Z+3	; 0x03
    32ec:	20 e0       	ldi	r18, 0x00	; 0
    32ee:	30 e0       	ldi	r19, 0x00	; 0
    32f0:	40 e2       	ldi	r20, 0x20	; 32
    32f2:	51 e4       	ldi	r21, 0x41	; 65
    32f4:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    32f8:	dc 01       	movw	r26, r24
    32fa:	cb 01       	movw	r24, r22
    32fc:	bc 01       	movw	r22, r24
    32fe:	cd 01       	movw	r24, r26
    3300:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3304:	dc 01       	movw	r26, r24
    3306:	cb 01       	movw	r24, r22
    3308:	9e af       	std	Y+62, r25	; 0x3e
    330a:	8d af       	std	Y+61, r24	; 0x3d
    330c:	0f c0       	rjmp	.+30     	; 0x332c <GOTOY+0x1e6>
    330e:	80 e9       	ldi	r24, 0x90	; 144
    3310:	91 e0       	ldi	r25, 0x01	; 1
    3312:	9c af       	std	Y+60, r25	; 0x3c
    3314:	8b af       	std	Y+59, r24	; 0x3b
    3316:	8b ad       	ldd	r24, Y+59	; 0x3b
    3318:	9c ad       	ldd	r25, Y+60	; 0x3c
    331a:	01 97       	sbiw	r24, 0x01	; 1
    331c:	f1 f7       	brne	.-4      	; 0x331a <GOTOY+0x1d4>
    331e:	9c af       	std	Y+60, r25	; 0x3c
    3320:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3322:	8d ad       	ldd	r24, Y+61	; 0x3d
    3324:	9e ad       	ldd	r25, Y+62	; 0x3e
    3326:	01 97       	sbiw	r24, 0x01	; 1
    3328:	9e af       	std	Y+62, r25	; 0x3e
    332a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    332c:	8d ad       	ldd	r24, Y+61	; 0x3d
    332e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3330:	00 97       	sbiw	r24, 0x00	; 0
    3332:	69 f7       	brne	.-38     	; 0x330e <GOTOY+0x1c8>
    3334:	16 c0       	rjmp	.+44     	; 0x3362 <GOTOY+0x21c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3336:	fe 01       	movw	r30, r28
    3338:	ff 96       	adiw	r30, 0x3f	; 63
    333a:	60 81       	ld	r22, Z
    333c:	71 81       	ldd	r23, Z+1	; 0x01
    333e:	82 81       	ldd	r24, Z+2	; 0x02
    3340:	93 81       	ldd	r25, Z+3	; 0x03
    3342:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3346:	dc 01       	movw	r26, r24
    3348:	cb 01       	movw	r24, r22
    334a:	9e af       	std	Y+62, r25	; 0x3e
    334c:	8d af       	std	Y+61, r24	; 0x3d
    334e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3350:	9e ad       	ldd	r25, Y+62	; 0x3e
    3352:	9a af       	std	Y+58, r25	; 0x3a
    3354:	89 af       	std	Y+57, r24	; 0x39
    3356:	89 ad       	ldd	r24, Y+57	; 0x39
    3358:	9a ad       	ldd	r25, Y+58	; 0x3a
    335a:	01 97       	sbiw	r24, 0x01	; 1
    335c:	f1 f7       	brne	.-4      	; 0x335a <GOTOY+0x214>
    335e:	9a af       	std	Y+58, r25	; 0x3a
    3360:	89 af       	std	Y+57, r24	; 0x39

			_delay_ms(2);
			    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    3362:	80 e0       	ldi	r24, 0x00	; 0
    3364:	62 e0       	ldi	r22, 0x02	; 2
    3366:	41 e0       	ldi	r20, 0x01	; 1
    3368:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    336c:	80 e0       	ldi	r24, 0x00	; 0
    336e:	90 e0       	ldi	r25, 0x00	; 0
    3370:	a0 e8       	ldi	r26, 0x80	; 128
    3372:	bf e3       	ldi	r27, 0x3F	; 63
    3374:	8d ab       	std	Y+53, r24	; 0x35
    3376:	9e ab       	std	Y+54, r25	; 0x36
    3378:	af ab       	std	Y+55, r26	; 0x37
    337a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    337c:	6d a9       	ldd	r22, Y+53	; 0x35
    337e:	7e a9       	ldd	r23, Y+54	; 0x36
    3380:	8f a9       	ldd	r24, Y+55	; 0x37
    3382:	98 ad       	ldd	r25, Y+56	; 0x38
    3384:	20 e0       	ldi	r18, 0x00	; 0
    3386:	30 e0       	ldi	r19, 0x00	; 0
    3388:	4a e7       	ldi	r20, 0x7A	; 122
    338a:	55 e4       	ldi	r21, 0x45	; 69
    338c:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3390:	dc 01       	movw	r26, r24
    3392:	cb 01       	movw	r24, r22
    3394:	89 ab       	std	Y+49, r24	; 0x31
    3396:	9a ab       	std	Y+50, r25	; 0x32
    3398:	ab ab       	std	Y+51, r26	; 0x33
    339a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    339c:	69 a9       	ldd	r22, Y+49	; 0x31
    339e:	7a a9       	ldd	r23, Y+50	; 0x32
    33a0:	8b a9       	ldd	r24, Y+51	; 0x33
    33a2:	9c a9       	ldd	r25, Y+52	; 0x34
    33a4:	20 e0       	ldi	r18, 0x00	; 0
    33a6:	30 e0       	ldi	r19, 0x00	; 0
    33a8:	40 e8       	ldi	r20, 0x80	; 128
    33aa:	5f e3       	ldi	r21, 0x3F	; 63
    33ac:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    33b0:	88 23       	and	r24, r24
    33b2:	2c f4       	brge	.+10     	; 0x33be <GOTOY+0x278>
		__ticks = 1;
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	98 ab       	std	Y+48, r25	; 0x30
    33ba:	8f a7       	std	Y+47, r24	; 0x2f
    33bc:	3f c0       	rjmp	.+126    	; 0x343c <GOTOY+0x2f6>
	else if (__tmp > 65535)
    33be:	69 a9       	ldd	r22, Y+49	; 0x31
    33c0:	7a a9       	ldd	r23, Y+50	; 0x32
    33c2:	8b a9       	ldd	r24, Y+51	; 0x33
    33c4:	9c a9       	ldd	r25, Y+52	; 0x34
    33c6:	20 e0       	ldi	r18, 0x00	; 0
    33c8:	3f ef       	ldi	r19, 0xFF	; 255
    33ca:	4f e7       	ldi	r20, 0x7F	; 127
    33cc:	57 e4       	ldi	r21, 0x47	; 71
    33ce:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    33d2:	18 16       	cp	r1, r24
    33d4:	4c f5       	brge	.+82     	; 0x3428 <GOTOY+0x2e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33d6:	6d a9       	ldd	r22, Y+53	; 0x35
    33d8:	7e a9       	ldd	r23, Y+54	; 0x36
    33da:	8f a9       	ldd	r24, Y+55	; 0x37
    33dc:	98 ad       	ldd	r25, Y+56	; 0x38
    33de:	20 e0       	ldi	r18, 0x00	; 0
    33e0:	30 e0       	ldi	r19, 0x00	; 0
    33e2:	40 e2       	ldi	r20, 0x20	; 32
    33e4:	51 e4       	ldi	r21, 0x41	; 65
    33e6:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    33ea:	dc 01       	movw	r26, r24
    33ec:	cb 01       	movw	r24, r22
    33ee:	bc 01       	movw	r22, r24
    33f0:	cd 01       	movw	r24, r26
    33f2:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    33f6:	dc 01       	movw	r26, r24
    33f8:	cb 01       	movw	r24, r22
    33fa:	98 ab       	std	Y+48, r25	; 0x30
    33fc:	8f a7       	std	Y+47, r24	; 0x2f
    33fe:	0f c0       	rjmp	.+30     	; 0x341e <GOTOY+0x2d8>
    3400:	80 e9       	ldi	r24, 0x90	; 144
    3402:	91 e0       	ldi	r25, 0x01	; 1
    3404:	9e a7       	std	Y+46, r25	; 0x2e
    3406:	8d a7       	std	Y+45, r24	; 0x2d
    3408:	8d a5       	ldd	r24, Y+45	; 0x2d
    340a:	9e a5       	ldd	r25, Y+46	; 0x2e
    340c:	01 97       	sbiw	r24, 0x01	; 1
    340e:	f1 f7       	brne	.-4      	; 0x340c <GOTOY+0x2c6>
    3410:	9e a7       	std	Y+46, r25	; 0x2e
    3412:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3414:	8f a5       	ldd	r24, Y+47	; 0x2f
    3416:	98 a9       	ldd	r25, Y+48	; 0x30
    3418:	01 97       	sbiw	r24, 0x01	; 1
    341a:	98 ab       	std	Y+48, r25	; 0x30
    341c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    341e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3420:	98 a9       	ldd	r25, Y+48	; 0x30
    3422:	00 97       	sbiw	r24, 0x00	; 0
    3424:	69 f7       	brne	.-38     	; 0x3400 <GOTOY+0x2ba>
    3426:	14 c0       	rjmp	.+40     	; 0x3450 <GOTOY+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3428:	69 a9       	ldd	r22, Y+49	; 0x31
    342a:	7a a9       	ldd	r23, Y+50	; 0x32
    342c:	8b a9       	ldd	r24, Y+51	; 0x33
    342e:	9c a9       	ldd	r25, Y+52	; 0x34
    3430:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3434:	dc 01       	movw	r26, r24
    3436:	cb 01       	movw	r24, r22
    3438:	98 ab       	std	Y+48, r25	; 0x30
    343a:	8f a7       	std	Y+47, r24	; 0x2f
    343c:	8f a5       	ldd	r24, Y+47	; 0x2f
    343e:	98 a9       	ldd	r25, Y+48	; 0x30
    3440:	9c a7       	std	Y+44, r25	; 0x2c
    3442:	8b a7       	std	Y+43, r24	; 0x2b
    3444:	8b a5       	ldd	r24, Y+43	; 0x2b
    3446:	9c a5       	ldd	r25, Y+44	; 0x2c
    3448:	01 97       	sbiw	r24, 0x01	; 1
    344a:	f1 f7       	brne	.-4      	; 0x3448 <GOTOY+0x302>
    344c:	9c a7       	std	Y+44, r25	; 0x2c
    344e:	8b a7       	std	Y+43, r24	; 0x2b
			    _delay_ms(1);
			    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    3450:	80 e0       	ldi	r24, 0x00	; 0
    3452:	62 e0       	ldi	r22, 0x02	; 2
    3454:	40 e0       	ldi	r20, 0x00	; 0
    3456:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    345a:	fe c1       	rjmp	.+1020   	; 0x3858 <GOTOY+0x712>


		}else{
			LOCAL_u8Address=Copy_u8Address;
    345c:	fe 01       	movw	r30, r28
    345e:	e9 5b       	subi	r30, 0xB9	; 185
    3460:	ff 4f       	sbci	r31, 0xFF	; 255
    3462:	80 81       	ld	r24, Z
    3464:	80 93 b5 01 	sts	0x01B5, r24


			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    3468:	80 e0       	ldi	r24, 0x00	; 0
    346a:	65 e0       	ldi	r22, 0x05	; 5
    346c:	40 e0       	ldi	r20, 0x00	; 0
    346e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    3472:	80 e0       	ldi	r24, 0x00	; 0
    3474:	61 e0       	ldi	r22, 0x01	; 1
    3476:	40 e0       	ldi	r20, 0x00	; 0
    3478:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_LOW);
    347c:	80 e0       	ldi	r24, 0x00	; 0
    347e:	63 e0       	ldi	r22, 0x03	; 3
    3480:	40 e0       	ldi	r20, 0x00	; 0
    3482:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RESET, DIO_HIGH);
    3486:	80 e0       	ldi	r24, 0x00	; 0
    3488:	60 e0       	ldi	r22, 0x00	; 0
    348a:	41 e0       	ldi	r20, 0x01	; 1
    348c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3490:	80 e0       	ldi	r24, 0x00	; 0
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	a0 e8       	ldi	r26, 0x80	; 128
    3496:	bf e3       	ldi	r27, 0x3F	; 63
    3498:	8f a3       	std	Y+39, r24	; 0x27
    349a:	98 a7       	std	Y+40, r25	; 0x28
    349c:	a9 a7       	std	Y+41, r26	; 0x29
    349e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34a0:	6f a1       	ldd	r22, Y+39	; 0x27
    34a2:	78 a5       	ldd	r23, Y+40	; 0x28
    34a4:	89 a5       	ldd	r24, Y+41	; 0x29
    34a6:	9a a5       	ldd	r25, Y+42	; 0x2a
    34a8:	20 e0       	ldi	r18, 0x00	; 0
    34aa:	30 e0       	ldi	r19, 0x00	; 0
    34ac:	4a e7       	ldi	r20, 0x7A	; 122
    34ae:	55 e4       	ldi	r21, 0x45	; 69
    34b0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    34b4:	dc 01       	movw	r26, r24
    34b6:	cb 01       	movw	r24, r22
    34b8:	8b a3       	std	Y+35, r24	; 0x23
    34ba:	9c a3       	std	Y+36, r25	; 0x24
    34bc:	ad a3       	std	Y+37, r26	; 0x25
    34be:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    34c0:	6b a1       	ldd	r22, Y+35	; 0x23
    34c2:	7c a1       	ldd	r23, Y+36	; 0x24
    34c4:	8d a1       	ldd	r24, Y+37	; 0x25
    34c6:	9e a1       	ldd	r25, Y+38	; 0x26
    34c8:	20 e0       	ldi	r18, 0x00	; 0
    34ca:	30 e0       	ldi	r19, 0x00	; 0
    34cc:	40 e8       	ldi	r20, 0x80	; 128
    34ce:	5f e3       	ldi	r21, 0x3F	; 63
    34d0:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    34d4:	88 23       	and	r24, r24
    34d6:	2c f4       	brge	.+10     	; 0x34e2 <GOTOY+0x39c>
		__ticks = 1;
    34d8:	81 e0       	ldi	r24, 0x01	; 1
    34da:	90 e0       	ldi	r25, 0x00	; 0
    34dc:	9a a3       	std	Y+34, r25	; 0x22
    34de:	89 a3       	std	Y+33, r24	; 0x21
    34e0:	3f c0       	rjmp	.+126    	; 0x3560 <GOTOY+0x41a>
	else if (__tmp > 65535)
    34e2:	6b a1       	ldd	r22, Y+35	; 0x23
    34e4:	7c a1       	ldd	r23, Y+36	; 0x24
    34e6:	8d a1       	ldd	r24, Y+37	; 0x25
    34e8:	9e a1       	ldd	r25, Y+38	; 0x26
    34ea:	20 e0       	ldi	r18, 0x00	; 0
    34ec:	3f ef       	ldi	r19, 0xFF	; 255
    34ee:	4f e7       	ldi	r20, 0x7F	; 127
    34f0:	57 e4       	ldi	r21, 0x47	; 71
    34f2:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    34f6:	18 16       	cp	r1, r24
    34f8:	4c f5       	brge	.+82     	; 0x354c <GOTOY+0x406>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34fa:	6f a1       	ldd	r22, Y+39	; 0x27
    34fc:	78 a5       	ldd	r23, Y+40	; 0x28
    34fe:	89 a5       	ldd	r24, Y+41	; 0x29
    3500:	9a a5       	ldd	r25, Y+42	; 0x2a
    3502:	20 e0       	ldi	r18, 0x00	; 0
    3504:	30 e0       	ldi	r19, 0x00	; 0
    3506:	40 e2       	ldi	r20, 0x20	; 32
    3508:	51 e4       	ldi	r21, 0x41	; 65
    350a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    350e:	dc 01       	movw	r26, r24
    3510:	cb 01       	movw	r24, r22
    3512:	bc 01       	movw	r22, r24
    3514:	cd 01       	movw	r24, r26
    3516:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    351a:	dc 01       	movw	r26, r24
    351c:	cb 01       	movw	r24, r22
    351e:	9a a3       	std	Y+34, r25	; 0x22
    3520:	89 a3       	std	Y+33, r24	; 0x21
    3522:	0f c0       	rjmp	.+30     	; 0x3542 <GOTOY+0x3fc>
    3524:	80 e9       	ldi	r24, 0x90	; 144
    3526:	91 e0       	ldi	r25, 0x01	; 1
    3528:	98 a3       	std	Y+32, r25	; 0x20
    352a:	8f 8f       	std	Y+31, r24	; 0x1f
    352c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    352e:	98 a1       	ldd	r25, Y+32	; 0x20
    3530:	01 97       	sbiw	r24, 0x01	; 1
    3532:	f1 f7       	brne	.-4      	; 0x3530 <GOTOY+0x3ea>
    3534:	98 a3       	std	Y+32, r25	; 0x20
    3536:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3538:	89 a1       	ldd	r24, Y+33	; 0x21
    353a:	9a a1       	ldd	r25, Y+34	; 0x22
    353c:	01 97       	sbiw	r24, 0x01	; 1
    353e:	9a a3       	std	Y+34, r25	; 0x22
    3540:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3542:	89 a1       	ldd	r24, Y+33	; 0x21
    3544:	9a a1       	ldd	r25, Y+34	; 0x22
    3546:	00 97       	sbiw	r24, 0x00	; 0
    3548:	69 f7       	brne	.-38     	; 0x3524 <GOTOY+0x3de>
    354a:	14 c0       	rjmp	.+40     	; 0x3574 <GOTOY+0x42e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    354c:	6b a1       	ldd	r22, Y+35	; 0x23
    354e:	7c a1       	ldd	r23, Y+36	; 0x24
    3550:	8d a1       	ldd	r24, Y+37	; 0x25
    3552:	9e a1       	ldd	r25, Y+38	; 0x26
    3554:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3558:	dc 01       	movw	r26, r24
    355a:	cb 01       	movw	r24, r22
    355c:	9a a3       	std	Y+34, r25	; 0x22
    355e:	89 a3       	std	Y+33, r24	; 0x21
    3560:	89 a1       	ldd	r24, Y+33	; 0x21
    3562:	9a a1       	ldd	r25, Y+34	; 0x22
    3564:	9e 8f       	std	Y+30, r25	; 0x1e
    3566:	8d 8f       	std	Y+29, r24	; 0x1d
    3568:	8d 8d       	ldd	r24, Y+29	; 0x1d
    356a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    356c:	01 97       	sbiw	r24, 0x01	; 1
    356e:	f1 f7       	brne	.-4      	; 0x356c <GOTOY+0x426>
    3570:	9e 8f       	std	Y+30, r25	; 0x1e
    3572:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(1);
			DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_HIGH);
    3574:	80 e0       	ldi	r24, 0x00	; 0
    3576:	67 e0       	ldi	r22, 0x07	; 7
    3578:	41 e0       	ldi	r20, 0x01	; 1
    357a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>





			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,(((Copy_u8Address-64) >> 0) & 1));
    357e:	fe 01       	movw	r30, r28
    3580:	e9 5b       	subi	r30, 0xB9	; 185
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	80 81       	ld	r24, Z
    3586:	80 54       	subi	r24, 0x40	; 64
    3588:	98 2f       	mov	r25, r24
    358a:	91 70       	andi	r25, 0x01	; 1
    358c:	81 e0       	ldi	r24, 0x01	; 1
    358e:	60 e0       	ldi	r22, 0x00	; 0
    3590:	49 2f       	mov	r20, r25
    3592:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,(((Copy_u8Address-64) >> 1) & 1));
    3596:	fe 01       	movw	r30, r28
    3598:	e9 5b       	subi	r30, 0xB9	; 185
    359a:	ff 4f       	sbci	r31, 0xFF	; 255
    359c:	80 81       	ld	r24, Z
    359e:	88 2f       	mov	r24, r24
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	80 54       	subi	r24, 0x40	; 64
    35a4:	90 40       	sbci	r25, 0x00	; 0
    35a6:	95 95       	asr	r25
    35a8:	87 95       	ror	r24
    35aa:	98 2f       	mov	r25, r24
    35ac:	91 70       	andi	r25, 0x01	; 1
    35ae:	81 e0       	ldi	r24, 0x01	; 1
    35b0:	61 e0       	ldi	r22, 0x01	; 1
    35b2:	49 2f       	mov	r20, r25
    35b4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,(((Copy_u8Address-64) >> 2) & 1));
    35b8:	fe 01       	movw	r30, r28
    35ba:	e9 5b       	subi	r30, 0xB9	; 185
    35bc:	ff 4f       	sbci	r31, 0xFF	; 255
    35be:	80 81       	ld	r24, Z
    35c0:	88 2f       	mov	r24, r24
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	80 54       	subi	r24, 0x40	; 64
    35c6:	90 40       	sbci	r25, 0x00	; 0
    35c8:	95 95       	asr	r25
    35ca:	87 95       	ror	r24
    35cc:	95 95       	asr	r25
    35ce:	87 95       	ror	r24
    35d0:	98 2f       	mov	r25, r24
    35d2:	91 70       	andi	r25, 0x01	; 1
    35d4:	81 e0       	ldi	r24, 0x01	; 1
    35d6:	62 e0       	ldi	r22, 0x02	; 2
    35d8:	49 2f       	mov	r20, r25
    35da:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,(((Copy_u8Address-64) >> 3) & 1));
    35de:	fe 01       	movw	r30, r28
    35e0:	e9 5b       	subi	r30, 0xB9	; 185
    35e2:	ff 4f       	sbci	r31, 0xFF	; 255
    35e4:	80 81       	ld	r24, Z
    35e6:	88 2f       	mov	r24, r24
    35e8:	90 e0       	ldi	r25, 0x00	; 0
    35ea:	80 54       	subi	r24, 0x40	; 64
    35ec:	90 40       	sbci	r25, 0x00	; 0
    35ee:	95 95       	asr	r25
    35f0:	87 95       	ror	r24
    35f2:	95 95       	asr	r25
    35f4:	87 95       	ror	r24
    35f6:	95 95       	asr	r25
    35f8:	87 95       	ror	r24
    35fa:	98 2f       	mov	r25, r24
    35fc:	91 70       	andi	r25, 0x01	; 1
    35fe:	81 e0       	ldi	r24, 0x01	; 1
    3600:	63 e0       	ldi	r22, 0x03	; 3
    3602:	49 2f       	mov	r20, r25
    3604:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,(((Copy_u8Address-64) >> 4) & 1));
    3608:	fe 01       	movw	r30, r28
    360a:	e9 5b       	subi	r30, 0xB9	; 185
    360c:	ff 4f       	sbci	r31, 0xFF	; 255
    360e:	80 81       	ld	r24, Z
    3610:	88 2f       	mov	r24, r24
    3612:	90 e0       	ldi	r25, 0x00	; 0
    3614:	80 54       	subi	r24, 0x40	; 64
    3616:	90 40       	sbci	r25, 0x00	; 0
    3618:	95 95       	asr	r25
    361a:	87 95       	ror	r24
    361c:	95 95       	asr	r25
    361e:	87 95       	ror	r24
    3620:	95 95       	asr	r25
    3622:	87 95       	ror	r24
    3624:	95 95       	asr	r25
    3626:	87 95       	ror	r24
    3628:	98 2f       	mov	r25, r24
    362a:	91 70       	andi	r25, 0x01	; 1
    362c:	81 e0       	ldi	r24, 0x01	; 1
    362e:	64 e0       	ldi	r22, 0x04	; 4
    3630:	49 2f       	mov	r20, r25
    3632:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,(((Copy_u8Address-64) >> 5) & 1));
    3636:	fe 01       	movw	r30, r28
    3638:	e9 5b       	subi	r30, 0xB9	; 185
    363a:	ff 4f       	sbci	r31, 0xFF	; 255
    363c:	80 81       	ld	r24, Z
    363e:	88 2f       	mov	r24, r24
    3640:	90 e0       	ldi	r25, 0x00	; 0
    3642:	80 54       	subi	r24, 0x40	; 64
    3644:	90 40       	sbci	r25, 0x00	; 0
    3646:	95 95       	asr	r25
    3648:	87 95       	ror	r24
    364a:	95 95       	asr	r25
    364c:	87 95       	ror	r24
    364e:	95 95       	asr	r25
    3650:	87 95       	ror	r24
    3652:	95 95       	asr	r25
    3654:	87 95       	ror	r24
    3656:	95 95       	asr	r25
    3658:	87 95       	ror	r24
    365a:	98 2f       	mov	r25, r24
    365c:	91 70       	andi	r25, 0x01	; 1
    365e:	81 e0       	ldi	r24, 0x01	; 1
    3660:	65 e0       	ldi	r22, 0x05	; 5
    3662:	49 2f       	mov	r20, r25
    3664:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_HIGH);
    3668:	81 e0       	ldi	r24, 0x01	; 1
    366a:	66 e0       	ldi	r22, 0x06	; 6
    366c:	41 e0       	ldi	r20, 0x01	; 1
    366e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
			DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_LOW);
    3672:	81 e0       	ldi	r24, 0x01	; 1
    3674:	67 e0       	ldi	r22, 0x07	; 7
    3676:	40 e0       	ldi	r20, 0x00	; 0
    3678:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    367c:	80 e0       	ldi	r24, 0x00	; 0
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	a0 e0       	ldi	r26, 0x00	; 0
    3682:	b0 e4       	ldi	r27, 0x40	; 64
    3684:	89 8f       	std	Y+25, r24	; 0x19
    3686:	9a 8f       	std	Y+26, r25	; 0x1a
    3688:	ab 8f       	std	Y+27, r26	; 0x1b
    368a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    368c:	69 8d       	ldd	r22, Y+25	; 0x19
    368e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3690:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3692:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3694:	20 e0       	ldi	r18, 0x00	; 0
    3696:	30 e0       	ldi	r19, 0x00	; 0
    3698:	4a e7       	ldi	r20, 0x7A	; 122
    369a:	55 e4       	ldi	r21, 0x45	; 69
    369c:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    36a0:	dc 01       	movw	r26, r24
    36a2:	cb 01       	movw	r24, r22
    36a4:	8d 8b       	std	Y+21, r24	; 0x15
    36a6:	9e 8b       	std	Y+22, r25	; 0x16
    36a8:	af 8b       	std	Y+23, r26	; 0x17
    36aa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    36ac:	6d 89       	ldd	r22, Y+21	; 0x15
    36ae:	7e 89       	ldd	r23, Y+22	; 0x16
    36b0:	8f 89       	ldd	r24, Y+23	; 0x17
    36b2:	98 8d       	ldd	r25, Y+24	; 0x18
    36b4:	20 e0       	ldi	r18, 0x00	; 0
    36b6:	30 e0       	ldi	r19, 0x00	; 0
    36b8:	40 e8       	ldi	r20, 0x80	; 128
    36ba:	5f e3       	ldi	r21, 0x3F	; 63
    36bc:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    36c0:	88 23       	and	r24, r24
    36c2:	2c f4       	brge	.+10     	; 0x36ce <GOTOY+0x588>
		__ticks = 1;
    36c4:	81 e0       	ldi	r24, 0x01	; 1
    36c6:	90 e0       	ldi	r25, 0x00	; 0
    36c8:	9c 8b       	std	Y+20, r25	; 0x14
    36ca:	8b 8b       	std	Y+19, r24	; 0x13
    36cc:	3f c0       	rjmp	.+126    	; 0x374c <GOTOY+0x606>
	else if (__tmp > 65535)
    36ce:	6d 89       	ldd	r22, Y+21	; 0x15
    36d0:	7e 89       	ldd	r23, Y+22	; 0x16
    36d2:	8f 89       	ldd	r24, Y+23	; 0x17
    36d4:	98 8d       	ldd	r25, Y+24	; 0x18
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	3f ef       	ldi	r19, 0xFF	; 255
    36da:	4f e7       	ldi	r20, 0x7F	; 127
    36dc:	57 e4       	ldi	r21, 0x47	; 71
    36de:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    36e2:	18 16       	cp	r1, r24
    36e4:	4c f5       	brge	.+82     	; 0x3738 <GOTOY+0x5f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36e6:	69 8d       	ldd	r22, Y+25	; 0x19
    36e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36ee:	20 e0       	ldi	r18, 0x00	; 0
    36f0:	30 e0       	ldi	r19, 0x00	; 0
    36f2:	40 e2       	ldi	r20, 0x20	; 32
    36f4:	51 e4       	ldi	r21, 0x41	; 65
    36f6:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    36fa:	dc 01       	movw	r26, r24
    36fc:	cb 01       	movw	r24, r22
    36fe:	bc 01       	movw	r22, r24
    3700:	cd 01       	movw	r24, r26
    3702:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3706:	dc 01       	movw	r26, r24
    3708:	cb 01       	movw	r24, r22
    370a:	9c 8b       	std	Y+20, r25	; 0x14
    370c:	8b 8b       	std	Y+19, r24	; 0x13
    370e:	0f c0       	rjmp	.+30     	; 0x372e <GOTOY+0x5e8>
    3710:	80 e9       	ldi	r24, 0x90	; 144
    3712:	91 e0       	ldi	r25, 0x01	; 1
    3714:	9a 8b       	std	Y+18, r25	; 0x12
    3716:	89 8b       	std	Y+17, r24	; 0x11
    3718:	89 89       	ldd	r24, Y+17	; 0x11
    371a:	9a 89       	ldd	r25, Y+18	; 0x12
    371c:	01 97       	sbiw	r24, 0x01	; 1
    371e:	f1 f7       	brne	.-4      	; 0x371c <GOTOY+0x5d6>
    3720:	9a 8b       	std	Y+18, r25	; 0x12
    3722:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3724:	8b 89       	ldd	r24, Y+19	; 0x13
    3726:	9c 89       	ldd	r25, Y+20	; 0x14
    3728:	01 97       	sbiw	r24, 0x01	; 1
    372a:	9c 8b       	std	Y+20, r25	; 0x14
    372c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    372e:	8b 89       	ldd	r24, Y+19	; 0x13
    3730:	9c 89       	ldd	r25, Y+20	; 0x14
    3732:	00 97       	sbiw	r24, 0x00	; 0
    3734:	69 f7       	brne	.-38     	; 0x3710 <GOTOY+0x5ca>
    3736:	14 c0       	rjmp	.+40     	; 0x3760 <GOTOY+0x61a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3738:	6d 89       	ldd	r22, Y+21	; 0x15
    373a:	7e 89       	ldd	r23, Y+22	; 0x16
    373c:	8f 89       	ldd	r24, Y+23	; 0x17
    373e:	98 8d       	ldd	r25, Y+24	; 0x18
    3740:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	9c 8b       	std	Y+20, r25	; 0x14
    374a:	8b 8b       	std	Y+19, r24	; 0x13
    374c:	8b 89       	ldd	r24, Y+19	; 0x13
    374e:	9c 89       	ldd	r25, Y+20	; 0x14
    3750:	98 8b       	std	Y+16, r25	; 0x10
    3752:	8f 87       	std	Y+15, r24	; 0x0f
    3754:	8f 85       	ldd	r24, Y+15	; 0x0f
    3756:	98 89       	ldd	r25, Y+16	; 0x10
    3758:	01 97       	sbiw	r24, 0x01	; 1
    375a:	f1 f7       	brne	.-4      	; 0x3758 <GOTOY+0x612>
    375c:	98 8b       	std	Y+16, r25	; 0x10
    375e:	8f 87       	std	Y+15, r24	; 0x0f



			_delay_ms(2);
			    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    3760:	80 e0       	ldi	r24, 0x00	; 0
    3762:	62 e0       	ldi	r22, 0x02	; 2
    3764:	41 e0       	ldi	r20, 0x01	; 1
    3766:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    376a:	80 e0       	ldi	r24, 0x00	; 0
    376c:	90 e0       	ldi	r25, 0x00	; 0
    376e:	a0 e8       	ldi	r26, 0x80	; 128
    3770:	bf e3       	ldi	r27, 0x3F	; 63
    3772:	8b 87       	std	Y+11, r24	; 0x0b
    3774:	9c 87       	std	Y+12, r25	; 0x0c
    3776:	ad 87       	std	Y+13, r26	; 0x0d
    3778:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    377a:	6b 85       	ldd	r22, Y+11	; 0x0b
    377c:	7c 85       	ldd	r23, Y+12	; 0x0c
    377e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3780:	9e 85       	ldd	r25, Y+14	; 0x0e
    3782:	20 e0       	ldi	r18, 0x00	; 0
    3784:	30 e0       	ldi	r19, 0x00	; 0
    3786:	4a e7       	ldi	r20, 0x7A	; 122
    3788:	55 e4       	ldi	r21, 0x45	; 69
    378a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    378e:	dc 01       	movw	r26, r24
    3790:	cb 01       	movw	r24, r22
    3792:	8f 83       	std	Y+7, r24	; 0x07
    3794:	98 87       	std	Y+8, r25	; 0x08
    3796:	a9 87       	std	Y+9, r26	; 0x09
    3798:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    379a:	6f 81       	ldd	r22, Y+7	; 0x07
    379c:	78 85       	ldd	r23, Y+8	; 0x08
    379e:	89 85       	ldd	r24, Y+9	; 0x09
    37a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    37a2:	20 e0       	ldi	r18, 0x00	; 0
    37a4:	30 e0       	ldi	r19, 0x00	; 0
    37a6:	40 e8       	ldi	r20, 0x80	; 128
    37a8:	5f e3       	ldi	r21, 0x3F	; 63
    37aa:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    37ae:	88 23       	and	r24, r24
    37b0:	2c f4       	brge	.+10     	; 0x37bc <GOTOY+0x676>
		__ticks = 1;
    37b2:	81 e0       	ldi	r24, 0x01	; 1
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	9e 83       	std	Y+6, r25	; 0x06
    37b8:	8d 83       	std	Y+5, r24	; 0x05
    37ba:	3f c0       	rjmp	.+126    	; 0x383a <GOTOY+0x6f4>
	else if (__tmp > 65535)
    37bc:	6f 81       	ldd	r22, Y+7	; 0x07
    37be:	78 85       	ldd	r23, Y+8	; 0x08
    37c0:	89 85       	ldd	r24, Y+9	; 0x09
    37c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    37c4:	20 e0       	ldi	r18, 0x00	; 0
    37c6:	3f ef       	ldi	r19, 0xFF	; 255
    37c8:	4f e7       	ldi	r20, 0x7F	; 127
    37ca:	57 e4       	ldi	r21, 0x47	; 71
    37cc:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    37d0:	18 16       	cp	r1, r24
    37d2:	4c f5       	brge	.+82     	; 0x3826 <GOTOY+0x6e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    37d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    37d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    37da:	9e 85       	ldd	r25, Y+14	; 0x0e
    37dc:	20 e0       	ldi	r18, 0x00	; 0
    37de:	30 e0       	ldi	r19, 0x00	; 0
    37e0:	40 e2       	ldi	r20, 0x20	; 32
    37e2:	51 e4       	ldi	r21, 0x41	; 65
    37e4:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    37e8:	dc 01       	movw	r26, r24
    37ea:	cb 01       	movw	r24, r22
    37ec:	bc 01       	movw	r22, r24
    37ee:	cd 01       	movw	r24, r26
    37f0:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    37f4:	dc 01       	movw	r26, r24
    37f6:	cb 01       	movw	r24, r22
    37f8:	9e 83       	std	Y+6, r25	; 0x06
    37fa:	8d 83       	std	Y+5, r24	; 0x05
    37fc:	0f c0       	rjmp	.+30     	; 0x381c <GOTOY+0x6d6>
    37fe:	80 e9       	ldi	r24, 0x90	; 144
    3800:	91 e0       	ldi	r25, 0x01	; 1
    3802:	9c 83       	std	Y+4, r25	; 0x04
    3804:	8b 83       	std	Y+3, r24	; 0x03
    3806:	8b 81       	ldd	r24, Y+3	; 0x03
    3808:	9c 81       	ldd	r25, Y+4	; 0x04
    380a:	01 97       	sbiw	r24, 0x01	; 1
    380c:	f1 f7       	brne	.-4      	; 0x380a <GOTOY+0x6c4>
    380e:	9c 83       	std	Y+4, r25	; 0x04
    3810:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3812:	8d 81       	ldd	r24, Y+5	; 0x05
    3814:	9e 81       	ldd	r25, Y+6	; 0x06
    3816:	01 97       	sbiw	r24, 0x01	; 1
    3818:	9e 83       	std	Y+6, r25	; 0x06
    381a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    381c:	8d 81       	ldd	r24, Y+5	; 0x05
    381e:	9e 81       	ldd	r25, Y+6	; 0x06
    3820:	00 97       	sbiw	r24, 0x00	; 0
    3822:	69 f7       	brne	.-38     	; 0x37fe <GOTOY+0x6b8>
    3824:	14 c0       	rjmp	.+40     	; 0x384e <GOTOY+0x708>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3826:	6f 81       	ldd	r22, Y+7	; 0x07
    3828:	78 85       	ldd	r23, Y+8	; 0x08
    382a:	89 85       	ldd	r24, Y+9	; 0x09
    382c:	9a 85       	ldd	r25, Y+10	; 0x0a
    382e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3832:	dc 01       	movw	r26, r24
    3834:	cb 01       	movw	r24, r22
    3836:	9e 83       	std	Y+6, r25	; 0x06
    3838:	8d 83       	std	Y+5, r24	; 0x05
    383a:	8d 81       	ldd	r24, Y+5	; 0x05
    383c:	9e 81       	ldd	r25, Y+6	; 0x06
    383e:	9a 83       	std	Y+2, r25	; 0x02
    3840:	89 83       	std	Y+1, r24	; 0x01
    3842:	89 81       	ldd	r24, Y+1	; 0x01
    3844:	9a 81       	ldd	r25, Y+2	; 0x02
    3846:	01 97       	sbiw	r24, 0x01	; 1
    3848:	f1 f7       	brne	.-4      	; 0x3846 <GOTOY+0x700>
    384a:	9a 83       	std	Y+2, r25	; 0x02
    384c:	89 83       	std	Y+1, r24	; 0x01
			    _delay_ms(1);
			    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    384e:	80 e0       	ldi	r24, 0x00	; 0
    3850:	62 e0       	ldi	r22, 0x02	; 2
    3852:	40 e0       	ldi	r20, 0x00	; 0
    3854:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>


		}
}
    3858:	c8 5b       	subi	r28, 0xB8	; 184
    385a:	df 4f       	sbci	r29, 0xFF	; 255
    385c:	0f b6       	in	r0, 0x3f	; 63
    385e:	f8 94       	cli
    3860:	de bf       	out	0x3e, r29	; 62
    3862:	0f be       	out	0x3f, r0	; 63
    3864:	cd bf       	out	0x3d, r28	; 61
    3866:	cf 91       	pop	r28
    3868:	df 91       	pop	r29
    386a:	1f 91       	pop	r17
    386c:	0f 91       	pop	r16
    386e:	08 95       	ret

00003870 <getPage>:

static ES_t getPage(void){
    3870:	df 93       	push	r29
    3872:	cf 93       	push	r28
    3874:	cd b7       	in	r28, 0x3d	; 61
    3876:	de b7       	in	r29, 0x3e	; 62
	return LOCAL_u8Page;
    3878:	80 91 b4 01 	lds	r24, 0x01B4
}
    387c:	cf 91       	pop	r28
    387e:	df 91       	pop	r29
    3880:	08 95       	ret

00003882 <getAddress>:

static ES_t getAddress(void){
    3882:	df 93       	push	r29
    3884:	cf 93       	push	r28
    3886:	cd b7       	in	r28, 0x3d	; 61
    3888:	de b7       	in	r29, 0x3e	; 62
	return LOCAL_u8Address;
    388a:	80 91 b5 01 	lds	r24, 0x01B5
}
    388e:	cf 91       	pop	r28
    3890:	df 91       	pop	r29
    3892:	08 95       	ret

00003894 <GLCD_enuInit>:

ES_t GLCD_enuInit() {
    3894:	df 93       	push	r29
    3896:	cf 93       	push	r28
    3898:	cd b7       	in	r28, 0x3d	; 61
    389a:	de b7       	in	r29, 0x3e	; 62
    389c:	ea 97       	sbiw	r28, 0x3a	; 58
    389e:	0f b6       	in	r0, 0x3f	; 63
    38a0:	f8 94       	cli
    38a2:	de bf       	out	0x3e, r29	; 62
    38a4:	0f be       	out	0x3f, r0	; 63
    38a6:	cd bf       	out	0x3d, r28	; 61
    ES_t Local_enuErrorState = ES_NOK;
    38a8:	81 e0       	ldi	r24, 0x01	; 1
    38aa:	89 af       	std	Y+57, r24	; 0x39
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    _delay_ms(1);
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);

    #elif GLCD_MODE == BOTH
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_OUTPUT);
    38ac:	80 e0       	ldi	r24, 0x00	; 0
    38ae:	63 e0       	ldi	r22, 0x03	; 3
    38b0:	41 e0       	ldi	r20, 0x01	; 1
    38b2:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_OUTPUT);
    38b6:	80 e0       	ldi	r24, 0x00	; 0
    38b8:	67 e0       	ldi	r22, 0x07	; 7
    38ba:	41 e0       	ldi	r20, 0x01	; 1
    38bc:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_RS, DIO_OUTPUT);
    38c0:	80 e0       	ldi	r24, 0x00	; 0
    38c2:	65 e0       	ldi	r22, 0x05	; 5
    38c4:	41 e0       	ldi	r20, 0x01	; 1
    38c6:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_RW, DIO_OUTPUT);
    38ca:	80 e0       	ldi	r24, 0x00	; 0
    38cc:	61 e0       	ldi	r22, 0x01	; 1
    38ce:	41 e0       	ldi	r20, 0x01	; 1
    38d0:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_OUTPUT);
    38d4:	80 e0       	ldi	r24, 0x00	; 0
    38d6:	62 e0       	ldi	r22, 0x02	; 2
    38d8:	41 e0       	ldi	r20, 0x01	; 1
    38da:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_A, GLCD_PIN_RESET, DIO_OUTPUT);
    38de:	80 e0       	ldi	r24, 0x00	; 0
    38e0:	60 e0       	ldi	r22, 0x00	; 0
    38e2:	41 e0       	ldi	r20, 0x01	; 1
    38e4:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>

    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    38e8:	80 e0       	ldi	r24, 0x00	; 0
    38ea:	65 e0       	ldi	r22, 0x05	; 5
    38ec:	40 e0       	ldi	r20, 0x00	; 0
    38ee:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    38f2:	80 e0       	ldi	r24, 0x00	; 0
    38f4:	61 e0       	ldi	r22, 0x01	; 1
    38f6:	40 e0       	ldi	r20, 0x00	; 0
    38f8:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    38fc:	80 e0       	ldi	r24, 0x00	; 0
    38fe:	90 e0       	ldi	r25, 0x00	; 0
    3900:	a0 ea       	ldi	r26, 0xA0	; 160
    3902:	b0 e4       	ldi	r27, 0x40	; 64
    3904:	8d ab       	std	Y+53, r24	; 0x35
    3906:	9e ab       	std	Y+54, r25	; 0x36
    3908:	af ab       	std	Y+55, r26	; 0x37
    390a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    390c:	6d a9       	ldd	r22, Y+53	; 0x35
    390e:	7e a9       	ldd	r23, Y+54	; 0x36
    3910:	8f a9       	ldd	r24, Y+55	; 0x37
    3912:	98 ad       	ldd	r25, Y+56	; 0x38
    3914:	20 e0       	ldi	r18, 0x00	; 0
    3916:	30 e0       	ldi	r19, 0x00	; 0
    3918:	4a e7       	ldi	r20, 0x7A	; 122
    391a:	55 e4       	ldi	r21, 0x45	; 69
    391c:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3920:	dc 01       	movw	r26, r24
    3922:	cb 01       	movw	r24, r22
    3924:	89 ab       	std	Y+49, r24	; 0x31
    3926:	9a ab       	std	Y+50, r25	; 0x32
    3928:	ab ab       	std	Y+51, r26	; 0x33
    392a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    392c:	69 a9       	ldd	r22, Y+49	; 0x31
    392e:	7a a9       	ldd	r23, Y+50	; 0x32
    3930:	8b a9       	ldd	r24, Y+51	; 0x33
    3932:	9c a9       	ldd	r25, Y+52	; 0x34
    3934:	20 e0       	ldi	r18, 0x00	; 0
    3936:	30 e0       	ldi	r19, 0x00	; 0
    3938:	40 e8       	ldi	r20, 0x80	; 128
    393a:	5f e3       	ldi	r21, 0x3F	; 63
    393c:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3940:	88 23       	and	r24, r24
    3942:	2c f4       	brge	.+10     	; 0x394e <GLCD_enuInit+0xba>
		__ticks = 1;
    3944:	81 e0       	ldi	r24, 0x01	; 1
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	98 ab       	std	Y+48, r25	; 0x30
    394a:	8f a7       	std	Y+47, r24	; 0x2f
    394c:	3f c0       	rjmp	.+126    	; 0x39cc <GLCD_enuInit+0x138>
	else if (__tmp > 65535)
    394e:	69 a9       	ldd	r22, Y+49	; 0x31
    3950:	7a a9       	ldd	r23, Y+50	; 0x32
    3952:	8b a9       	ldd	r24, Y+51	; 0x33
    3954:	9c a9       	ldd	r25, Y+52	; 0x34
    3956:	20 e0       	ldi	r18, 0x00	; 0
    3958:	3f ef       	ldi	r19, 0xFF	; 255
    395a:	4f e7       	ldi	r20, 0x7F	; 127
    395c:	57 e4       	ldi	r21, 0x47	; 71
    395e:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3962:	18 16       	cp	r1, r24
    3964:	4c f5       	brge	.+82     	; 0x39b8 <GLCD_enuInit+0x124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3966:	6d a9       	ldd	r22, Y+53	; 0x35
    3968:	7e a9       	ldd	r23, Y+54	; 0x36
    396a:	8f a9       	ldd	r24, Y+55	; 0x37
    396c:	98 ad       	ldd	r25, Y+56	; 0x38
    396e:	20 e0       	ldi	r18, 0x00	; 0
    3970:	30 e0       	ldi	r19, 0x00	; 0
    3972:	40 e2       	ldi	r20, 0x20	; 32
    3974:	51 e4       	ldi	r21, 0x41	; 65
    3976:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    397a:	dc 01       	movw	r26, r24
    397c:	cb 01       	movw	r24, r22
    397e:	bc 01       	movw	r22, r24
    3980:	cd 01       	movw	r24, r26
    3982:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3986:	dc 01       	movw	r26, r24
    3988:	cb 01       	movw	r24, r22
    398a:	98 ab       	std	Y+48, r25	; 0x30
    398c:	8f a7       	std	Y+47, r24	; 0x2f
    398e:	0f c0       	rjmp	.+30     	; 0x39ae <GLCD_enuInit+0x11a>
    3990:	80 e9       	ldi	r24, 0x90	; 144
    3992:	91 e0       	ldi	r25, 0x01	; 1
    3994:	9e a7       	std	Y+46, r25	; 0x2e
    3996:	8d a7       	std	Y+45, r24	; 0x2d
    3998:	8d a5       	ldd	r24, Y+45	; 0x2d
    399a:	9e a5       	ldd	r25, Y+46	; 0x2e
    399c:	01 97       	sbiw	r24, 0x01	; 1
    399e:	f1 f7       	brne	.-4      	; 0x399c <GLCD_enuInit+0x108>
    39a0:	9e a7       	std	Y+46, r25	; 0x2e
    39a2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    39a6:	98 a9       	ldd	r25, Y+48	; 0x30
    39a8:	01 97       	sbiw	r24, 0x01	; 1
    39aa:	98 ab       	std	Y+48, r25	; 0x30
    39ac:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ae:	8f a5       	ldd	r24, Y+47	; 0x2f
    39b0:	98 a9       	ldd	r25, Y+48	; 0x30
    39b2:	00 97       	sbiw	r24, 0x00	; 0
    39b4:	69 f7       	brne	.-38     	; 0x3990 <GLCD_enuInit+0xfc>
    39b6:	14 c0       	rjmp	.+40     	; 0x39e0 <GLCD_enuInit+0x14c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39b8:	69 a9       	ldd	r22, Y+49	; 0x31
    39ba:	7a a9       	ldd	r23, Y+50	; 0x32
    39bc:	8b a9       	ldd	r24, Y+51	; 0x33
    39be:	9c a9       	ldd	r25, Y+52	; 0x34
    39c0:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    39c4:	dc 01       	movw	r26, r24
    39c6:	cb 01       	movw	r24, r22
    39c8:	98 ab       	std	Y+48, r25	; 0x30
    39ca:	8f a7       	std	Y+47, r24	; 0x2f
    39cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    39ce:	98 a9       	ldd	r25, Y+48	; 0x30
    39d0:	9c a7       	std	Y+44, r25	; 0x2c
    39d2:	8b a7       	std	Y+43, r24	; 0x2b
    39d4:	8b a5       	ldd	r24, Y+43	; 0x2b
    39d6:	9c a5       	ldd	r25, Y+44	; 0x2c
    39d8:	01 97       	sbiw	r24, 0x01	; 1
    39da:	f1 f7       	brne	.-4      	; 0x39d8 <GLCD_enuInit+0x144>
    39dc:	9c a7       	std	Y+44, r25	; 0x2c
    39de:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(5);
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RESET, DIO_LOW);
    39e0:	80 e0       	ldi	r24, 0x00	; 0
    39e2:	60 e0       	ldi	r22, 0x00	; 0
    39e4:	40 e0       	ldi	r20, 0x00	; 0
    39e6:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    39ea:	80 e0       	ldi	r24, 0x00	; 0
    39ec:	90 e0       	ldi	r25, 0x00	; 0
    39ee:	a0 ea       	ldi	r26, 0xA0	; 160
    39f0:	b0 e4       	ldi	r27, 0x40	; 64
    39f2:	8f a3       	std	Y+39, r24	; 0x27
    39f4:	98 a7       	std	Y+40, r25	; 0x28
    39f6:	a9 a7       	std	Y+41, r26	; 0x29
    39f8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39fa:	6f a1       	ldd	r22, Y+39	; 0x27
    39fc:	78 a5       	ldd	r23, Y+40	; 0x28
    39fe:	89 a5       	ldd	r24, Y+41	; 0x29
    3a00:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a02:	20 e0       	ldi	r18, 0x00	; 0
    3a04:	30 e0       	ldi	r19, 0x00	; 0
    3a06:	4a e7       	ldi	r20, 0x7A	; 122
    3a08:	55 e4       	ldi	r21, 0x45	; 69
    3a0a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3a0e:	dc 01       	movw	r26, r24
    3a10:	cb 01       	movw	r24, r22
    3a12:	8b a3       	std	Y+35, r24	; 0x23
    3a14:	9c a3       	std	Y+36, r25	; 0x24
    3a16:	ad a3       	std	Y+37, r26	; 0x25
    3a18:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3a1a:	6b a1       	ldd	r22, Y+35	; 0x23
    3a1c:	7c a1       	ldd	r23, Y+36	; 0x24
    3a1e:	8d a1       	ldd	r24, Y+37	; 0x25
    3a20:	9e a1       	ldd	r25, Y+38	; 0x26
    3a22:	20 e0       	ldi	r18, 0x00	; 0
    3a24:	30 e0       	ldi	r19, 0x00	; 0
    3a26:	40 e8       	ldi	r20, 0x80	; 128
    3a28:	5f e3       	ldi	r21, 0x3F	; 63
    3a2a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3a2e:	88 23       	and	r24, r24
    3a30:	2c f4       	brge	.+10     	; 0x3a3c <GLCD_enuInit+0x1a8>
		__ticks = 1;
    3a32:	81 e0       	ldi	r24, 0x01	; 1
    3a34:	90 e0       	ldi	r25, 0x00	; 0
    3a36:	9a a3       	std	Y+34, r25	; 0x22
    3a38:	89 a3       	std	Y+33, r24	; 0x21
    3a3a:	3f c0       	rjmp	.+126    	; 0x3aba <GLCD_enuInit+0x226>
	else if (__tmp > 65535)
    3a3c:	6b a1       	ldd	r22, Y+35	; 0x23
    3a3e:	7c a1       	ldd	r23, Y+36	; 0x24
    3a40:	8d a1       	ldd	r24, Y+37	; 0x25
    3a42:	9e a1       	ldd	r25, Y+38	; 0x26
    3a44:	20 e0       	ldi	r18, 0x00	; 0
    3a46:	3f ef       	ldi	r19, 0xFF	; 255
    3a48:	4f e7       	ldi	r20, 0x7F	; 127
    3a4a:	57 e4       	ldi	r21, 0x47	; 71
    3a4c:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3a50:	18 16       	cp	r1, r24
    3a52:	4c f5       	brge	.+82     	; 0x3aa6 <GLCD_enuInit+0x212>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a54:	6f a1       	ldd	r22, Y+39	; 0x27
    3a56:	78 a5       	ldd	r23, Y+40	; 0x28
    3a58:	89 a5       	ldd	r24, Y+41	; 0x29
    3a5a:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a5c:	20 e0       	ldi	r18, 0x00	; 0
    3a5e:	30 e0       	ldi	r19, 0x00	; 0
    3a60:	40 e2       	ldi	r20, 0x20	; 32
    3a62:	51 e4       	ldi	r21, 0x41	; 65
    3a64:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3a68:	dc 01       	movw	r26, r24
    3a6a:	cb 01       	movw	r24, r22
    3a6c:	bc 01       	movw	r22, r24
    3a6e:	cd 01       	movw	r24, r26
    3a70:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3a74:	dc 01       	movw	r26, r24
    3a76:	cb 01       	movw	r24, r22
    3a78:	9a a3       	std	Y+34, r25	; 0x22
    3a7a:	89 a3       	std	Y+33, r24	; 0x21
    3a7c:	0f c0       	rjmp	.+30     	; 0x3a9c <GLCD_enuInit+0x208>
    3a7e:	80 e9       	ldi	r24, 0x90	; 144
    3a80:	91 e0       	ldi	r25, 0x01	; 1
    3a82:	98 a3       	std	Y+32, r25	; 0x20
    3a84:	8f 8f       	std	Y+31, r24	; 0x1f
    3a86:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3a88:	98 a1       	ldd	r25, Y+32	; 0x20
    3a8a:	01 97       	sbiw	r24, 0x01	; 1
    3a8c:	f1 f7       	brne	.-4      	; 0x3a8a <GLCD_enuInit+0x1f6>
    3a8e:	98 a3       	std	Y+32, r25	; 0x20
    3a90:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a92:	89 a1       	ldd	r24, Y+33	; 0x21
    3a94:	9a a1       	ldd	r25, Y+34	; 0x22
    3a96:	01 97       	sbiw	r24, 0x01	; 1
    3a98:	9a a3       	std	Y+34, r25	; 0x22
    3a9a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a9c:	89 a1       	ldd	r24, Y+33	; 0x21
    3a9e:	9a a1       	ldd	r25, Y+34	; 0x22
    3aa0:	00 97       	sbiw	r24, 0x00	; 0
    3aa2:	69 f7       	brne	.-38     	; 0x3a7e <GLCD_enuInit+0x1ea>
    3aa4:	14 c0       	rjmp	.+40     	; 0x3ace <GLCD_enuInit+0x23a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3aa6:	6b a1       	ldd	r22, Y+35	; 0x23
    3aa8:	7c a1       	ldd	r23, Y+36	; 0x24
    3aaa:	8d a1       	ldd	r24, Y+37	; 0x25
    3aac:	9e a1       	ldd	r25, Y+38	; 0x26
    3aae:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3ab2:	dc 01       	movw	r26, r24
    3ab4:	cb 01       	movw	r24, r22
    3ab6:	9a a3       	std	Y+34, r25	; 0x22
    3ab8:	89 a3       	std	Y+33, r24	; 0x21
    3aba:	89 a1       	ldd	r24, Y+33	; 0x21
    3abc:	9a a1       	ldd	r25, Y+34	; 0x22
    3abe:	9e 8f       	std	Y+30, r25	; 0x1e
    3ac0:	8d 8f       	std	Y+29, r24	; 0x1d
    3ac2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ac4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3ac6:	01 97       	sbiw	r24, 0x01	; 1
    3ac8:	f1 f7       	brne	.-4      	; 0x3ac6 <GLCD_enuInit+0x232>
    3aca:	9e 8f       	std	Y+30, r25	; 0x1e
    3acc:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(5);
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RESET, DIO_HIGH);
    3ace:	80 e0       	ldi	r24, 0x00	; 0
    3ad0:	60 e0       	ldi	r22, 0x00	; 0
    3ad2:	41 e0       	ldi	r20, 0x01	; 1
    3ad4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_LOW);
    3ad8:	80 e0       	ldi	r24, 0x00	; 0
    3ada:	63 e0       	ldi	r22, 0x03	; 3
    3adc:	40 e0       	ldi	r20, 0x00	; 0
    3ade:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_LOW);
    3ae2:	80 e0       	ldi	r24, 0x00	; 0
    3ae4:	67 e0       	ldi	r22, 0x07	; 7
    3ae6:	40 e0       	ldi	r20, 0x00	; 0
    3ae8:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_0, DIO_OUTPUT);
    3aec:	81 e0       	ldi	r24, 0x01	; 1
    3aee:	60 e0       	ldi	r22, 0x00	; 0
    3af0:	41 e0       	ldi	r20, 0x01	; 1
    3af2:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_1, DIO_OUTPUT);
    3af6:	81 e0       	ldi	r24, 0x01	; 1
    3af8:	61 e0       	ldi	r22, 0x01	; 1
    3afa:	41 e0       	ldi	r20, 0x01	; 1
    3afc:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_2, DIO_OUTPUT);
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	62 e0       	ldi	r22, 0x02	; 2
    3b04:	41 e0       	ldi	r20, 0x01	; 1
    3b06:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_3, DIO_OUTPUT);
    3b0a:	81 e0       	ldi	r24, 0x01	; 1
    3b0c:	63 e0       	ldi	r22, 0x03	; 3
    3b0e:	41 e0       	ldi	r20, 0x01	; 1
    3b10:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_4, DIO_OUTPUT);
    3b14:	81 e0       	ldi	r24, 0x01	; 1
    3b16:	64 e0       	ldi	r22, 0x04	; 4
    3b18:	41 e0       	ldi	r20, 0x01	; 1
    3b1a:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_5, DIO_OUTPUT);
    3b1e:	81 e0       	ldi	r24, 0x01	; 1
    3b20:	65 e0       	ldi	r22, 0x05	; 5
    3b22:	41 e0       	ldi	r20, 0x01	; 1
    3b24:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_6, DIO_OUTPUT);
    3b28:	81 e0       	ldi	r24, 0x01	; 1
    3b2a:	66 e0       	ldi	r22, 0x06	; 6
    3b2c:	41 e0       	ldi	r20, 0x01	; 1
    3b2e:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>
    DIO_enuSetPinDirection(GLCD_GROUP_B, GLCD_PIN_7, DIO_OUTPUT);
    3b32:	81 e0       	ldi	r24, 0x01	; 1
    3b34:	67 e0       	ldi	r22, 0x07	; 7
    3b36:	41 e0       	ldi	r20, 0x01	; 1
    3b38:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <DIO_enuSetPinDirection>

    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_0, DIO_HIGH);
    3b3c:	81 e0       	ldi	r24, 0x01	; 1
    3b3e:	60 e0       	ldi	r22, 0x00	; 0
    3b40:	41 e0       	ldi	r20, 0x01	; 1
    3b42:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_1, DIO_HIGH);
    3b46:	81 e0       	ldi	r24, 0x01	; 1
    3b48:	61 e0       	ldi	r22, 0x01	; 1
    3b4a:	41 e0       	ldi	r20, 0x01	; 1
    3b4c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_2, DIO_HIGH);
    3b50:	81 e0       	ldi	r24, 0x01	; 1
    3b52:	62 e0       	ldi	r22, 0x02	; 2
    3b54:	41 e0       	ldi	r20, 0x01	; 1
    3b56:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_3, DIO_HIGH);
    3b5a:	81 e0       	ldi	r24, 0x01	; 1
    3b5c:	63 e0       	ldi	r22, 0x03	; 3
    3b5e:	41 e0       	ldi	r20, 0x01	; 1
    3b60:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_4, DIO_HIGH);
    3b64:	81 e0       	ldi	r24, 0x01	; 1
    3b66:	64 e0       	ldi	r22, 0x04	; 4
    3b68:	41 e0       	ldi	r20, 0x01	; 1
    3b6a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_5, DIO_HIGH);
    3b6e:	81 e0       	ldi	r24, 0x01	; 1
    3b70:	65 e0       	ldi	r22, 0x05	; 5
    3b72:	41 e0       	ldi	r20, 0x01	; 1
    3b74:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_6, DIO_LOW);
    3b78:	81 e0       	ldi	r24, 0x01	; 1
    3b7a:	66 e0       	ldi	r22, 0x06	; 6
    3b7c:	40 e0       	ldi	r20, 0x00	; 0
    3b7e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B, GLCD_PIN_7, DIO_LOW);
    3b82:	81 e0       	ldi	r24, 0x01	; 1
    3b84:	67 e0       	ldi	r22, 0x07	; 7
    3b86:	40 e0       	ldi	r20, 0x00	; 0
    3b88:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3b8c:	80 e0       	ldi	r24, 0x00	; 0
    3b8e:	90 e0       	ldi	r25, 0x00	; 0
    3b90:	a0 e0       	ldi	r26, 0x00	; 0
    3b92:	b0 e4       	ldi	r27, 0x40	; 64
    3b94:	89 8f       	std	Y+25, r24	; 0x19
    3b96:	9a 8f       	std	Y+26, r25	; 0x1a
    3b98:	ab 8f       	std	Y+27, r26	; 0x1b
    3b9a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b9c:	69 8d       	ldd	r22, Y+25	; 0x19
    3b9e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ba0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ba2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3ba4:	20 e0       	ldi	r18, 0x00	; 0
    3ba6:	30 e0       	ldi	r19, 0x00	; 0
    3ba8:	4a e7       	ldi	r20, 0x7A	; 122
    3baa:	55 e4       	ldi	r21, 0x45	; 69
    3bac:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3bb0:	dc 01       	movw	r26, r24
    3bb2:	cb 01       	movw	r24, r22
    3bb4:	8d 8b       	std	Y+21, r24	; 0x15
    3bb6:	9e 8b       	std	Y+22, r25	; 0x16
    3bb8:	af 8b       	std	Y+23, r26	; 0x17
    3bba:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3bbc:	6d 89       	ldd	r22, Y+21	; 0x15
    3bbe:	7e 89       	ldd	r23, Y+22	; 0x16
    3bc0:	8f 89       	ldd	r24, Y+23	; 0x17
    3bc2:	98 8d       	ldd	r25, Y+24	; 0x18
    3bc4:	20 e0       	ldi	r18, 0x00	; 0
    3bc6:	30 e0       	ldi	r19, 0x00	; 0
    3bc8:	40 e8       	ldi	r20, 0x80	; 128
    3bca:	5f e3       	ldi	r21, 0x3F	; 63
    3bcc:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3bd0:	88 23       	and	r24, r24
    3bd2:	2c f4       	brge	.+10     	; 0x3bde <GLCD_enuInit+0x34a>
		__ticks = 1;
    3bd4:	81 e0       	ldi	r24, 0x01	; 1
    3bd6:	90 e0       	ldi	r25, 0x00	; 0
    3bd8:	9c 8b       	std	Y+20, r25	; 0x14
    3bda:	8b 8b       	std	Y+19, r24	; 0x13
    3bdc:	3f c0       	rjmp	.+126    	; 0x3c5c <GLCD_enuInit+0x3c8>
	else if (__tmp > 65535)
    3bde:	6d 89       	ldd	r22, Y+21	; 0x15
    3be0:	7e 89       	ldd	r23, Y+22	; 0x16
    3be2:	8f 89       	ldd	r24, Y+23	; 0x17
    3be4:	98 8d       	ldd	r25, Y+24	; 0x18
    3be6:	20 e0       	ldi	r18, 0x00	; 0
    3be8:	3f ef       	ldi	r19, 0xFF	; 255
    3bea:	4f e7       	ldi	r20, 0x7F	; 127
    3bec:	57 e4       	ldi	r21, 0x47	; 71
    3bee:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3bf2:	18 16       	cp	r1, r24
    3bf4:	4c f5       	brge	.+82     	; 0x3c48 <GLCD_enuInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bf6:	69 8d       	ldd	r22, Y+25	; 0x19
    3bf8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3bfa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3bfc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3bfe:	20 e0       	ldi	r18, 0x00	; 0
    3c00:	30 e0       	ldi	r19, 0x00	; 0
    3c02:	40 e2       	ldi	r20, 0x20	; 32
    3c04:	51 e4       	ldi	r21, 0x41	; 65
    3c06:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3c0a:	dc 01       	movw	r26, r24
    3c0c:	cb 01       	movw	r24, r22
    3c0e:	bc 01       	movw	r22, r24
    3c10:	cd 01       	movw	r24, r26
    3c12:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3c16:	dc 01       	movw	r26, r24
    3c18:	cb 01       	movw	r24, r22
    3c1a:	9c 8b       	std	Y+20, r25	; 0x14
    3c1c:	8b 8b       	std	Y+19, r24	; 0x13
    3c1e:	0f c0       	rjmp	.+30     	; 0x3c3e <GLCD_enuInit+0x3aa>
    3c20:	80 e9       	ldi	r24, 0x90	; 144
    3c22:	91 e0       	ldi	r25, 0x01	; 1
    3c24:	9a 8b       	std	Y+18, r25	; 0x12
    3c26:	89 8b       	std	Y+17, r24	; 0x11
    3c28:	89 89       	ldd	r24, Y+17	; 0x11
    3c2a:	9a 89       	ldd	r25, Y+18	; 0x12
    3c2c:	01 97       	sbiw	r24, 0x01	; 1
    3c2e:	f1 f7       	brne	.-4      	; 0x3c2c <GLCD_enuInit+0x398>
    3c30:	9a 8b       	std	Y+18, r25	; 0x12
    3c32:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c34:	8b 89       	ldd	r24, Y+19	; 0x13
    3c36:	9c 89       	ldd	r25, Y+20	; 0x14
    3c38:	01 97       	sbiw	r24, 0x01	; 1
    3c3a:	9c 8b       	std	Y+20, r25	; 0x14
    3c3c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c3e:	8b 89       	ldd	r24, Y+19	; 0x13
    3c40:	9c 89       	ldd	r25, Y+20	; 0x14
    3c42:	00 97       	sbiw	r24, 0x00	; 0
    3c44:	69 f7       	brne	.-38     	; 0x3c20 <GLCD_enuInit+0x38c>
    3c46:	14 c0       	rjmp	.+40     	; 0x3c70 <GLCD_enuInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c48:	6d 89       	ldd	r22, Y+21	; 0x15
    3c4a:	7e 89       	ldd	r23, Y+22	; 0x16
    3c4c:	8f 89       	ldd	r24, Y+23	; 0x17
    3c4e:	98 8d       	ldd	r25, Y+24	; 0x18
    3c50:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3c54:	dc 01       	movw	r26, r24
    3c56:	cb 01       	movw	r24, r22
    3c58:	9c 8b       	std	Y+20, r25	; 0x14
    3c5a:	8b 8b       	std	Y+19, r24	; 0x13
    3c5c:	8b 89       	ldd	r24, Y+19	; 0x13
    3c5e:	9c 89       	ldd	r25, Y+20	; 0x14
    3c60:	98 8b       	std	Y+16, r25	; 0x10
    3c62:	8f 87       	std	Y+15, r24	; 0x0f
    3c64:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c66:	98 89       	ldd	r25, Y+16	; 0x10
    3c68:	01 97       	sbiw	r24, 0x01	; 1
    3c6a:	f1 f7       	brne	.-4      	; 0x3c68 <GLCD_enuInit+0x3d4>
    3c6c:	98 8b       	std	Y+16, r25	; 0x10
    3c6e:	8f 87       	std	Y+15, r24	; 0x0f

    _delay_ms(2);
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    3c70:	80 e0       	ldi	r24, 0x00	; 0
    3c72:	62 e0       	ldi	r22, 0x02	; 2
    3c74:	41 e0       	ldi	r20, 0x01	; 1
    3c76:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3c7a:	80 e0       	ldi	r24, 0x00	; 0
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	a0 e8       	ldi	r26, 0x80	; 128
    3c80:	bf e3       	ldi	r27, 0x3F	; 63
    3c82:	8b 87       	std	Y+11, r24	; 0x0b
    3c84:	9c 87       	std	Y+12, r25	; 0x0c
    3c86:	ad 87       	std	Y+13, r26	; 0x0d
    3c88:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c8a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c8c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c8e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c90:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c92:	20 e0       	ldi	r18, 0x00	; 0
    3c94:	30 e0       	ldi	r19, 0x00	; 0
    3c96:	4a e7       	ldi	r20, 0x7A	; 122
    3c98:	55 e4       	ldi	r21, 0x45	; 69
    3c9a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	8f 83       	std	Y+7, r24	; 0x07
    3ca4:	98 87       	std	Y+8, r25	; 0x08
    3ca6:	a9 87       	std	Y+9, r26	; 0x09
    3ca8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3caa:	6f 81       	ldd	r22, Y+7	; 0x07
    3cac:	78 85       	ldd	r23, Y+8	; 0x08
    3cae:	89 85       	ldd	r24, Y+9	; 0x09
    3cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cb2:	20 e0       	ldi	r18, 0x00	; 0
    3cb4:	30 e0       	ldi	r19, 0x00	; 0
    3cb6:	40 e8       	ldi	r20, 0x80	; 128
    3cb8:	5f e3       	ldi	r21, 0x3F	; 63
    3cba:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3cbe:	88 23       	and	r24, r24
    3cc0:	2c f4       	brge	.+10     	; 0x3ccc <GLCD_enuInit+0x438>
		__ticks = 1;
    3cc2:	81 e0       	ldi	r24, 0x01	; 1
    3cc4:	90 e0       	ldi	r25, 0x00	; 0
    3cc6:	9e 83       	std	Y+6, r25	; 0x06
    3cc8:	8d 83       	std	Y+5, r24	; 0x05
    3cca:	3f c0       	rjmp	.+126    	; 0x3d4a <GLCD_enuInit+0x4b6>
	else if (__tmp > 65535)
    3ccc:	6f 81       	ldd	r22, Y+7	; 0x07
    3cce:	78 85       	ldd	r23, Y+8	; 0x08
    3cd0:	89 85       	ldd	r24, Y+9	; 0x09
    3cd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cd4:	20 e0       	ldi	r18, 0x00	; 0
    3cd6:	3f ef       	ldi	r19, 0xFF	; 255
    3cd8:	4f e7       	ldi	r20, 0x7F	; 127
    3cda:	57 e4       	ldi	r21, 0x47	; 71
    3cdc:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3ce0:	18 16       	cp	r1, r24
    3ce2:	4c f5       	brge	.+82     	; 0x3d36 <GLCD_enuInit+0x4a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ce4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ce6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ce8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cea:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cec:	20 e0       	ldi	r18, 0x00	; 0
    3cee:	30 e0       	ldi	r19, 0x00	; 0
    3cf0:	40 e2       	ldi	r20, 0x20	; 32
    3cf2:	51 e4       	ldi	r21, 0x41	; 65
    3cf4:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3cf8:	dc 01       	movw	r26, r24
    3cfa:	cb 01       	movw	r24, r22
    3cfc:	bc 01       	movw	r22, r24
    3cfe:	cd 01       	movw	r24, r26
    3d00:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3d04:	dc 01       	movw	r26, r24
    3d06:	cb 01       	movw	r24, r22
    3d08:	9e 83       	std	Y+6, r25	; 0x06
    3d0a:	8d 83       	std	Y+5, r24	; 0x05
    3d0c:	0f c0       	rjmp	.+30     	; 0x3d2c <GLCD_enuInit+0x498>
    3d0e:	80 e9       	ldi	r24, 0x90	; 144
    3d10:	91 e0       	ldi	r25, 0x01	; 1
    3d12:	9c 83       	std	Y+4, r25	; 0x04
    3d14:	8b 83       	std	Y+3, r24	; 0x03
    3d16:	8b 81       	ldd	r24, Y+3	; 0x03
    3d18:	9c 81       	ldd	r25, Y+4	; 0x04
    3d1a:	01 97       	sbiw	r24, 0x01	; 1
    3d1c:	f1 f7       	brne	.-4      	; 0x3d1a <GLCD_enuInit+0x486>
    3d1e:	9c 83       	std	Y+4, r25	; 0x04
    3d20:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d22:	8d 81       	ldd	r24, Y+5	; 0x05
    3d24:	9e 81       	ldd	r25, Y+6	; 0x06
    3d26:	01 97       	sbiw	r24, 0x01	; 1
    3d28:	9e 83       	std	Y+6, r25	; 0x06
    3d2a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d2c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d2e:	9e 81       	ldd	r25, Y+6	; 0x06
    3d30:	00 97       	sbiw	r24, 0x00	; 0
    3d32:	69 f7       	brne	.-38     	; 0x3d0e <GLCD_enuInit+0x47a>
    3d34:	14 c0       	rjmp	.+40     	; 0x3d5e <GLCD_enuInit+0x4ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d36:	6f 81       	ldd	r22, Y+7	; 0x07
    3d38:	78 85       	ldd	r23, Y+8	; 0x08
    3d3a:	89 85       	ldd	r24, Y+9	; 0x09
    3d3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d3e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3d42:	dc 01       	movw	r26, r24
    3d44:	cb 01       	movw	r24, r22
    3d46:	9e 83       	std	Y+6, r25	; 0x06
    3d48:	8d 83       	std	Y+5, r24	; 0x05
    3d4a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d4c:	9e 81       	ldd	r25, Y+6	; 0x06
    3d4e:	9a 83       	std	Y+2, r25	; 0x02
    3d50:	89 83       	std	Y+1, r24	; 0x01
    3d52:	89 81       	ldd	r24, Y+1	; 0x01
    3d54:	9a 81       	ldd	r25, Y+2	; 0x02
    3d56:	01 97       	sbiw	r24, 0x01	; 1
    3d58:	f1 f7       	brne	.-4      	; 0x3d56 <GLCD_enuInit+0x4c2>
    3d5a:	9a 83       	std	Y+2, r25	; 0x02
    3d5c:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1);
    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    3d5e:	80 e0       	ldi	r24, 0x00	; 0
    3d60:	62 e0       	ldi	r22, 0x02	; 2
    3d62:	40 e0       	ldi	r20, 0x00	; 0
    3d64:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    #else
      #error you must choose from config file

    #endif  

}
    3d68:	ea 96       	adiw	r28, 0x3a	; 58
    3d6a:	0f b6       	in	r0, 0x3f	; 63
    3d6c:	f8 94       	cli
    3d6e:	de bf       	out	0x3e, r29	; 62
    3d70:	0f be       	out	0x3f, r0	; 63
    3d72:	cd bf       	out	0x3d, r28	; 61
    3d74:	cf 91       	pop	r28
    3d76:	df 91       	pop	r29
    3d78:	08 95       	ret

00003d7a <GLCD_enuSetAddress>:

ES_t GLCD_enuSetAddress(u8 Copy_u8Address){
    3d7a:	df 93       	push	r29
    3d7c:	cf 93       	push	r28
    3d7e:	cd b7       	in	r28, 0x3d	; 61
    3d80:	de b7       	in	r29, 0x3e	; 62
    3d82:	ea 97       	sbiw	r28, 0x3a	; 58
    3d84:	0f b6       	in	r0, 0x3f	; 63
    3d86:	f8 94       	cli
    3d88:	de bf       	out	0x3e, r29	; 62
    3d8a:	0f be       	out	0x3f, r0	; 63
    3d8c:	cd bf       	out	0x3d, r28	; 61
    3d8e:	89 af       	std	Y+57, r24	; 0x39
	LOCAL_u8Address=Copy_u8Address;
    3d90:	89 ad       	ldd	r24, Y+57	; 0x39
    3d92:	80 93 b5 01 	sts	0x01B5, r24

	if(Copy_u8Address < 64){
    3d96:	89 ad       	ldd	r24, Y+57	; 0x39
    3d98:	80 34       	cpi	r24, 0x40	; 64
    3d9a:	08 f0       	brcs	.+2      	; 0x3d9e <GLCD_enuSetAddress+0x24>
    3d9c:	48 c1       	rjmp	.+656    	; 0x402e <GLCD_enuSetAddress+0x2b4>
		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    3d9e:	80 e0       	ldi	r24, 0x00	; 0
    3da0:	65 e0       	ldi	r22, 0x05	; 5
    3da2:	40 e0       	ldi	r20, 0x00	; 0
    3da4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    3da8:	80 e0       	ldi	r24, 0x00	; 0
    3daa:	61 e0       	ldi	r22, 0x01	; 1
    3dac:	40 e0       	ldi	r20, 0x00	; 0
    3dae:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_HIGH);
    3db2:	80 e0       	ldi	r24, 0x00	; 0
    3db4:	63 e0       	ldi	r22, 0x03	; 3
    3db6:	41 e0       	ldi	r20, 0x01	; 1
    3db8:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_LOW);
    3dbc:	80 e0       	ldi	r24, 0x00	; 0
    3dbe:	67 e0       	ldi	r22, 0x07	; 7
    3dc0:	40 e0       	ldi	r20, 0x00	; 0
    3dc2:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Address >> 0) & 1));
    3dc6:	89 ad       	ldd	r24, Y+57	; 0x39
    3dc8:	98 2f       	mov	r25, r24
    3dca:	91 70       	andi	r25, 0x01	; 1
    3dcc:	81 e0       	ldi	r24, 0x01	; 1
    3dce:	60 e0       	ldi	r22, 0x00	; 0
    3dd0:	49 2f       	mov	r20, r25
    3dd2:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Address >> 1) & 1));
    3dd6:	89 ad       	ldd	r24, Y+57	; 0x39
    3dd8:	86 95       	lsr	r24
    3dda:	98 2f       	mov	r25, r24
    3ddc:	91 70       	andi	r25, 0x01	; 1
    3dde:	81 e0       	ldi	r24, 0x01	; 1
    3de0:	61 e0       	ldi	r22, 0x01	; 1
    3de2:	49 2f       	mov	r20, r25
    3de4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Address >> 2) & 1));
    3de8:	89 ad       	ldd	r24, Y+57	; 0x39
    3dea:	86 95       	lsr	r24
    3dec:	86 95       	lsr	r24
    3dee:	98 2f       	mov	r25, r24
    3df0:	91 70       	andi	r25, 0x01	; 1
    3df2:	81 e0       	ldi	r24, 0x01	; 1
    3df4:	62 e0       	ldi	r22, 0x02	; 2
    3df6:	49 2f       	mov	r20, r25
    3df8:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,((Copy_u8Address >> 3) & 1));
    3dfc:	89 ad       	ldd	r24, Y+57	; 0x39
    3dfe:	86 95       	lsr	r24
    3e00:	86 95       	lsr	r24
    3e02:	86 95       	lsr	r24
    3e04:	98 2f       	mov	r25, r24
    3e06:	91 70       	andi	r25, 0x01	; 1
    3e08:	81 e0       	ldi	r24, 0x01	; 1
    3e0a:	63 e0       	ldi	r22, 0x03	; 3
    3e0c:	49 2f       	mov	r20, r25
    3e0e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,((Copy_u8Address >> 4) & 1));
    3e12:	89 ad       	ldd	r24, Y+57	; 0x39
    3e14:	82 95       	swap	r24
    3e16:	8f 70       	andi	r24, 0x0F	; 15
    3e18:	98 2f       	mov	r25, r24
    3e1a:	91 70       	andi	r25, 0x01	; 1
    3e1c:	81 e0       	ldi	r24, 0x01	; 1
    3e1e:	64 e0       	ldi	r22, 0x04	; 4
    3e20:	49 2f       	mov	r20, r25
    3e22:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,((Copy_u8Address >> 5) & 1));
    3e26:	89 ad       	ldd	r24, Y+57	; 0x39
    3e28:	82 95       	swap	r24
    3e2a:	86 95       	lsr	r24
    3e2c:	87 70       	andi	r24, 0x07	; 7
    3e2e:	98 2f       	mov	r25, r24
    3e30:	91 70       	andi	r25, 0x01	; 1
    3e32:	81 e0       	ldi	r24, 0x01	; 1
    3e34:	65 e0       	ldi	r22, 0x05	; 5
    3e36:	49 2f       	mov	r20, r25
    3e38:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_HIGH);
    3e3c:	81 e0       	ldi	r24, 0x01	; 1
    3e3e:	66 e0       	ldi	r22, 0x06	; 6
    3e40:	41 e0       	ldi	r20, 0x01	; 1
    3e42:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_LOW);
    3e46:	81 e0       	ldi	r24, 0x01	; 1
    3e48:	67 e0       	ldi	r22, 0x07	; 7
    3e4a:	40 e0       	ldi	r20, 0x00	; 0
    3e4c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3e50:	80 e0       	ldi	r24, 0x00	; 0
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	a0 e0       	ldi	r26, 0x00	; 0
    3e56:	b0 e4       	ldi	r27, 0x40	; 64
    3e58:	8d ab       	std	Y+53, r24	; 0x35
    3e5a:	9e ab       	std	Y+54, r25	; 0x36
    3e5c:	af ab       	std	Y+55, r26	; 0x37
    3e5e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e60:	6d a9       	ldd	r22, Y+53	; 0x35
    3e62:	7e a9       	ldd	r23, Y+54	; 0x36
    3e64:	8f a9       	ldd	r24, Y+55	; 0x37
    3e66:	98 ad       	ldd	r25, Y+56	; 0x38
    3e68:	20 e0       	ldi	r18, 0x00	; 0
    3e6a:	30 e0       	ldi	r19, 0x00	; 0
    3e6c:	4a e7       	ldi	r20, 0x7A	; 122
    3e6e:	55 e4       	ldi	r21, 0x45	; 69
    3e70:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3e74:	dc 01       	movw	r26, r24
    3e76:	cb 01       	movw	r24, r22
    3e78:	89 ab       	std	Y+49, r24	; 0x31
    3e7a:	9a ab       	std	Y+50, r25	; 0x32
    3e7c:	ab ab       	std	Y+51, r26	; 0x33
    3e7e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3e80:	69 a9       	ldd	r22, Y+49	; 0x31
    3e82:	7a a9       	ldd	r23, Y+50	; 0x32
    3e84:	8b a9       	ldd	r24, Y+51	; 0x33
    3e86:	9c a9       	ldd	r25, Y+52	; 0x34
    3e88:	20 e0       	ldi	r18, 0x00	; 0
    3e8a:	30 e0       	ldi	r19, 0x00	; 0
    3e8c:	40 e8       	ldi	r20, 0x80	; 128
    3e8e:	5f e3       	ldi	r21, 0x3F	; 63
    3e90:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3e94:	88 23       	and	r24, r24
    3e96:	2c f4       	brge	.+10     	; 0x3ea2 <GLCD_enuSetAddress+0x128>
		__ticks = 1;
    3e98:	81 e0       	ldi	r24, 0x01	; 1
    3e9a:	90 e0       	ldi	r25, 0x00	; 0
    3e9c:	98 ab       	std	Y+48, r25	; 0x30
    3e9e:	8f a7       	std	Y+47, r24	; 0x2f
    3ea0:	3f c0       	rjmp	.+126    	; 0x3f20 <GLCD_enuSetAddress+0x1a6>
	else if (__tmp > 65535)
    3ea2:	69 a9       	ldd	r22, Y+49	; 0x31
    3ea4:	7a a9       	ldd	r23, Y+50	; 0x32
    3ea6:	8b a9       	ldd	r24, Y+51	; 0x33
    3ea8:	9c a9       	ldd	r25, Y+52	; 0x34
    3eaa:	20 e0       	ldi	r18, 0x00	; 0
    3eac:	3f ef       	ldi	r19, 0xFF	; 255
    3eae:	4f e7       	ldi	r20, 0x7F	; 127
    3eb0:	57 e4       	ldi	r21, 0x47	; 71
    3eb2:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3eb6:	18 16       	cp	r1, r24
    3eb8:	4c f5       	brge	.+82     	; 0x3f0c <GLCD_enuSetAddress+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eba:	6d a9       	ldd	r22, Y+53	; 0x35
    3ebc:	7e a9       	ldd	r23, Y+54	; 0x36
    3ebe:	8f a9       	ldd	r24, Y+55	; 0x37
    3ec0:	98 ad       	ldd	r25, Y+56	; 0x38
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	30 e0       	ldi	r19, 0x00	; 0
    3ec6:	40 e2       	ldi	r20, 0x20	; 32
    3ec8:	51 e4       	ldi	r21, 0x41	; 65
    3eca:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	bc 01       	movw	r22, r24
    3ed4:	cd 01       	movw	r24, r26
    3ed6:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3eda:	dc 01       	movw	r26, r24
    3edc:	cb 01       	movw	r24, r22
    3ede:	98 ab       	std	Y+48, r25	; 0x30
    3ee0:	8f a7       	std	Y+47, r24	; 0x2f
    3ee2:	0f c0       	rjmp	.+30     	; 0x3f02 <GLCD_enuSetAddress+0x188>
    3ee4:	80 e9       	ldi	r24, 0x90	; 144
    3ee6:	91 e0       	ldi	r25, 0x01	; 1
    3ee8:	9e a7       	std	Y+46, r25	; 0x2e
    3eea:	8d a7       	std	Y+45, r24	; 0x2d
    3eec:	8d a5       	ldd	r24, Y+45	; 0x2d
    3eee:	9e a5       	ldd	r25, Y+46	; 0x2e
    3ef0:	01 97       	sbiw	r24, 0x01	; 1
    3ef2:	f1 f7       	brne	.-4      	; 0x3ef0 <GLCD_enuSetAddress+0x176>
    3ef4:	9e a7       	std	Y+46, r25	; 0x2e
    3ef6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ef8:	8f a5       	ldd	r24, Y+47	; 0x2f
    3efa:	98 a9       	ldd	r25, Y+48	; 0x30
    3efc:	01 97       	sbiw	r24, 0x01	; 1
    3efe:	98 ab       	std	Y+48, r25	; 0x30
    3f00:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f02:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f04:	98 a9       	ldd	r25, Y+48	; 0x30
    3f06:	00 97       	sbiw	r24, 0x00	; 0
    3f08:	69 f7       	brne	.-38     	; 0x3ee4 <GLCD_enuSetAddress+0x16a>
    3f0a:	14 c0       	rjmp	.+40     	; 0x3f34 <GLCD_enuSetAddress+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f0c:	69 a9       	ldd	r22, Y+49	; 0x31
    3f0e:	7a a9       	ldd	r23, Y+50	; 0x32
    3f10:	8b a9       	ldd	r24, Y+51	; 0x33
    3f12:	9c a9       	ldd	r25, Y+52	; 0x34
    3f14:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3f18:	dc 01       	movw	r26, r24
    3f1a:	cb 01       	movw	r24, r22
    3f1c:	98 ab       	std	Y+48, r25	; 0x30
    3f1e:	8f a7       	std	Y+47, r24	; 0x2f
    3f20:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f22:	98 a9       	ldd	r25, Y+48	; 0x30
    3f24:	9c a7       	std	Y+44, r25	; 0x2c
    3f26:	8b a7       	std	Y+43, r24	; 0x2b
    3f28:	8b a5       	ldd	r24, Y+43	; 0x2b
    3f2a:	9c a5       	ldd	r25, Y+44	; 0x2c
    3f2c:	01 97       	sbiw	r24, 0x01	; 1
    3f2e:	f1 f7       	brne	.-4      	; 0x3f2c <GLCD_enuSetAddress+0x1b2>
    3f30:	9c a7       	std	Y+44, r25	; 0x2c
    3f32:	8b a7       	std	Y+43, r24	; 0x2b

		_delay_ms(2);
		    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    3f34:	80 e0       	ldi	r24, 0x00	; 0
    3f36:	62 e0       	ldi	r22, 0x02	; 2
    3f38:	41 e0       	ldi	r20, 0x01	; 1
    3f3a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    3f3e:	80 e0       	ldi	r24, 0x00	; 0
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	a0 e8       	ldi	r26, 0x80	; 128
    3f44:	bf e3       	ldi	r27, 0x3F	; 63
    3f46:	8f a3       	std	Y+39, r24	; 0x27
    3f48:	98 a7       	std	Y+40, r25	; 0x28
    3f4a:	a9 a7       	std	Y+41, r26	; 0x29
    3f4c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f4e:	6f a1       	ldd	r22, Y+39	; 0x27
    3f50:	78 a5       	ldd	r23, Y+40	; 0x28
    3f52:	89 a5       	ldd	r24, Y+41	; 0x29
    3f54:	9a a5       	ldd	r25, Y+42	; 0x2a
    3f56:	20 e0       	ldi	r18, 0x00	; 0
    3f58:	30 e0       	ldi	r19, 0x00	; 0
    3f5a:	4a e7       	ldi	r20, 0x7A	; 122
    3f5c:	55 e4       	ldi	r21, 0x45	; 69
    3f5e:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3f62:	dc 01       	movw	r26, r24
    3f64:	cb 01       	movw	r24, r22
    3f66:	8b a3       	std	Y+35, r24	; 0x23
    3f68:	9c a3       	std	Y+36, r25	; 0x24
    3f6a:	ad a3       	std	Y+37, r26	; 0x25
    3f6c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3f6e:	6b a1       	ldd	r22, Y+35	; 0x23
    3f70:	7c a1       	ldd	r23, Y+36	; 0x24
    3f72:	8d a1       	ldd	r24, Y+37	; 0x25
    3f74:	9e a1       	ldd	r25, Y+38	; 0x26
    3f76:	20 e0       	ldi	r18, 0x00	; 0
    3f78:	30 e0       	ldi	r19, 0x00	; 0
    3f7a:	40 e8       	ldi	r20, 0x80	; 128
    3f7c:	5f e3       	ldi	r21, 0x3F	; 63
    3f7e:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    3f82:	88 23       	and	r24, r24
    3f84:	2c f4       	brge	.+10     	; 0x3f90 <GLCD_enuSetAddress+0x216>
		__ticks = 1;
    3f86:	81 e0       	ldi	r24, 0x01	; 1
    3f88:	90 e0       	ldi	r25, 0x00	; 0
    3f8a:	9a a3       	std	Y+34, r25	; 0x22
    3f8c:	89 a3       	std	Y+33, r24	; 0x21
    3f8e:	3f c0       	rjmp	.+126    	; 0x400e <GLCD_enuSetAddress+0x294>
	else if (__tmp > 65535)
    3f90:	6b a1       	ldd	r22, Y+35	; 0x23
    3f92:	7c a1       	ldd	r23, Y+36	; 0x24
    3f94:	8d a1       	ldd	r24, Y+37	; 0x25
    3f96:	9e a1       	ldd	r25, Y+38	; 0x26
    3f98:	20 e0       	ldi	r18, 0x00	; 0
    3f9a:	3f ef       	ldi	r19, 0xFF	; 255
    3f9c:	4f e7       	ldi	r20, 0x7F	; 127
    3f9e:	57 e4       	ldi	r21, 0x47	; 71
    3fa0:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    3fa4:	18 16       	cp	r1, r24
    3fa6:	4c f5       	brge	.+82     	; 0x3ffa <GLCD_enuSetAddress+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fa8:	6f a1       	ldd	r22, Y+39	; 0x27
    3faa:	78 a5       	ldd	r23, Y+40	; 0x28
    3fac:	89 a5       	ldd	r24, Y+41	; 0x29
    3fae:	9a a5       	ldd	r25, Y+42	; 0x2a
    3fb0:	20 e0       	ldi	r18, 0x00	; 0
    3fb2:	30 e0       	ldi	r19, 0x00	; 0
    3fb4:	40 e2       	ldi	r20, 0x20	; 32
    3fb6:	51 e4       	ldi	r21, 0x41	; 65
    3fb8:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    3fbc:	dc 01       	movw	r26, r24
    3fbe:	cb 01       	movw	r24, r22
    3fc0:	bc 01       	movw	r22, r24
    3fc2:	cd 01       	movw	r24, r26
    3fc4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3fc8:	dc 01       	movw	r26, r24
    3fca:	cb 01       	movw	r24, r22
    3fcc:	9a a3       	std	Y+34, r25	; 0x22
    3fce:	89 a3       	std	Y+33, r24	; 0x21
    3fd0:	0f c0       	rjmp	.+30     	; 0x3ff0 <GLCD_enuSetAddress+0x276>
    3fd2:	80 e9       	ldi	r24, 0x90	; 144
    3fd4:	91 e0       	ldi	r25, 0x01	; 1
    3fd6:	98 a3       	std	Y+32, r25	; 0x20
    3fd8:	8f 8f       	std	Y+31, r24	; 0x1f
    3fda:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3fdc:	98 a1       	ldd	r25, Y+32	; 0x20
    3fde:	01 97       	sbiw	r24, 0x01	; 1
    3fe0:	f1 f7       	brne	.-4      	; 0x3fde <GLCD_enuSetAddress+0x264>
    3fe2:	98 a3       	std	Y+32, r25	; 0x20
    3fe4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fe6:	89 a1       	ldd	r24, Y+33	; 0x21
    3fe8:	9a a1       	ldd	r25, Y+34	; 0x22
    3fea:	01 97       	sbiw	r24, 0x01	; 1
    3fec:	9a a3       	std	Y+34, r25	; 0x22
    3fee:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ff0:	89 a1       	ldd	r24, Y+33	; 0x21
    3ff2:	9a a1       	ldd	r25, Y+34	; 0x22
    3ff4:	00 97       	sbiw	r24, 0x00	; 0
    3ff6:	69 f7       	brne	.-38     	; 0x3fd2 <GLCD_enuSetAddress+0x258>
    3ff8:	14 c0       	rjmp	.+40     	; 0x4022 <GLCD_enuSetAddress+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ffa:	6b a1       	ldd	r22, Y+35	; 0x23
    3ffc:	7c a1       	ldd	r23, Y+36	; 0x24
    3ffe:	8d a1       	ldd	r24, Y+37	; 0x25
    4000:	9e a1       	ldd	r25, Y+38	; 0x26
    4002:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4006:	dc 01       	movw	r26, r24
    4008:	cb 01       	movw	r24, r22
    400a:	9a a3       	std	Y+34, r25	; 0x22
    400c:	89 a3       	std	Y+33, r24	; 0x21
    400e:	89 a1       	ldd	r24, Y+33	; 0x21
    4010:	9a a1       	ldd	r25, Y+34	; 0x22
    4012:	9e 8f       	std	Y+30, r25	; 0x1e
    4014:	8d 8f       	std	Y+29, r24	; 0x1d
    4016:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4018:	9e 8d       	ldd	r25, Y+30	; 0x1e
    401a:	01 97       	sbiw	r24, 0x01	; 1
    401c:	f1 f7       	brne	.-4      	; 0x401a <GLCD_enuSetAddress+0x2a0>
    401e:	9e 8f       	std	Y+30, r25	; 0x1e
    4020:	8d 8f       	std	Y+29, r24	; 0x1d
		    _delay_ms(1);
		    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    4022:	80 e0       	ldi	r24, 0x00	; 0
    4024:	62 e0       	ldi	r22, 0x02	; 2
    4026:	40 e0       	ldi	r20, 0x00	; 0
    4028:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    402c:	6f c1       	rjmp	.+734    	; 0x430c <GLCD_enuSetAddress+0x592>

	}else{



		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    402e:	80 e0       	ldi	r24, 0x00	; 0
    4030:	65 e0       	ldi	r22, 0x05	; 5
    4032:	40 e0       	ldi	r20, 0x00	; 0
    4034:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    4038:	80 e0       	ldi	r24, 0x00	; 0
    403a:	61 e0       	ldi	r22, 0x01	; 1
    403c:	40 e0       	ldi	r20, 0x00	; 0
    403e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_LOW);
    4042:	80 e0       	ldi	r24, 0x00	; 0
    4044:	63 e0       	ldi	r22, 0x03	; 3
    4046:	40 e0       	ldi	r20, 0x00	; 0
    4048:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_HIGH);
    404c:	80 e0       	ldi	r24, 0x00	; 0
    404e:	67 e0       	ldi	r22, 0x07	; 7
    4050:	41 e0       	ldi	r20, 0x01	; 1
    4052:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>





		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,(((Copy_u8Address-64) >> 0) & 1));
    4056:	89 ad       	ldd	r24, Y+57	; 0x39
    4058:	80 54       	subi	r24, 0x40	; 64
    405a:	98 2f       	mov	r25, r24
    405c:	91 70       	andi	r25, 0x01	; 1
    405e:	81 e0       	ldi	r24, 0x01	; 1
    4060:	60 e0       	ldi	r22, 0x00	; 0
    4062:	49 2f       	mov	r20, r25
    4064:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,(((Copy_u8Address-64) >> 1) & 1));
    4068:	89 ad       	ldd	r24, Y+57	; 0x39
    406a:	88 2f       	mov	r24, r24
    406c:	90 e0       	ldi	r25, 0x00	; 0
    406e:	80 54       	subi	r24, 0x40	; 64
    4070:	90 40       	sbci	r25, 0x00	; 0
    4072:	95 95       	asr	r25
    4074:	87 95       	ror	r24
    4076:	98 2f       	mov	r25, r24
    4078:	91 70       	andi	r25, 0x01	; 1
    407a:	81 e0       	ldi	r24, 0x01	; 1
    407c:	61 e0       	ldi	r22, 0x01	; 1
    407e:	49 2f       	mov	r20, r25
    4080:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,(((Copy_u8Address-64) >> 2) & 1));
    4084:	89 ad       	ldd	r24, Y+57	; 0x39
    4086:	88 2f       	mov	r24, r24
    4088:	90 e0       	ldi	r25, 0x00	; 0
    408a:	80 54       	subi	r24, 0x40	; 64
    408c:	90 40       	sbci	r25, 0x00	; 0
    408e:	95 95       	asr	r25
    4090:	87 95       	ror	r24
    4092:	95 95       	asr	r25
    4094:	87 95       	ror	r24
    4096:	98 2f       	mov	r25, r24
    4098:	91 70       	andi	r25, 0x01	; 1
    409a:	81 e0       	ldi	r24, 0x01	; 1
    409c:	62 e0       	ldi	r22, 0x02	; 2
    409e:	49 2f       	mov	r20, r25
    40a0:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,(((Copy_u8Address-64) >> 3) & 1));
    40a4:	89 ad       	ldd	r24, Y+57	; 0x39
    40a6:	88 2f       	mov	r24, r24
    40a8:	90 e0       	ldi	r25, 0x00	; 0
    40aa:	80 54       	subi	r24, 0x40	; 64
    40ac:	90 40       	sbci	r25, 0x00	; 0
    40ae:	95 95       	asr	r25
    40b0:	87 95       	ror	r24
    40b2:	95 95       	asr	r25
    40b4:	87 95       	ror	r24
    40b6:	95 95       	asr	r25
    40b8:	87 95       	ror	r24
    40ba:	98 2f       	mov	r25, r24
    40bc:	91 70       	andi	r25, 0x01	; 1
    40be:	81 e0       	ldi	r24, 0x01	; 1
    40c0:	63 e0       	ldi	r22, 0x03	; 3
    40c2:	49 2f       	mov	r20, r25
    40c4:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,(((Copy_u8Address-64) >> 4) & 1));
    40c8:	89 ad       	ldd	r24, Y+57	; 0x39
    40ca:	88 2f       	mov	r24, r24
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	80 54       	subi	r24, 0x40	; 64
    40d0:	90 40       	sbci	r25, 0x00	; 0
    40d2:	95 95       	asr	r25
    40d4:	87 95       	ror	r24
    40d6:	95 95       	asr	r25
    40d8:	87 95       	ror	r24
    40da:	95 95       	asr	r25
    40dc:	87 95       	ror	r24
    40de:	95 95       	asr	r25
    40e0:	87 95       	ror	r24
    40e2:	98 2f       	mov	r25, r24
    40e4:	91 70       	andi	r25, 0x01	; 1
    40e6:	81 e0       	ldi	r24, 0x01	; 1
    40e8:	64 e0       	ldi	r22, 0x04	; 4
    40ea:	49 2f       	mov	r20, r25
    40ec:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,(((Copy_u8Address-64) >> 5) & 1));
    40f0:	89 ad       	ldd	r24, Y+57	; 0x39
    40f2:	88 2f       	mov	r24, r24
    40f4:	90 e0       	ldi	r25, 0x00	; 0
    40f6:	80 54       	subi	r24, 0x40	; 64
    40f8:	90 40       	sbci	r25, 0x00	; 0
    40fa:	95 95       	asr	r25
    40fc:	87 95       	ror	r24
    40fe:	95 95       	asr	r25
    4100:	87 95       	ror	r24
    4102:	95 95       	asr	r25
    4104:	87 95       	ror	r24
    4106:	95 95       	asr	r25
    4108:	87 95       	ror	r24
    410a:	95 95       	asr	r25
    410c:	87 95       	ror	r24
    410e:	98 2f       	mov	r25, r24
    4110:	91 70       	andi	r25, 0x01	; 1
    4112:	81 e0       	ldi	r24, 0x01	; 1
    4114:	65 e0       	ldi	r22, 0x05	; 5
    4116:	49 2f       	mov	r20, r25
    4118:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_HIGH);
    411c:	81 e0       	ldi	r24, 0x01	; 1
    411e:	66 e0       	ldi	r22, 0x06	; 6
    4120:	41 e0       	ldi	r20, 0x01	; 1
    4122:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
		DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_LOW);
    4126:	81 e0       	ldi	r24, 0x01	; 1
    4128:	67 e0       	ldi	r22, 0x07	; 7
    412a:	40 e0       	ldi	r20, 0x00	; 0
    412c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4130:	80 e0       	ldi	r24, 0x00	; 0
    4132:	90 e0       	ldi	r25, 0x00	; 0
    4134:	a0 e0       	ldi	r26, 0x00	; 0
    4136:	b0 e4       	ldi	r27, 0x40	; 64
    4138:	89 8f       	std	Y+25, r24	; 0x19
    413a:	9a 8f       	std	Y+26, r25	; 0x1a
    413c:	ab 8f       	std	Y+27, r26	; 0x1b
    413e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4140:	69 8d       	ldd	r22, Y+25	; 0x19
    4142:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4144:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4146:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4148:	20 e0       	ldi	r18, 0x00	; 0
    414a:	30 e0       	ldi	r19, 0x00	; 0
    414c:	4a e7       	ldi	r20, 0x7A	; 122
    414e:	55 e4       	ldi	r21, 0x45	; 69
    4150:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4154:	dc 01       	movw	r26, r24
    4156:	cb 01       	movw	r24, r22
    4158:	8d 8b       	std	Y+21, r24	; 0x15
    415a:	9e 8b       	std	Y+22, r25	; 0x16
    415c:	af 8b       	std	Y+23, r26	; 0x17
    415e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4160:	6d 89       	ldd	r22, Y+21	; 0x15
    4162:	7e 89       	ldd	r23, Y+22	; 0x16
    4164:	8f 89       	ldd	r24, Y+23	; 0x17
    4166:	98 8d       	ldd	r25, Y+24	; 0x18
    4168:	20 e0       	ldi	r18, 0x00	; 0
    416a:	30 e0       	ldi	r19, 0x00	; 0
    416c:	40 e8       	ldi	r20, 0x80	; 128
    416e:	5f e3       	ldi	r21, 0x3F	; 63
    4170:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4174:	88 23       	and	r24, r24
    4176:	2c f4       	brge	.+10     	; 0x4182 <GLCD_enuSetAddress+0x408>
		__ticks = 1;
    4178:	81 e0       	ldi	r24, 0x01	; 1
    417a:	90 e0       	ldi	r25, 0x00	; 0
    417c:	9c 8b       	std	Y+20, r25	; 0x14
    417e:	8b 8b       	std	Y+19, r24	; 0x13
    4180:	3f c0       	rjmp	.+126    	; 0x4200 <GLCD_enuSetAddress+0x486>
	else if (__tmp > 65535)
    4182:	6d 89       	ldd	r22, Y+21	; 0x15
    4184:	7e 89       	ldd	r23, Y+22	; 0x16
    4186:	8f 89       	ldd	r24, Y+23	; 0x17
    4188:	98 8d       	ldd	r25, Y+24	; 0x18
    418a:	20 e0       	ldi	r18, 0x00	; 0
    418c:	3f ef       	ldi	r19, 0xFF	; 255
    418e:	4f e7       	ldi	r20, 0x7F	; 127
    4190:	57 e4       	ldi	r21, 0x47	; 71
    4192:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4196:	18 16       	cp	r1, r24
    4198:	4c f5       	brge	.+82     	; 0x41ec <GLCD_enuSetAddress+0x472>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    419a:	69 8d       	ldd	r22, Y+25	; 0x19
    419c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    419e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    41a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    41a2:	20 e0       	ldi	r18, 0x00	; 0
    41a4:	30 e0       	ldi	r19, 0x00	; 0
    41a6:	40 e2       	ldi	r20, 0x20	; 32
    41a8:	51 e4       	ldi	r21, 0x41	; 65
    41aa:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    41ae:	dc 01       	movw	r26, r24
    41b0:	cb 01       	movw	r24, r22
    41b2:	bc 01       	movw	r22, r24
    41b4:	cd 01       	movw	r24, r26
    41b6:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    41ba:	dc 01       	movw	r26, r24
    41bc:	cb 01       	movw	r24, r22
    41be:	9c 8b       	std	Y+20, r25	; 0x14
    41c0:	8b 8b       	std	Y+19, r24	; 0x13
    41c2:	0f c0       	rjmp	.+30     	; 0x41e2 <GLCD_enuSetAddress+0x468>
    41c4:	80 e9       	ldi	r24, 0x90	; 144
    41c6:	91 e0       	ldi	r25, 0x01	; 1
    41c8:	9a 8b       	std	Y+18, r25	; 0x12
    41ca:	89 8b       	std	Y+17, r24	; 0x11
    41cc:	89 89       	ldd	r24, Y+17	; 0x11
    41ce:	9a 89       	ldd	r25, Y+18	; 0x12
    41d0:	01 97       	sbiw	r24, 0x01	; 1
    41d2:	f1 f7       	brne	.-4      	; 0x41d0 <GLCD_enuSetAddress+0x456>
    41d4:	9a 8b       	std	Y+18, r25	; 0x12
    41d6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41d8:	8b 89       	ldd	r24, Y+19	; 0x13
    41da:	9c 89       	ldd	r25, Y+20	; 0x14
    41dc:	01 97       	sbiw	r24, 0x01	; 1
    41de:	9c 8b       	std	Y+20, r25	; 0x14
    41e0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41e2:	8b 89       	ldd	r24, Y+19	; 0x13
    41e4:	9c 89       	ldd	r25, Y+20	; 0x14
    41e6:	00 97       	sbiw	r24, 0x00	; 0
    41e8:	69 f7       	brne	.-38     	; 0x41c4 <GLCD_enuSetAddress+0x44a>
    41ea:	14 c0       	rjmp	.+40     	; 0x4214 <GLCD_enuSetAddress+0x49a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41ec:	6d 89       	ldd	r22, Y+21	; 0x15
    41ee:	7e 89       	ldd	r23, Y+22	; 0x16
    41f0:	8f 89       	ldd	r24, Y+23	; 0x17
    41f2:	98 8d       	ldd	r25, Y+24	; 0x18
    41f4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    41f8:	dc 01       	movw	r26, r24
    41fa:	cb 01       	movw	r24, r22
    41fc:	9c 8b       	std	Y+20, r25	; 0x14
    41fe:	8b 8b       	std	Y+19, r24	; 0x13
    4200:	8b 89       	ldd	r24, Y+19	; 0x13
    4202:	9c 89       	ldd	r25, Y+20	; 0x14
    4204:	98 8b       	std	Y+16, r25	; 0x10
    4206:	8f 87       	std	Y+15, r24	; 0x0f
    4208:	8f 85       	ldd	r24, Y+15	; 0x0f
    420a:	98 89       	ldd	r25, Y+16	; 0x10
    420c:	01 97       	sbiw	r24, 0x01	; 1
    420e:	f1 f7       	brne	.-4      	; 0x420c <GLCD_enuSetAddress+0x492>
    4210:	98 8b       	std	Y+16, r25	; 0x10
    4212:	8f 87       	std	Y+15, r24	; 0x0f



		_delay_ms(2);
		    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    4214:	80 e0       	ldi	r24, 0x00	; 0
    4216:	62 e0       	ldi	r22, 0x02	; 2
    4218:	41 e0       	ldi	r20, 0x01	; 1
    421a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    421e:	80 e0       	ldi	r24, 0x00	; 0
    4220:	90 e0       	ldi	r25, 0x00	; 0
    4222:	a0 e8       	ldi	r26, 0x80	; 128
    4224:	bf e3       	ldi	r27, 0x3F	; 63
    4226:	8b 87       	std	Y+11, r24	; 0x0b
    4228:	9c 87       	std	Y+12, r25	; 0x0c
    422a:	ad 87       	std	Y+13, r26	; 0x0d
    422c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    422e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4230:	7c 85       	ldd	r23, Y+12	; 0x0c
    4232:	8d 85       	ldd	r24, Y+13	; 0x0d
    4234:	9e 85       	ldd	r25, Y+14	; 0x0e
    4236:	20 e0       	ldi	r18, 0x00	; 0
    4238:	30 e0       	ldi	r19, 0x00	; 0
    423a:	4a e7       	ldi	r20, 0x7A	; 122
    423c:	55 e4       	ldi	r21, 0x45	; 69
    423e:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4242:	dc 01       	movw	r26, r24
    4244:	cb 01       	movw	r24, r22
    4246:	8f 83       	std	Y+7, r24	; 0x07
    4248:	98 87       	std	Y+8, r25	; 0x08
    424a:	a9 87       	std	Y+9, r26	; 0x09
    424c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    424e:	6f 81       	ldd	r22, Y+7	; 0x07
    4250:	78 85       	ldd	r23, Y+8	; 0x08
    4252:	89 85       	ldd	r24, Y+9	; 0x09
    4254:	9a 85       	ldd	r25, Y+10	; 0x0a
    4256:	20 e0       	ldi	r18, 0x00	; 0
    4258:	30 e0       	ldi	r19, 0x00	; 0
    425a:	40 e8       	ldi	r20, 0x80	; 128
    425c:	5f e3       	ldi	r21, 0x3F	; 63
    425e:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4262:	88 23       	and	r24, r24
    4264:	2c f4       	brge	.+10     	; 0x4270 <GLCD_enuSetAddress+0x4f6>
		__ticks = 1;
    4266:	81 e0       	ldi	r24, 0x01	; 1
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	9e 83       	std	Y+6, r25	; 0x06
    426c:	8d 83       	std	Y+5, r24	; 0x05
    426e:	3f c0       	rjmp	.+126    	; 0x42ee <GLCD_enuSetAddress+0x574>
	else if (__tmp > 65535)
    4270:	6f 81       	ldd	r22, Y+7	; 0x07
    4272:	78 85       	ldd	r23, Y+8	; 0x08
    4274:	89 85       	ldd	r24, Y+9	; 0x09
    4276:	9a 85       	ldd	r25, Y+10	; 0x0a
    4278:	20 e0       	ldi	r18, 0x00	; 0
    427a:	3f ef       	ldi	r19, 0xFF	; 255
    427c:	4f e7       	ldi	r20, 0x7F	; 127
    427e:	57 e4       	ldi	r21, 0x47	; 71
    4280:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4284:	18 16       	cp	r1, r24
    4286:	4c f5       	brge	.+82     	; 0x42da <GLCD_enuSetAddress+0x560>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4288:	6b 85       	ldd	r22, Y+11	; 0x0b
    428a:	7c 85       	ldd	r23, Y+12	; 0x0c
    428c:	8d 85       	ldd	r24, Y+13	; 0x0d
    428e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4290:	20 e0       	ldi	r18, 0x00	; 0
    4292:	30 e0       	ldi	r19, 0x00	; 0
    4294:	40 e2       	ldi	r20, 0x20	; 32
    4296:	51 e4       	ldi	r21, 0x41	; 65
    4298:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    429c:	dc 01       	movw	r26, r24
    429e:	cb 01       	movw	r24, r22
    42a0:	bc 01       	movw	r22, r24
    42a2:	cd 01       	movw	r24, r26
    42a4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    42a8:	dc 01       	movw	r26, r24
    42aa:	cb 01       	movw	r24, r22
    42ac:	9e 83       	std	Y+6, r25	; 0x06
    42ae:	8d 83       	std	Y+5, r24	; 0x05
    42b0:	0f c0       	rjmp	.+30     	; 0x42d0 <GLCD_enuSetAddress+0x556>
    42b2:	80 e9       	ldi	r24, 0x90	; 144
    42b4:	91 e0       	ldi	r25, 0x01	; 1
    42b6:	9c 83       	std	Y+4, r25	; 0x04
    42b8:	8b 83       	std	Y+3, r24	; 0x03
    42ba:	8b 81       	ldd	r24, Y+3	; 0x03
    42bc:	9c 81       	ldd	r25, Y+4	; 0x04
    42be:	01 97       	sbiw	r24, 0x01	; 1
    42c0:	f1 f7       	brne	.-4      	; 0x42be <GLCD_enuSetAddress+0x544>
    42c2:	9c 83       	std	Y+4, r25	; 0x04
    42c4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42c6:	8d 81       	ldd	r24, Y+5	; 0x05
    42c8:	9e 81       	ldd	r25, Y+6	; 0x06
    42ca:	01 97       	sbiw	r24, 0x01	; 1
    42cc:	9e 83       	std	Y+6, r25	; 0x06
    42ce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42d0:	8d 81       	ldd	r24, Y+5	; 0x05
    42d2:	9e 81       	ldd	r25, Y+6	; 0x06
    42d4:	00 97       	sbiw	r24, 0x00	; 0
    42d6:	69 f7       	brne	.-38     	; 0x42b2 <GLCD_enuSetAddress+0x538>
    42d8:	14 c0       	rjmp	.+40     	; 0x4302 <GLCD_enuSetAddress+0x588>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42da:	6f 81       	ldd	r22, Y+7	; 0x07
    42dc:	78 85       	ldd	r23, Y+8	; 0x08
    42de:	89 85       	ldd	r24, Y+9	; 0x09
    42e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    42e2:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    42e6:	dc 01       	movw	r26, r24
    42e8:	cb 01       	movw	r24, r22
    42ea:	9e 83       	std	Y+6, r25	; 0x06
    42ec:	8d 83       	std	Y+5, r24	; 0x05
    42ee:	8d 81       	ldd	r24, Y+5	; 0x05
    42f0:	9e 81       	ldd	r25, Y+6	; 0x06
    42f2:	9a 83       	std	Y+2, r25	; 0x02
    42f4:	89 83       	std	Y+1, r24	; 0x01
    42f6:	89 81       	ldd	r24, Y+1	; 0x01
    42f8:	9a 81       	ldd	r25, Y+2	; 0x02
    42fa:	01 97       	sbiw	r24, 0x01	; 1
    42fc:	f1 f7       	brne	.-4      	; 0x42fa <GLCD_enuSetAddress+0x580>
    42fe:	9a 83       	std	Y+2, r25	; 0x02
    4300:	89 83       	std	Y+1, r24	; 0x01
		    _delay_ms(1);
		    DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    4302:	80 e0       	ldi	r24, 0x00	; 0
    4304:	62 e0       	ldi	r22, 0x02	; 2
    4306:	40 e0       	ldi	r20, 0x00	; 0
    4308:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>


	}
}
    430c:	ea 96       	adiw	r28, 0x3a	; 58
    430e:	0f b6       	in	r0, 0x3f	; 63
    4310:	f8 94       	cli
    4312:	de bf       	out	0x3e, r29	; 62
    4314:	0f be       	out	0x3f, r0	; 63
    4316:	cd bf       	out	0x3d, r28	; 61
    4318:	cf 91       	pop	r28
    431a:	df 91       	pop	r29
    431c:	08 95       	ret

0000431e <GLCD_enuSetPage>:

ES_t GLCD_enuSetPage(u8 Copy_u8Page){
    431e:	df 93       	push	r29
    4320:	cf 93       	push	r28
    4322:	cd b7       	in	r28, 0x3d	; 61
    4324:	de b7       	in	r29, 0x3e	; 62
    4326:	ac 97       	sbiw	r28, 0x2c	; 44
    4328:	0f b6       	in	r0, 0x3f	; 63
    432a:	f8 94       	cli
    432c:	de bf       	out	0x3e, r29	; 62
    432e:	0f be       	out	0x3f, r0	; 63
    4330:	cd bf       	out	0x3d, r28	; 61
    4332:	8b a7       	std	Y+43, r24	; 0x2b
    4334:	80 e0       	ldi	r24, 0x00	; 0
    4336:	90 e0       	ldi	r25, 0x00	; 0
    4338:	a0 e4       	ldi	r26, 0x40	; 64
    433a:	b0 e4       	ldi	r27, 0x40	; 64
    433c:	8f a3       	std	Y+39, r24	; 0x27
    433e:	98 a7       	std	Y+40, r25	; 0x28
    4340:	a9 a7       	std	Y+41, r26	; 0x29
    4342:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4344:	6f a1       	ldd	r22, Y+39	; 0x27
    4346:	78 a5       	ldd	r23, Y+40	; 0x28
    4348:	89 a5       	ldd	r24, Y+41	; 0x29
    434a:	9a a5       	ldd	r25, Y+42	; 0x2a
    434c:	20 e0       	ldi	r18, 0x00	; 0
    434e:	30 e0       	ldi	r19, 0x00	; 0
    4350:	4a e7       	ldi	r20, 0x7A	; 122
    4352:	55 e4       	ldi	r21, 0x45	; 69
    4354:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4358:	dc 01       	movw	r26, r24
    435a:	cb 01       	movw	r24, r22
    435c:	8b a3       	std	Y+35, r24	; 0x23
    435e:	9c a3       	std	Y+36, r25	; 0x24
    4360:	ad a3       	std	Y+37, r26	; 0x25
    4362:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4364:	6b a1       	ldd	r22, Y+35	; 0x23
    4366:	7c a1       	ldd	r23, Y+36	; 0x24
    4368:	8d a1       	ldd	r24, Y+37	; 0x25
    436a:	9e a1       	ldd	r25, Y+38	; 0x26
    436c:	20 e0       	ldi	r18, 0x00	; 0
    436e:	30 e0       	ldi	r19, 0x00	; 0
    4370:	40 e8       	ldi	r20, 0x80	; 128
    4372:	5f e3       	ldi	r21, 0x3F	; 63
    4374:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4378:	88 23       	and	r24, r24
    437a:	2c f4       	brge	.+10     	; 0x4386 <GLCD_enuSetPage+0x68>
		__ticks = 1;
    437c:	81 e0       	ldi	r24, 0x01	; 1
    437e:	90 e0       	ldi	r25, 0x00	; 0
    4380:	9a a3       	std	Y+34, r25	; 0x22
    4382:	89 a3       	std	Y+33, r24	; 0x21
    4384:	3f c0       	rjmp	.+126    	; 0x4404 <GLCD_enuSetPage+0xe6>
	else if (__tmp > 65535)
    4386:	6b a1       	ldd	r22, Y+35	; 0x23
    4388:	7c a1       	ldd	r23, Y+36	; 0x24
    438a:	8d a1       	ldd	r24, Y+37	; 0x25
    438c:	9e a1       	ldd	r25, Y+38	; 0x26
    438e:	20 e0       	ldi	r18, 0x00	; 0
    4390:	3f ef       	ldi	r19, 0xFF	; 255
    4392:	4f e7       	ldi	r20, 0x7F	; 127
    4394:	57 e4       	ldi	r21, 0x47	; 71
    4396:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    439a:	18 16       	cp	r1, r24
    439c:	4c f5       	brge	.+82     	; 0x43f0 <GLCD_enuSetPage+0xd2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    439e:	6f a1       	ldd	r22, Y+39	; 0x27
    43a0:	78 a5       	ldd	r23, Y+40	; 0x28
    43a2:	89 a5       	ldd	r24, Y+41	; 0x29
    43a4:	9a a5       	ldd	r25, Y+42	; 0x2a
    43a6:	20 e0       	ldi	r18, 0x00	; 0
    43a8:	30 e0       	ldi	r19, 0x00	; 0
    43aa:	40 e2       	ldi	r20, 0x20	; 32
    43ac:	51 e4       	ldi	r21, 0x41	; 65
    43ae:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    43b2:	dc 01       	movw	r26, r24
    43b4:	cb 01       	movw	r24, r22
    43b6:	bc 01       	movw	r22, r24
    43b8:	cd 01       	movw	r24, r26
    43ba:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    43be:	dc 01       	movw	r26, r24
    43c0:	cb 01       	movw	r24, r22
    43c2:	9a a3       	std	Y+34, r25	; 0x22
    43c4:	89 a3       	std	Y+33, r24	; 0x21
    43c6:	0f c0       	rjmp	.+30     	; 0x43e6 <GLCD_enuSetPage+0xc8>
    43c8:	80 e9       	ldi	r24, 0x90	; 144
    43ca:	91 e0       	ldi	r25, 0x01	; 1
    43cc:	98 a3       	std	Y+32, r25	; 0x20
    43ce:	8f 8f       	std	Y+31, r24	; 0x1f
    43d0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    43d2:	98 a1       	ldd	r25, Y+32	; 0x20
    43d4:	01 97       	sbiw	r24, 0x01	; 1
    43d6:	f1 f7       	brne	.-4      	; 0x43d4 <GLCD_enuSetPage+0xb6>
    43d8:	98 a3       	std	Y+32, r25	; 0x20
    43da:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43dc:	89 a1       	ldd	r24, Y+33	; 0x21
    43de:	9a a1       	ldd	r25, Y+34	; 0x22
    43e0:	01 97       	sbiw	r24, 0x01	; 1
    43e2:	9a a3       	std	Y+34, r25	; 0x22
    43e4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43e6:	89 a1       	ldd	r24, Y+33	; 0x21
    43e8:	9a a1       	ldd	r25, Y+34	; 0x22
    43ea:	00 97       	sbiw	r24, 0x00	; 0
    43ec:	69 f7       	brne	.-38     	; 0x43c8 <GLCD_enuSetPage+0xaa>
    43ee:	14 c0       	rjmp	.+40     	; 0x4418 <GLCD_enuSetPage+0xfa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43f0:	6b a1       	ldd	r22, Y+35	; 0x23
    43f2:	7c a1       	ldd	r23, Y+36	; 0x24
    43f4:	8d a1       	ldd	r24, Y+37	; 0x25
    43f6:	9e a1       	ldd	r25, Y+38	; 0x26
    43f8:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    43fc:	dc 01       	movw	r26, r24
    43fe:	cb 01       	movw	r24, r22
    4400:	9a a3       	std	Y+34, r25	; 0x22
    4402:	89 a3       	std	Y+33, r24	; 0x21
    4404:	89 a1       	ldd	r24, Y+33	; 0x21
    4406:	9a a1       	ldd	r25, Y+34	; 0x22
    4408:	9e 8f       	std	Y+30, r25	; 0x1e
    440a:	8d 8f       	std	Y+29, r24	; 0x1d
    440c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    440e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4410:	01 97       	sbiw	r24, 0x01	; 1
    4412:	f1 f7       	brne	.-4      	; 0x4410 <GLCD_enuSetPage+0xf2>
    4414:	9e 8f       	std	Y+30, r25	; 0x1e
    4416:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(3);
	LOCAL_u8Page=Copy_u8Page;
    4418:	8b a5       	ldd	r24, Y+43	; 0x2b
    441a:	80 93 b4 01 	sts	0x01B4, r24

	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RS, DIO_LOW);
    441e:	80 e0       	ldi	r24, 0x00	; 0
    4420:	65 e0       	ldi	r22, 0x05	; 5
    4422:	40 e0       	ldi	r20, 0x00	; 0
    4424:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_RW, DIO_LOW);
    4428:	80 e0       	ldi	r24, 0x00	; 0
    442a:	61 e0       	ldi	r22, 0x01	; 1
    442c:	40 e0       	ldi	r20, 0x00	; 0
    442e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Page >> 0) & 1));
    4432:	8b a5       	ldd	r24, Y+43	; 0x2b
    4434:	98 2f       	mov	r25, r24
    4436:	91 70       	andi	r25, 0x01	; 1
    4438:	81 e0       	ldi	r24, 0x01	; 1
    443a:	60 e0       	ldi	r22, 0x00	; 0
    443c:	49 2f       	mov	r20, r25
    443e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Page >> 1) & 1));
    4442:	8b a5       	ldd	r24, Y+43	; 0x2b
    4444:	86 95       	lsr	r24
    4446:	98 2f       	mov	r25, r24
    4448:	91 70       	andi	r25, 0x01	; 1
    444a:	81 e0       	ldi	r24, 0x01	; 1
    444c:	61 e0       	ldi	r22, 0x01	; 1
    444e:	49 2f       	mov	r20, r25
    4450:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Page >> 2) & 1));
    4454:	8b a5       	ldd	r24, Y+43	; 0x2b
    4456:	86 95       	lsr	r24
    4458:	86 95       	lsr	r24
    445a:	98 2f       	mov	r25, r24
    445c:	91 70       	andi	r25, 0x01	; 1
    445e:	81 e0       	ldi	r24, 0x01	; 1
    4460:	62 e0       	ldi	r22, 0x02	; 2
    4462:	49 2f       	mov	r20, r25
    4464:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,DIO_HIGH);
    4468:	81 e0       	ldi	r24, 0x01	; 1
    446a:	63 e0       	ldi	r22, 0x03	; 3
    446c:	41 e0       	ldi	r20, 0x01	; 1
    446e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,DIO_HIGH);
    4472:	81 e0       	ldi	r24, 0x01	; 1
    4474:	64 e0       	ldi	r22, 0x04	; 4
    4476:	41 e0       	ldi	r20, 0x01	; 1
    4478:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,DIO_HIGH);
    447c:	81 e0       	ldi	r24, 0x01	; 1
    447e:	65 e0       	ldi	r22, 0x05	; 5
    4480:	41 e0       	ldi	r20, 0x01	; 1
    4482:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_LOW);
    4486:	81 e0       	ldi	r24, 0x01	; 1
    4488:	66 e0       	ldi	r22, 0x06	; 6
    448a:	40 e0       	ldi	r20, 0x00	; 0
    448c:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_HIGH);
    4490:	81 e0       	ldi	r24, 0x01	; 1
    4492:	67 e0       	ldi	r22, 0x07	; 7
    4494:	41 e0       	ldi	r20, 0x01	; 1
    4496:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    449a:	80 e0       	ldi	r24, 0x00	; 0
    449c:	90 e0       	ldi	r25, 0x00	; 0
    449e:	a0 e8       	ldi	r26, 0x80	; 128
    44a0:	bf e3       	ldi	r27, 0x3F	; 63
    44a2:	89 8f       	std	Y+25, r24	; 0x19
    44a4:	9a 8f       	std	Y+26, r25	; 0x1a
    44a6:	ab 8f       	std	Y+27, r26	; 0x1b
    44a8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44aa:	69 8d       	ldd	r22, Y+25	; 0x19
    44ac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    44ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    44b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    44b2:	20 e0       	ldi	r18, 0x00	; 0
    44b4:	30 e0       	ldi	r19, 0x00	; 0
    44b6:	4a e7       	ldi	r20, 0x7A	; 122
    44b8:	55 e4       	ldi	r21, 0x45	; 69
    44ba:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    44be:	dc 01       	movw	r26, r24
    44c0:	cb 01       	movw	r24, r22
    44c2:	8d 8b       	std	Y+21, r24	; 0x15
    44c4:	9e 8b       	std	Y+22, r25	; 0x16
    44c6:	af 8b       	std	Y+23, r26	; 0x17
    44c8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    44ca:	6d 89       	ldd	r22, Y+21	; 0x15
    44cc:	7e 89       	ldd	r23, Y+22	; 0x16
    44ce:	8f 89       	ldd	r24, Y+23	; 0x17
    44d0:	98 8d       	ldd	r25, Y+24	; 0x18
    44d2:	20 e0       	ldi	r18, 0x00	; 0
    44d4:	30 e0       	ldi	r19, 0x00	; 0
    44d6:	40 e8       	ldi	r20, 0x80	; 128
    44d8:	5f e3       	ldi	r21, 0x3F	; 63
    44da:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    44de:	88 23       	and	r24, r24
    44e0:	2c f4       	brge	.+10     	; 0x44ec <GLCD_enuSetPage+0x1ce>
		__ticks = 1;
    44e2:	81 e0       	ldi	r24, 0x01	; 1
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	9c 8b       	std	Y+20, r25	; 0x14
    44e8:	8b 8b       	std	Y+19, r24	; 0x13
    44ea:	3f c0       	rjmp	.+126    	; 0x456a <GLCD_enuSetPage+0x24c>
	else if (__tmp > 65535)
    44ec:	6d 89       	ldd	r22, Y+21	; 0x15
    44ee:	7e 89       	ldd	r23, Y+22	; 0x16
    44f0:	8f 89       	ldd	r24, Y+23	; 0x17
    44f2:	98 8d       	ldd	r25, Y+24	; 0x18
    44f4:	20 e0       	ldi	r18, 0x00	; 0
    44f6:	3f ef       	ldi	r19, 0xFF	; 255
    44f8:	4f e7       	ldi	r20, 0x7F	; 127
    44fa:	57 e4       	ldi	r21, 0x47	; 71
    44fc:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4500:	18 16       	cp	r1, r24
    4502:	4c f5       	brge	.+82     	; 0x4556 <GLCD_enuSetPage+0x238>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4504:	69 8d       	ldd	r22, Y+25	; 0x19
    4506:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4508:	8b 8d       	ldd	r24, Y+27	; 0x1b
    450a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    450c:	20 e0       	ldi	r18, 0x00	; 0
    450e:	30 e0       	ldi	r19, 0x00	; 0
    4510:	40 e2       	ldi	r20, 0x20	; 32
    4512:	51 e4       	ldi	r21, 0x41	; 65
    4514:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4518:	dc 01       	movw	r26, r24
    451a:	cb 01       	movw	r24, r22
    451c:	bc 01       	movw	r22, r24
    451e:	cd 01       	movw	r24, r26
    4520:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4524:	dc 01       	movw	r26, r24
    4526:	cb 01       	movw	r24, r22
    4528:	9c 8b       	std	Y+20, r25	; 0x14
    452a:	8b 8b       	std	Y+19, r24	; 0x13
    452c:	0f c0       	rjmp	.+30     	; 0x454c <GLCD_enuSetPage+0x22e>
    452e:	80 e9       	ldi	r24, 0x90	; 144
    4530:	91 e0       	ldi	r25, 0x01	; 1
    4532:	9a 8b       	std	Y+18, r25	; 0x12
    4534:	89 8b       	std	Y+17, r24	; 0x11
    4536:	89 89       	ldd	r24, Y+17	; 0x11
    4538:	9a 89       	ldd	r25, Y+18	; 0x12
    453a:	01 97       	sbiw	r24, 0x01	; 1
    453c:	f1 f7       	brne	.-4      	; 0x453a <GLCD_enuSetPage+0x21c>
    453e:	9a 8b       	std	Y+18, r25	; 0x12
    4540:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4542:	8b 89       	ldd	r24, Y+19	; 0x13
    4544:	9c 89       	ldd	r25, Y+20	; 0x14
    4546:	01 97       	sbiw	r24, 0x01	; 1
    4548:	9c 8b       	std	Y+20, r25	; 0x14
    454a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    454c:	8b 89       	ldd	r24, Y+19	; 0x13
    454e:	9c 89       	ldd	r25, Y+20	; 0x14
    4550:	00 97       	sbiw	r24, 0x00	; 0
    4552:	69 f7       	brne	.-38     	; 0x452e <GLCD_enuSetPage+0x210>
    4554:	14 c0       	rjmp	.+40     	; 0x457e <GLCD_enuSetPage+0x260>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4556:	6d 89       	ldd	r22, Y+21	; 0x15
    4558:	7e 89       	ldd	r23, Y+22	; 0x16
    455a:	8f 89       	ldd	r24, Y+23	; 0x17
    455c:	98 8d       	ldd	r25, Y+24	; 0x18
    455e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4562:	dc 01       	movw	r26, r24
    4564:	cb 01       	movw	r24, r22
    4566:	9c 8b       	std	Y+20, r25	; 0x14
    4568:	8b 8b       	std	Y+19, r24	; 0x13
    456a:	8b 89       	ldd	r24, Y+19	; 0x13
    456c:	9c 89       	ldd	r25, Y+20	; 0x14
    456e:	98 8b       	std	Y+16, r25	; 0x10
    4570:	8f 87       	std	Y+15, r24	; 0x0f
    4572:	8f 85       	ldd	r24, Y+15	; 0x0f
    4574:	98 89       	ldd	r25, Y+16	; 0x10
    4576:	01 97       	sbiw	r24, 0x01	; 1
    4578:	f1 f7       	brne	.-4      	; 0x4576 <GLCD_enuSetPage+0x258>
    457a:	98 8b       	std	Y+16, r25	; 0x10
    457c:	8f 87       	std	Y+15, r24	; 0x0f


    _delay_ms(1);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    457e:	80 e0       	ldi	r24, 0x00	; 0
    4580:	62 e0       	ldi	r22, 0x02	; 2
    4582:	41 e0       	ldi	r20, 0x01	; 1
    4584:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4588:	80 e0       	ldi	r24, 0x00	; 0
    458a:	90 e0       	ldi	r25, 0x00	; 0
    458c:	a0 e8       	ldi	r26, 0x80	; 128
    458e:	bf e3       	ldi	r27, 0x3F	; 63
    4590:	8b 87       	std	Y+11, r24	; 0x0b
    4592:	9c 87       	std	Y+12, r25	; 0x0c
    4594:	ad 87       	std	Y+13, r26	; 0x0d
    4596:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4598:	6b 85       	ldd	r22, Y+11	; 0x0b
    459a:	7c 85       	ldd	r23, Y+12	; 0x0c
    459c:	8d 85       	ldd	r24, Y+13	; 0x0d
    459e:	9e 85       	ldd	r25, Y+14	; 0x0e
    45a0:	20 e0       	ldi	r18, 0x00	; 0
    45a2:	30 e0       	ldi	r19, 0x00	; 0
    45a4:	4a e7       	ldi	r20, 0x7A	; 122
    45a6:	55 e4       	ldi	r21, 0x45	; 69
    45a8:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    45ac:	dc 01       	movw	r26, r24
    45ae:	cb 01       	movw	r24, r22
    45b0:	8f 83       	std	Y+7, r24	; 0x07
    45b2:	98 87       	std	Y+8, r25	; 0x08
    45b4:	a9 87       	std	Y+9, r26	; 0x09
    45b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    45b8:	6f 81       	ldd	r22, Y+7	; 0x07
    45ba:	78 85       	ldd	r23, Y+8	; 0x08
    45bc:	89 85       	ldd	r24, Y+9	; 0x09
    45be:	9a 85       	ldd	r25, Y+10	; 0x0a
    45c0:	20 e0       	ldi	r18, 0x00	; 0
    45c2:	30 e0       	ldi	r19, 0x00	; 0
    45c4:	40 e8       	ldi	r20, 0x80	; 128
    45c6:	5f e3       	ldi	r21, 0x3F	; 63
    45c8:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    45cc:	88 23       	and	r24, r24
    45ce:	2c f4       	brge	.+10     	; 0x45da <GLCD_enuSetPage+0x2bc>
		__ticks = 1;
    45d0:	81 e0       	ldi	r24, 0x01	; 1
    45d2:	90 e0       	ldi	r25, 0x00	; 0
    45d4:	9e 83       	std	Y+6, r25	; 0x06
    45d6:	8d 83       	std	Y+5, r24	; 0x05
    45d8:	3f c0       	rjmp	.+126    	; 0x4658 <GLCD_enuSetPage+0x33a>
	else if (__tmp > 65535)
    45da:	6f 81       	ldd	r22, Y+7	; 0x07
    45dc:	78 85       	ldd	r23, Y+8	; 0x08
    45de:	89 85       	ldd	r24, Y+9	; 0x09
    45e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    45e2:	20 e0       	ldi	r18, 0x00	; 0
    45e4:	3f ef       	ldi	r19, 0xFF	; 255
    45e6:	4f e7       	ldi	r20, 0x7F	; 127
    45e8:	57 e4       	ldi	r21, 0x47	; 71
    45ea:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    45ee:	18 16       	cp	r1, r24
    45f0:	4c f5       	brge	.+82     	; 0x4644 <GLCD_enuSetPage+0x326>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    45f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    45f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    45f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    45fa:	20 e0       	ldi	r18, 0x00	; 0
    45fc:	30 e0       	ldi	r19, 0x00	; 0
    45fe:	40 e2       	ldi	r20, 0x20	; 32
    4600:	51 e4       	ldi	r21, 0x41	; 65
    4602:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4606:	dc 01       	movw	r26, r24
    4608:	cb 01       	movw	r24, r22
    460a:	bc 01       	movw	r22, r24
    460c:	cd 01       	movw	r24, r26
    460e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4612:	dc 01       	movw	r26, r24
    4614:	cb 01       	movw	r24, r22
    4616:	9e 83       	std	Y+6, r25	; 0x06
    4618:	8d 83       	std	Y+5, r24	; 0x05
    461a:	0f c0       	rjmp	.+30     	; 0x463a <GLCD_enuSetPage+0x31c>
    461c:	80 e9       	ldi	r24, 0x90	; 144
    461e:	91 e0       	ldi	r25, 0x01	; 1
    4620:	9c 83       	std	Y+4, r25	; 0x04
    4622:	8b 83       	std	Y+3, r24	; 0x03
    4624:	8b 81       	ldd	r24, Y+3	; 0x03
    4626:	9c 81       	ldd	r25, Y+4	; 0x04
    4628:	01 97       	sbiw	r24, 0x01	; 1
    462a:	f1 f7       	brne	.-4      	; 0x4628 <GLCD_enuSetPage+0x30a>
    462c:	9c 83       	std	Y+4, r25	; 0x04
    462e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4630:	8d 81       	ldd	r24, Y+5	; 0x05
    4632:	9e 81       	ldd	r25, Y+6	; 0x06
    4634:	01 97       	sbiw	r24, 0x01	; 1
    4636:	9e 83       	std	Y+6, r25	; 0x06
    4638:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    463a:	8d 81       	ldd	r24, Y+5	; 0x05
    463c:	9e 81       	ldd	r25, Y+6	; 0x06
    463e:	00 97       	sbiw	r24, 0x00	; 0
    4640:	69 f7       	brne	.-38     	; 0x461c <GLCD_enuSetPage+0x2fe>
    4642:	14 c0       	rjmp	.+40     	; 0x466c <GLCD_enuSetPage+0x34e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4644:	6f 81       	ldd	r22, Y+7	; 0x07
    4646:	78 85       	ldd	r23, Y+8	; 0x08
    4648:	89 85       	ldd	r24, Y+9	; 0x09
    464a:	9a 85       	ldd	r25, Y+10	; 0x0a
    464c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4650:	dc 01       	movw	r26, r24
    4652:	cb 01       	movw	r24, r22
    4654:	9e 83       	std	Y+6, r25	; 0x06
    4656:	8d 83       	std	Y+5, r24	; 0x05
    4658:	8d 81       	ldd	r24, Y+5	; 0x05
    465a:	9e 81       	ldd	r25, Y+6	; 0x06
    465c:	9a 83       	std	Y+2, r25	; 0x02
    465e:	89 83       	std	Y+1, r24	; 0x01
    4660:	89 81       	ldd	r24, Y+1	; 0x01
    4662:	9a 81       	ldd	r25, Y+2	; 0x02
    4664:	01 97       	sbiw	r24, 0x01	; 1
    4666:	f1 f7       	brne	.-4      	; 0x4664 <GLCD_enuSetPage+0x346>
    4668:	9a 83       	std	Y+2, r25	; 0x02
    466a:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(1);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    466c:	80 e0       	ldi	r24, 0x00	; 0
    466e:	62 e0       	ldi	r22, 0x02	; 2
    4670:	40 e0       	ldi	r20, 0x00	; 0
    4672:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>




}
    4676:	ac 96       	adiw	r28, 0x2c	; 44
    4678:	0f b6       	in	r0, 0x3f	; 63
    467a:	f8 94       	cli
    467c:	de bf       	out	0x3e, r29	; 62
    467e:	0f be       	out	0x3f, r0	; 63
    4680:	cd bf       	out	0x3d, r28	; 61
    4682:	cf 91       	pop	r28
    4684:	df 91       	pop	r29
    4686:	08 95       	ret

00004688 <GLCD_enuDisplayStartLine>:

ES_t GLCD_enuDisplayStartLine(u8 Copy_u8Start){
    4688:	df 93       	push	r29
    468a:	cf 93       	push	r28
    468c:	cd b7       	in	r28, 0x3d	; 61
    468e:	de b7       	in	r29, 0x3e	; 62
    4690:	6e 97       	sbiw	r28, 0x1e	; 30
    4692:	0f b6       	in	r0, 0x3f	; 63
    4694:	f8 94       	cli
    4696:	de bf       	out	0x3e, r29	; 62
    4698:	0f be       	out	0x3f, r0	; 63
    469a:	cd bf       	out	0x3d, r28	; 61
    469c:	8d 8f       	std	Y+29, r24	; 0x1d
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Start >> 0) & 1));
    469e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46a0:	98 2f       	mov	r25, r24
    46a2:	91 70       	andi	r25, 0x01	; 1
    46a4:	81 e0       	ldi	r24, 0x01	; 1
    46a6:	60 e0       	ldi	r22, 0x00	; 0
    46a8:	49 2f       	mov	r20, r25
    46aa:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Start >> 1) & 1));
    46ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46b0:	86 95       	lsr	r24
    46b2:	98 2f       	mov	r25, r24
    46b4:	91 70       	andi	r25, 0x01	; 1
    46b6:	81 e0       	ldi	r24, 0x01	; 1
    46b8:	61 e0       	ldi	r22, 0x01	; 1
    46ba:	49 2f       	mov	r20, r25
    46bc:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Start >> 2) & 1));
    46c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46c2:	86 95       	lsr	r24
    46c4:	86 95       	lsr	r24
    46c6:	98 2f       	mov	r25, r24
    46c8:	91 70       	andi	r25, 0x01	; 1
    46ca:	81 e0       	ldi	r24, 0x01	; 1
    46cc:	62 e0       	ldi	r22, 0x02	; 2
    46ce:	49 2f       	mov	r20, r25
    46d0:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,((Copy_u8Start >> 3) & 1));
    46d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46d6:	86 95       	lsr	r24
    46d8:	86 95       	lsr	r24
    46da:	86 95       	lsr	r24
    46dc:	98 2f       	mov	r25, r24
    46de:	91 70       	andi	r25, 0x01	; 1
    46e0:	81 e0       	ldi	r24, 0x01	; 1
    46e2:	63 e0       	ldi	r22, 0x03	; 3
    46e4:	49 2f       	mov	r20, r25
    46e6:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,((Copy_u8Start >> 4) & 1));
    46ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46ec:	82 95       	swap	r24
    46ee:	8f 70       	andi	r24, 0x0F	; 15
    46f0:	98 2f       	mov	r25, r24
    46f2:	91 70       	andi	r25, 0x01	; 1
    46f4:	81 e0       	ldi	r24, 0x01	; 1
    46f6:	64 e0       	ldi	r22, 0x04	; 4
    46f8:	49 2f       	mov	r20, r25
    46fa:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,((Copy_u8Start >> 5) & 1));
    46fe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4700:	82 95       	swap	r24
    4702:	86 95       	lsr	r24
    4704:	87 70       	andi	r24, 0x07	; 7
    4706:	98 2f       	mov	r25, r24
    4708:	91 70       	andi	r25, 0x01	; 1
    470a:	81 e0       	ldi	r24, 0x01	; 1
    470c:	65 e0       	ldi	r22, 0x05	; 5
    470e:	49 2f       	mov	r20, r25
    4710:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,DIO_HIGH);
    4714:	81 e0       	ldi	r24, 0x01	; 1
    4716:	66 e0       	ldi	r22, 0x06	; 6
    4718:	41 e0       	ldi	r20, 0x01	; 1
    471a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,DIO_HIGH);
    471e:	81 e0       	ldi	r24, 0x01	; 1
    4720:	67 e0       	ldi	r22, 0x07	; 7
    4722:	41 e0       	ldi	r20, 0x01	; 1
    4724:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4728:	80 e0       	ldi	r24, 0x00	; 0
    472a:	90 e0       	ldi	r25, 0x00	; 0
    472c:	a0 e0       	ldi	r26, 0x00	; 0
    472e:	b0 e4       	ldi	r27, 0x40	; 64
    4730:	89 8f       	std	Y+25, r24	; 0x19
    4732:	9a 8f       	std	Y+26, r25	; 0x1a
    4734:	ab 8f       	std	Y+27, r26	; 0x1b
    4736:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4738:	69 8d       	ldd	r22, Y+25	; 0x19
    473a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    473c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    473e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4740:	20 e0       	ldi	r18, 0x00	; 0
    4742:	30 e0       	ldi	r19, 0x00	; 0
    4744:	4a e7       	ldi	r20, 0x7A	; 122
    4746:	55 e4       	ldi	r21, 0x45	; 69
    4748:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    474c:	dc 01       	movw	r26, r24
    474e:	cb 01       	movw	r24, r22
    4750:	8d 8b       	std	Y+21, r24	; 0x15
    4752:	9e 8b       	std	Y+22, r25	; 0x16
    4754:	af 8b       	std	Y+23, r26	; 0x17
    4756:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4758:	6d 89       	ldd	r22, Y+21	; 0x15
    475a:	7e 89       	ldd	r23, Y+22	; 0x16
    475c:	8f 89       	ldd	r24, Y+23	; 0x17
    475e:	98 8d       	ldd	r25, Y+24	; 0x18
    4760:	20 e0       	ldi	r18, 0x00	; 0
    4762:	30 e0       	ldi	r19, 0x00	; 0
    4764:	40 e8       	ldi	r20, 0x80	; 128
    4766:	5f e3       	ldi	r21, 0x3F	; 63
    4768:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    476c:	88 23       	and	r24, r24
    476e:	2c f4       	brge	.+10     	; 0x477a <GLCD_enuDisplayStartLine+0xf2>
		__ticks = 1;
    4770:	81 e0       	ldi	r24, 0x01	; 1
    4772:	90 e0       	ldi	r25, 0x00	; 0
    4774:	9c 8b       	std	Y+20, r25	; 0x14
    4776:	8b 8b       	std	Y+19, r24	; 0x13
    4778:	3f c0       	rjmp	.+126    	; 0x47f8 <GLCD_enuDisplayStartLine+0x170>
	else if (__tmp > 65535)
    477a:	6d 89       	ldd	r22, Y+21	; 0x15
    477c:	7e 89       	ldd	r23, Y+22	; 0x16
    477e:	8f 89       	ldd	r24, Y+23	; 0x17
    4780:	98 8d       	ldd	r25, Y+24	; 0x18
    4782:	20 e0       	ldi	r18, 0x00	; 0
    4784:	3f ef       	ldi	r19, 0xFF	; 255
    4786:	4f e7       	ldi	r20, 0x7F	; 127
    4788:	57 e4       	ldi	r21, 0x47	; 71
    478a:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    478e:	18 16       	cp	r1, r24
    4790:	4c f5       	brge	.+82     	; 0x47e4 <GLCD_enuDisplayStartLine+0x15c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4792:	69 8d       	ldd	r22, Y+25	; 0x19
    4794:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4796:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4798:	9c 8d       	ldd	r25, Y+28	; 0x1c
    479a:	20 e0       	ldi	r18, 0x00	; 0
    479c:	30 e0       	ldi	r19, 0x00	; 0
    479e:	40 e2       	ldi	r20, 0x20	; 32
    47a0:	51 e4       	ldi	r21, 0x41	; 65
    47a2:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    47a6:	dc 01       	movw	r26, r24
    47a8:	cb 01       	movw	r24, r22
    47aa:	bc 01       	movw	r22, r24
    47ac:	cd 01       	movw	r24, r26
    47ae:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    47b2:	dc 01       	movw	r26, r24
    47b4:	cb 01       	movw	r24, r22
    47b6:	9c 8b       	std	Y+20, r25	; 0x14
    47b8:	8b 8b       	std	Y+19, r24	; 0x13
    47ba:	0f c0       	rjmp	.+30     	; 0x47da <GLCD_enuDisplayStartLine+0x152>
    47bc:	80 e9       	ldi	r24, 0x90	; 144
    47be:	91 e0       	ldi	r25, 0x01	; 1
    47c0:	9a 8b       	std	Y+18, r25	; 0x12
    47c2:	89 8b       	std	Y+17, r24	; 0x11
    47c4:	89 89       	ldd	r24, Y+17	; 0x11
    47c6:	9a 89       	ldd	r25, Y+18	; 0x12
    47c8:	01 97       	sbiw	r24, 0x01	; 1
    47ca:	f1 f7       	brne	.-4      	; 0x47c8 <GLCD_enuDisplayStartLine+0x140>
    47cc:	9a 8b       	std	Y+18, r25	; 0x12
    47ce:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47d0:	8b 89       	ldd	r24, Y+19	; 0x13
    47d2:	9c 89       	ldd	r25, Y+20	; 0x14
    47d4:	01 97       	sbiw	r24, 0x01	; 1
    47d6:	9c 8b       	std	Y+20, r25	; 0x14
    47d8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47da:	8b 89       	ldd	r24, Y+19	; 0x13
    47dc:	9c 89       	ldd	r25, Y+20	; 0x14
    47de:	00 97       	sbiw	r24, 0x00	; 0
    47e0:	69 f7       	brne	.-38     	; 0x47bc <GLCD_enuDisplayStartLine+0x134>
    47e2:	14 c0       	rjmp	.+40     	; 0x480c <GLCD_enuDisplayStartLine+0x184>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47e4:	6d 89       	ldd	r22, Y+21	; 0x15
    47e6:	7e 89       	ldd	r23, Y+22	; 0x16
    47e8:	8f 89       	ldd	r24, Y+23	; 0x17
    47ea:	98 8d       	ldd	r25, Y+24	; 0x18
    47ec:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    47f0:	dc 01       	movw	r26, r24
    47f2:	cb 01       	movw	r24, r22
    47f4:	9c 8b       	std	Y+20, r25	; 0x14
    47f6:	8b 8b       	std	Y+19, r24	; 0x13
    47f8:	8b 89       	ldd	r24, Y+19	; 0x13
    47fa:	9c 89       	ldd	r25, Y+20	; 0x14
    47fc:	98 8b       	std	Y+16, r25	; 0x10
    47fe:	8f 87       	std	Y+15, r24	; 0x0f
    4800:	8f 85       	ldd	r24, Y+15	; 0x0f
    4802:	98 89       	ldd	r25, Y+16	; 0x10
    4804:	01 97       	sbiw	r24, 0x01	; 1
    4806:	f1 f7       	brne	.-4      	; 0x4804 <GLCD_enuDisplayStartLine+0x17c>
    4808:	98 8b       	std	Y+16, r25	; 0x10
    480a:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(2);
            DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    480c:	80 e0       	ldi	r24, 0x00	; 0
    480e:	62 e0       	ldi	r22, 0x02	; 2
    4810:	40 e0       	ldi	r20, 0x00	; 0
    4812:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4816:	80 e0       	ldi	r24, 0x00	; 0
    4818:	90 e0       	ldi	r25, 0x00	; 0
    481a:	a0 e8       	ldi	r26, 0x80	; 128
    481c:	bf e3       	ldi	r27, 0x3F	; 63
    481e:	8b 87       	std	Y+11, r24	; 0x0b
    4820:	9c 87       	std	Y+12, r25	; 0x0c
    4822:	ad 87       	std	Y+13, r26	; 0x0d
    4824:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4826:	6b 85       	ldd	r22, Y+11	; 0x0b
    4828:	7c 85       	ldd	r23, Y+12	; 0x0c
    482a:	8d 85       	ldd	r24, Y+13	; 0x0d
    482c:	9e 85       	ldd	r25, Y+14	; 0x0e
    482e:	20 e0       	ldi	r18, 0x00	; 0
    4830:	30 e0       	ldi	r19, 0x00	; 0
    4832:	4a e7       	ldi	r20, 0x7A	; 122
    4834:	55 e4       	ldi	r21, 0x45	; 69
    4836:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    483a:	dc 01       	movw	r26, r24
    483c:	cb 01       	movw	r24, r22
    483e:	8f 83       	std	Y+7, r24	; 0x07
    4840:	98 87       	std	Y+8, r25	; 0x08
    4842:	a9 87       	std	Y+9, r26	; 0x09
    4844:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4846:	6f 81       	ldd	r22, Y+7	; 0x07
    4848:	78 85       	ldd	r23, Y+8	; 0x08
    484a:	89 85       	ldd	r24, Y+9	; 0x09
    484c:	9a 85       	ldd	r25, Y+10	; 0x0a
    484e:	20 e0       	ldi	r18, 0x00	; 0
    4850:	30 e0       	ldi	r19, 0x00	; 0
    4852:	40 e8       	ldi	r20, 0x80	; 128
    4854:	5f e3       	ldi	r21, 0x3F	; 63
    4856:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    485a:	88 23       	and	r24, r24
    485c:	2c f4       	brge	.+10     	; 0x4868 <GLCD_enuDisplayStartLine+0x1e0>
		__ticks = 1;
    485e:	81 e0       	ldi	r24, 0x01	; 1
    4860:	90 e0       	ldi	r25, 0x00	; 0
    4862:	9e 83       	std	Y+6, r25	; 0x06
    4864:	8d 83       	std	Y+5, r24	; 0x05
    4866:	3f c0       	rjmp	.+126    	; 0x48e6 <GLCD_enuDisplayStartLine+0x25e>
	else if (__tmp > 65535)
    4868:	6f 81       	ldd	r22, Y+7	; 0x07
    486a:	78 85       	ldd	r23, Y+8	; 0x08
    486c:	89 85       	ldd	r24, Y+9	; 0x09
    486e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4870:	20 e0       	ldi	r18, 0x00	; 0
    4872:	3f ef       	ldi	r19, 0xFF	; 255
    4874:	4f e7       	ldi	r20, 0x7F	; 127
    4876:	57 e4       	ldi	r21, 0x47	; 71
    4878:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    487c:	18 16       	cp	r1, r24
    487e:	4c f5       	brge	.+82     	; 0x48d2 <GLCD_enuDisplayStartLine+0x24a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4880:	6b 85       	ldd	r22, Y+11	; 0x0b
    4882:	7c 85       	ldd	r23, Y+12	; 0x0c
    4884:	8d 85       	ldd	r24, Y+13	; 0x0d
    4886:	9e 85       	ldd	r25, Y+14	; 0x0e
    4888:	20 e0       	ldi	r18, 0x00	; 0
    488a:	30 e0       	ldi	r19, 0x00	; 0
    488c:	40 e2       	ldi	r20, 0x20	; 32
    488e:	51 e4       	ldi	r21, 0x41	; 65
    4890:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4894:	dc 01       	movw	r26, r24
    4896:	cb 01       	movw	r24, r22
    4898:	bc 01       	movw	r22, r24
    489a:	cd 01       	movw	r24, r26
    489c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    48a0:	dc 01       	movw	r26, r24
    48a2:	cb 01       	movw	r24, r22
    48a4:	9e 83       	std	Y+6, r25	; 0x06
    48a6:	8d 83       	std	Y+5, r24	; 0x05
    48a8:	0f c0       	rjmp	.+30     	; 0x48c8 <GLCD_enuDisplayStartLine+0x240>
    48aa:	80 e9       	ldi	r24, 0x90	; 144
    48ac:	91 e0       	ldi	r25, 0x01	; 1
    48ae:	9c 83       	std	Y+4, r25	; 0x04
    48b0:	8b 83       	std	Y+3, r24	; 0x03
    48b2:	8b 81       	ldd	r24, Y+3	; 0x03
    48b4:	9c 81       	ldd	r25, Y+4	; 0x04
    48b6:	01 97       	sbiw	r24, 0x01	; 1
    48b8:	f1 f7       	brne	.-4      	; 0x48b6 <GLCD_enuDisplayStartLine+0x22e>
    48ba:	9c 83       	std	Y+4, r25	; 0x04
    48bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48be:	8d 81       	ldd	r24, Y+5	; 0x05
    48c0:	9e 81       	ldd	r25, Y+6	; 0x06
    48c2:	01 97       	sbiw	r24, 0x01	; 1
    48c4:	9e 83       	std	Y+6, r25	; 0x06
    48c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48c8:	8d 81       	ldd	r24, Y+5	; 0x05
    48ca:	9e 81       	ldd	r25, Y+6	; 0x06
    48cc:	00 97       	sbiw	r24, 0x00	; 0
    48ce:	69 f7       	brne	.-38     	; 0x48aa <GLCD_enuDisplayStartLine+0x222>
    48d0:	14 c0       	rjmp	.+40     	; 0x48fa <GLCD_enuDisplayStartLine+0x272>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48d2:	6f 81       	ldd	r22, Y+7	; 0x07
    48d4:	78 85       	ldd	r23, Y+8	; 0x08
    48d6:	89 85       	ldd	r24, Y+9	; 0x09
    48d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    48da:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    48de:	dc 01       	movw	r26, r24
    48e0:	cb 01       	movw	r24, r22
    48e2:	9e 83       	std	Y+6, r25	; 0x06
    48e4:	8d 83       	std	Y+5, r24	; 0x05
    48e6:	8d 81       	ldd	r24, Y+5	; 0x05
    48e8:	9e 81       	ldd	r25, Y+6	; 0x06
    48ea:	9a 83       	std	Y+2, r25	; 0x02
    48ec:	89 83       	std	Y+1, r24	; 0x01
    48ee:	89 81       	ldd	r24, Y+1	; 0x01
    48f0:	9a 81       	ldd	r25, Y+2	; 0x02
    48f2:	01 97       	sbiw	r24, 0x01	; 1
    48f4:	f1 f7       	brne	.-4      	; 0x48f2 <GLCD_enuDisplayStartLine+0x26a>
    48f6:	9a 83       	std	Y+2, r25	; 0x02
    48f8:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(1);
            DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    48fa:	80 e0       	ldi	r24, 0x00	; 0
    48fc:	62 e0       	ldi	r22, 0x02	; 2
    48fe:	41 e0       	ldi	r20, 0x01	; 1
    4900:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
}
    4904:	6e 96       	adiw	r28, 0x1e	; 30
    4906:	0f b6       	in	r0, 0x3f	; 63
    4908:	f8 94       	cli
    490a:	de bf       	out	0x3e, r29	; 62
    490c:	0f be       	out	0x3f, r0	; 63
    490e:	cd bf       	out	0x3d, r28	; 61
    4910:	cf 91       	pop	r28
    4912:	df 91       	pop	r29
    4914:	08 95       	ret

00004916 <enuWriteData>:


static ES_t enuWriteData(u8 Copy_u8Data){
    4916:	0f 93       	push	r16
    4918:	1f 93       	push	r17
    491a:	df 93       	push	r29
    491c:	cf 93       	push	r28
    491e:	cd b7       	in	r28, 0x3d	; 61
    4920:	de b7       	in	r29, 0x3e	; 62
    4922:	c4 56       	subi	r28, 0x64	; 100
    4924:	d0 40       	sbci	r29, 0x00	; 0
    4926:	0f b6       	in	r0, 0x3f	; 63
    4928:	f8 94       	cli
    492a:	de bf       	out	0x3e, r29	; 62
    492c:	0f be       	out	0x3f, r0	; 63
    492e:	cd bf       	out	0x3d, r28	; 61
    4930:	fe 01       	movw	r30, r28
    4932:	ed 59       	subi	r30, 0x9D	; 157
    4934:	ff 4f       	sbci	r31, 0xFF	; 255
    4936:	80 83       	st	Z, r24



    DIO_enuSetPinValue(GLCD_GROUP_A,GLCD_PIN_RS,DIO_HIGH);
    4938:	80 e0       	ldi	r24, 0x00	; 0
    493a:	65 e0       	ldi	r22, 0x05	; 5
    493c:	41 e0       	ldi	r20, 0x01	; 1
    493e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    DIO_enuSetPinValue(GLCD_GROUP_A,GLCD_PIN_RW,DIO_LOW);
    4942:	80 e0       	ldi	r24, 0x00	; 0
    4944:	61 e0       	ldi	r22, 0x01	; 1
    4946:	40 e0       	ldi	r20, 0x00	; 0
    4948:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_0,((Copy_u8Data >> 0) & 1));
    494c:	fe 01       	movw	r30, r28
    494e:	ed 59       	subi	r30, 0x9D	; 157
    4950:	ff 4f       	sbci	r31, 0xFF	; 255
    4952:	80 81       	ld	r24, Z
    4954:	98 2f       	mov	r25, r24
    4956:	91 70       	andi	r25, 0x01	; 1
    4958:	81 e0       	ldi	r24, 0x01	; 1
    495a:	60 e0       	ldi	r22, 0x00	; 0
    495c:	49 2f       	mov	r20, r25
    495e:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_1,((Copy_u8Data >> 1) & 1));
    4962:	fe 01       	movw	r30, r28
    4964:	ed 59       	subi	r30, 0x9D	; 157
    4966:	ff 4f       	sbci	r31, 0xFF	; 255
    4968:	80 81       	ld	r24, Z
    496a:	86 95       	lsr	r24
    496c:	98 2f       	mov	r25, r24
    496e:	91 70       	andi	r25, 0x01	; 1
    4970:	81 e0       	ldi	r24, 0x01	; 1
    4972:	61 e0       	ldi	r22, 0x01	; 1
    4974:	49 2f       	mov	r20, r25
    4976:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_2,((Copy_u8Data >> 2) & 1));
    497a:	fe 01       	movw	r30, r28
    497c:	ed 59       	subi	r30, 0x9D	; 157
    497e:	ff 4f       	sbci	r31, 0xFF	; 255
    4980:	80 81       	ld	r24, Z
    4982:	86 95       	lsr	r24
    4984:	86 95       	lsr	r24
    4986:	98 2f       	mov	r25, r24
    4988:	91 70       	andi	r25, 0x01	; 1
    498a:	81 e0       	ldi	r24, 0x01	; 1
    498c:	62 e0       	ldi	r22, 0x02	; 2
    498e:	49 2f       	mov	r20, r25
    4990:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_3,((Copy_u8Data >> 3) & 1));
    4994:	fe 01       	movw	r30, r28
    4996:	ed 59       	subi	r30, 0x9D	; 157
    4998:	ff 4f       	sbci	r31, 0xFF	; 255
    499a:	80 81       	ld	r24, Z
    499c:	86 95       	lsr	r24
    499e:	86 95       	lsr	r24
    49a0:	86 95       	lsr	r24
    49a2:	98 2f       	mov	r25, r24
    49a4:	91 70       	andi	r25, 0x01	; 1
    49a6:	81 e0       	ldi	r24, 0x01	; 1
    49a8:	63 e0       	ldi	r22, 0x03	; 3
    49aa:	49 2f       	mov	r20, r25
    49ac:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_4,((Copy_u8Data >> 4) & 1));
    49b0:	fe 01       	movw	r30, r28
    49b2:	ed 59       	subi	r30, 0x9D	; 157
    49b4:	ff 4f       	sbci	r31, 0xFF	; 255
    49b6:	80 81       	ld	r24, Z
    49b8:	82 95       	swap	r24
    49ba:	8f 70       	andi	r24, 0x0F	; 15
    49bc:	98 2f       	mov	r25, r24
    49be:	91 70       	andi	r25, 0x01	; 1
    49c0:	81 e0       	ldi	r24, 0x01	; 1
    49c2:	64 e0       	ldi	r22, 0x04	; 4
    49c4:	49 2f       	mov	r20, r25
    49c6:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_5,((Copy_u8Data >> 5) & 1));
    49ca:	fe 01       	movw	r30, r28
    49cc:	ed 59       	subi	r30, 0x9D	; 157
    49ce:	ff 4f       	sbci	r31, 0xFF	; 255
    49d0:	80 81       	ld	r24, Z
    49d2:	82 95       	swap	r24
    49d4:	86 95       	lsr	r24
    49d6:	87 70       	andi	r24, 0x07	; 7
    49d8:	98 2f       	mov	r25, r24
    49da:	91 70       	andi	r25, 0x01	; 1
    49dc:	81 e0       	ldi	r24, 0x01	; 1
    49de:	65 e0       	ldi	r22, 0x05	; 5
    49e0:	49 2f       	mov	r20, r25
    49e2:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_6,((Copy_u8Data >> 6) & 1));
    49e6:	fe 01       	movw	r30, r28
    49e8:	ed 59       	subi	r30, 0x9D	; 157
    49ea:	ff 4f       	sbci	r31, 0xFF	; 255
    49ec:	80 81       	ld	r24, Z
    49ee:	82 95       	swap	r24
    49f0:	86 95       	lsr	r24
    49f2:	86 95       	lsr	r24
    49f4:	83 70       	andi	r24, 0x03	; 3
    49f6:	98 2f       	mov	r25, r24
    49f8:	91 70       	andi	r25, 0x01	; 1
    49fa:	81 e0       	ldi	r24, 0x01	; 1
    49fc:	66 e0       	ldi	r22, 0x06	; 6
    49fe:	49 2f       	mov	r20, r25
    4a00:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
//    LOCAL_u8Address++;
    DIO_enuSetPinValue(GLCD_GROUP_B,GLCD_PIN_7,((Copy_u8Data >> 7) & 1));
    4a04:	fe 01       	movw	r30, r28
    4a06:	ed 59       	subi	r30, 0x9D	; 157
    4a08:	ff 4f       	sbci	r31, 0xFF	; 255
    4a0a:	80 81       	ld	r24, Z
    4a0c:	98 2f       	mov	r25, r24
    4a0e:	99 1f       	adc	r25, r25
    4a10:	99 27       	eor	r25, r25
    4a12:	99 1f       	adc	r25, r25
    4a14:	81 e0       	ldi	r24, 0x01	; 1
    4a16:	67 e0       	ldi	r22, 0x07	; 7
    4a18:	49 2f       	mov	r20, r25
    4a1a:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    LOCAL_u8Address++;
    4a1e:	80 91 b5 01 	lds	r24, 0x01B5
    4a22:	8f 5f       	subi	r24, 0xFF	; 255
    4a24:	80 93 b5 01 	sts	0x01B5, r24
    4a28:	fe 01       	movw	r30, r28
    4a2a:	e1 5a       	subi	r30, 0xA1	; 161
    4a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a2e:	80 e0       	ldi	r24, 0x00	; 0
    4a30:	90 e0       	ldi	r25, 0x00	; 0
    4a32:	a0 e0       	ldi	r26, 0x00	; 0
    4a34:	b0 e4       	ldi	r27, 0x40	; 64
    4a36:	80 83       	st	Z, r24
    4a38:	91 83       	std	Z+1, r25	; 0x01
    4a3a:	a2 83       	std	Z+2, r26	; 0x02
    4a3c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a3e:	8e 01       	movw	r16, r28
    4a40:	05 5a       	subi	r16, 0xA5	; 165
    4a42:	1f 4f       	sbci	r17, 0xFF	; 255
    4a44:	fe 01       	movw	r30, r28
    4a46:	e1 5a       	subi	r30, 0xA1	; 161
    4a48:	ff 4f       	sbci	r31, 0xFF	; 255
    4a4a:	60 81       	ld	r22, Z
    4a4c:	71 81       	ldd	r23, Z+1	; 0x01
    4a4e:	82 81       	ldd	r24, Z+2	; 0x02
    4a50:	93 81       	ldd	r25, Z+3	; 0x03
    4a52:	20 e0       	ldi	r18, 0x00	; 0
    4a54:	30 e0       	ldi	r19, 0x00	; 0
    4a56:	4a e7       	ldi	r20, 0x7A	; 122
    4a58:	55 e4       	ldi	r21, 0x45	; 69
    4a5a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4a5e:	dc 01       	movw	r26, r24
    4a60:	cb 01       	movw	r24, r22
    4a62:	f8 01       	movw	r30, r16
    4a64:	80 83       	st	Z, r24
    4a66:	91 83       	std	Z+1, r25	; 0x01
    4a68:	a2 83       	std	Z+2, r26	; 0x02
    4a6a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a6c:	fe 01       	movw	r30, r28
    4a6e:	e5 5a       	subi	r30, 0xA5	; 165
    4a70:	ff 4f       	sbci	r31, 0xFF	; 255
    4a72:	60 81       	ld	r22, Z
    4a74:	71 81       	ldd	r23, Z+1	; 0x01
    4a76:	82 81       	ldd	r24, Z+2	; 0x02
    4a78:	93 81       	ldd	r25, Z+3	; 0x03
    4a7a:	20 e0       	ldi	r18, 0x00	; 0
    4a7c:	30 e0       	ldi	r19, 0x00	; 0
    4a7e:	40 e8       	ldi	r20, 0x80	; 128
    4a80:	5f e3       	ldi	r21, 0x3F	; 63
    4a82:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4a86:	88 23       	and	r24, r24
    4a88:	44 f4       	brge	.+16     	; 0x4a9a <enuWriteData+0x184>
		__ticks = 1;
    4a8a:	fe 01       	movw	r30, r28
    4a8c:	e7 5a       	subi	r30, 0xA7	; 167
    4a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a90:	81 e0       	ldi	r24, 0x01	; 1
    4a92:	90 e0       	ldi	r25, 0x00	; 0
    4a94:	91 83       	std	Z+1, r25	; 0x01
    4a96:	80 83       	st	Z, r24
    4a98:	64 c0       	rjmp	.+200    	; 0x4b62 <enuWriteData+0x24c>
	else if (__tmp > 65535)
    4a9a:	fe 01       	movw	r30, r28
    4a9c:	e5 5a       	subi	r30, 0xA5	; 165
    4a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4aa0:	60 81       	ld	r22, Z
    4aa2:	71 81       	ldd	r23, Z+1	; 0x01
    4aa4:	82 81       	ldd	r24, Z+2	; 0x02
    4aa6:	93 81       	ldd	r25, Z+3	; 0x03
    4aa8:	20 e0       	ldi	r18, 0x00	; 0
    4aaa:	3f ef       	ldi	r19, 0xFF	; 255
    4aac:	4f e7       	ldi	r20, 0x7F	; 127
    4aae:	57 e4       	ldi	r21, 0x47	; 71
    4ab0:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4ab4:	18 16       	cp	r1, r24
    4ab6:	0c f0       	brlt	.+2      	; 0x4aba <enuWriteData+0x1a4>
    4ab8:	43 c0       	rjmp	.+134    	; 0x4b40 <enuWriteData+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4aba:	fe 01       	movw	r30, r28
    4abc:	e1 5a       	subi	r30, 0xA1	; 161
    4abe:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac0:	60 81       	ld	r22, Z
    4ac2:	71 81       	ldd	r23, Z+1	; 0x01
    4ac4:	82 81       	ldd	r24, Z+2	; 0x02
    4ac6:	93 81       	ldd	r25, Z+3	; 0x03
    4ac8:	20 e0       	ldi	r18, 0x00	; 0
    4aca:	30 e0       	ldi	r19, 0x00	; 0
    4acc:	40 e2       	ldi	r20, 0x20	; 32
    4ace:	51 e4       	ldi	r21, 0x41	; 65
    4ad0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4ad4:	dc 01       	movw	r26, r24
    4ad6:	cb 01       	movw	r24, r22
    4ad8:	8e 01       	movw	r16, r28
    4ada:	07 5a       	subi	r16, 0xA7	; 167
    4adc:	1f 4f       	sbci	r17, 0xFF	; 255
    4ade:	bc 01       	movw	r22, r24
    4ae0:	cd 01       	movw	r24, r26
    4ae2:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4ae6:	dc 01       	movw	r26, r24
    4ae8:	cb 01       	movw	r24, r22
    4aea:	f8 01       	movw	r30, r16
    4aec:	91 83       	std	Z+1, r25	; 0x01
    4aee:	80 83       	st	Z, r24
    4af0:	1f c0       	rjmp	.+62     	; 0x4b30 <enuWriteData+0x21a>
    4af2:	fe 01       	movw	r30, r28
    4af4:	e9 5a       	subi	r30, 0xA9	; 169
    4af6:	ff 4f       	sbci	r31, 0xFF	; 255
    4af8:	80 e9       	ldi	r24, 0x90	; 144
    4afa:	91 e0       	ldi	r25, 0x01	; 1
    4afc:	91 83       	std	Z+1, r25	; 0x01
    4afe:	80 83       	st	Z, r24
    4b00:	fe 01       	movw	r30, r28
    4b02:	e9 5a       	subi	r30, 0xA9	; 169
    4b04:	ff 4f       	sbci	r31, 0xFF	; 255
    4b06:	80 81       	ld	r24, Z
    4b08:	91 81       	ldd	r25, Z+1	; 0x01
    4b0a:	01 97       	sbiw	r24, 0x01	; 1
    4b0c:	f1 f7       	brne	.-4      	; 0x4b0a <enuWriteData+0x1f4>
    4b0e:	fe 01       	movw	r30, r28
    4b10:	e9 5a       	subi	r30, 0xA9	; 169
    4b12:	ff 4f       	sbci	r31, 0xFF	; 255
    4b14:	91 83       	std	Z+1, r25	; 0x01
    4b16:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b18:	de 01       	movw	r26, r28
    4b1a:	a7 5a       	subi	r26, 0xA7	; 167
    4b1c:	bf 4f       	sbci	r27, 0xFF	; 255
    4b1e:	fe 01       	movw	r30, r28
    4b20:	e7 5a       	subi	r30, 0xA7	; 167
    4b22:	ff 4f       	sbci	r31, 0xFF	; 255
    4b24:	80 81       	ld	r24, Z
    4b26:	91 81       	ldd	r25, Z+1	; 0x01
    4b28:	01 97       	sbiw	r24, 0x01	; 1
    4b2a:	11 96       	adiw	r26, 0x01	; 1
    4b2c:	9c 93       	st	X, r25
    4b2e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b30:	fe 01       	movw	r30, r28
    4b32:	e7 5a       	subi	r30, 0xA7	; 167
    4b34:	ff 4f       	sbci	r31, 0xFF	; 255
    4b36:	80 81       	ld	r24, Z
    4b38:	91 81       	ldd	r25, Z+1	; 0x01
    4b3a:	00 97       	sbiw	r24, 0x00	; 0
    4b3c:	d1 f6       	brne	.-76     	; 0x4af2 <enuWriteData+0x1dc>
    4b3e:	27 c0       	rjmp	.+78     	; 0x4b8e <enuWriteData+0x278>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b40:	8e 01       	movw	r16, r28
    4b42:	07 5a       	subi	r16, 0xA7	; 167
    4b44:	1f 4f       	sbci	r17, 0xFF	; 255
    4b46:	fe 01       	movw	r30, r28
    4b48:	e5 5a       	subi	r30, 0xA5	; 165
    4b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4c:	60 81       	ld	r22, Z
    4b4e:	71 81       	ldd	r23, Z+1	; 0x01
    4b50:	82 81       	ldd	r24, Z+2	; 0x02
    4b52:	93 81       	ldd	r25, Z+3	; 0x03
    4b54:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4b58:	dc 01       	movw	r26, r24
    4b5a:	cb 01       	movw	r24, r22
    4b5c:	f8 01       	movw	r30, r16
    4b5e:	91 83       	std	Z+1, r25	; 0x01
    4b60:	80 83       	st	Z, r24
    4b62:	de 01       	movw	r26, r28
    4b64:	ab 5a       	subi	r26, 0xAB	; 171
    4b66:	bf 4f       	sbci	r27, 0xFF	; 255
    4b68:	fe 01       	movw	r30, r28
    4b6a:	e7 5a       	subi	r30, 0xA7	; 167
    4b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b6e:	80 81       	ld	r24, Z
    4b70:	91 81       	ldd	r25, Z+1	; 0x01
    4b72:	8d 93       	st	X+, r24
    4b74:	9c 93       	st	X, r25
    4b76:	fe 01       	movw	r30, r28
    4b78:	eb 5a       	subi	r30, 0xAB	; 171
    4b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b7c:	80 81       	ld	r24, Z
    4b7e:	91 81       	ldd	r25, Z+1	; 0x01
    4b80:	01 97       	sbiw	r24, 0x01	; 1
    4b82:	f1 f7       	brne	.-4      	; 0x4b80 <enuWriteData+0x26a>
    4b84:	fe 01       	movw	r30, r28
    4b86:	eb 5a       	subi	r30, 0xAB	; 171
    4b88:	ff 4f       	sbci	r31, 0xFF	; 255
    4b8a:	91 83       	std	Z+1, r25	; 0x01
    4b8c:	80 83       	st	Z, r24


    _delay_ms(2);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_HIGH);
    4b8e:	80 e0       	ldi	r24, 0x00	; 0
    4b90:	62 e0       	ldi	r22, 0x02	; 2
    4b92:	41 e0       	ldi	r20, 0x01	; 1
    4b94:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4b98:	fe 01       	movw	r30, r28
    4b9a:	ef 5a       	subi	r30, 0xAF	; 175
    4b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b9e:	80 e0       	ldi	r24, 0x00	; 0
    4ba0:	90 e0       	ldi	r25, 0x00	; 0
    4ba2:	a0 e8       	ldi	r26, 0x80	; 128
    4ba4:	bf e3       	ldi	r27, 0x3F	; 63
    4ba6:	80 83       	st	Z, r24
    4ba8:	91 83       	std	Z+1, r25	; 0x01
    4baa:	a2 83       	std	Z+2, r26	; 0x02
    4bac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4bae:	8e 01       	movw	r16, r28
    4bb0:	03 5b       	subi	r16, 0xB3	; 179
    4bb2:	1f 4f       	sbci	r17, 0xFF	; 255
    4bb4:	fe 01       	movw	r30, r28
    4bb6:	ef 5a       	subi	r30, 0xAF	; 175
    4bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    4bba:	60 81       	ld	r22, Z
    4bbc:	71 81       	ldd	r23, Z+1	; 0x01
    4bbe:	82 81       	ldd	r24, Z+2	; 0x02
    4bc0:	93 81       	ldd	r25, Z+3	; 0x03
    4bc2:	20 e0       	ldi	r18, 0x00	; 0
    4bc4:	30 e0       	ldi	r19, 0x00	; 0
    4bc6:	4a e7       	ldi	r20, 0x7A	; 122
    4bc8:	55 e4       	ldi	r21, 0x45	; 69
    4bca:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4bce:	dc 01       	movw	r26, r24
    4bd0:	cb 01       	movw	r24, r22
    4bd2:	f8 01       	movw	r30, r16
    4bd4:	80 83       	st	Z, r24
    4bd6:	91 83       	std	Z+1, r25	; 0x01
    4bd8:	a2 83       	std	Z+2, r26	; 0x02
    4bda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4bdc:	fe 01       	movw	r30, r28
    4bde:	e3 5b       	subi	r30, 0xB3	; 179
    4be0:	ff 4f       	sbci	r31, 0xFF	; 255
    4be2:	60 81       	ld	r22, Z
    4be4:	71 81       	ldd	r23, Z+1	; 0x01
    4be6:	82 81       	ldd	r24, Z+2	; 0x02
    4be8:	93 81       	ldd	r25, Z+3	; 0x03
    4bea:	20 e0       	ldi	r18, 0x00	; 0
    4bec:	30 e0       	ldi	r19, 0x00	; 0
    4bee:	40 e8       	ldi	r20, 0x80	; 128
    4bf0:	5f e3       	ldi	r21, 0x3F	; 63
    4bf2:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4bf6:	88 23       	and	r24, r24
    4bf8:	44 f4       	brge	.+16     	; 0x4c0a <enuWriteData+0x2f4>
		__ticks = 1;
    4bfa:	fe 01       	movw	r30, r28
    4bfc:	e5 5b       	subi	r30, 0xB5	; 181
    4bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    4c00:	81 e0       	ldi	r24, 0x01	; 1
    4c02:	90 e0       	ldi	r25, 0x00	; 0
    4c04:	91 83       	std	Z+1, r25	; 0x01
    4c06:	80 83       	st	Z, r24
    4c08:	64 c0       	rjmp	.+200    	; 0x4cd2 <enuWriteData+0x3bc>
	else if (__tmp > 65535)
    4c0a:	fe 01       	movw	r30, r28
    4c0c:	e3 5b       	subi	r30, 0xB3	; 179
    4c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c10:	60 81       	ld	r22, Z
    4c12:	71 81       	ldd	r23, Z+1	; 0x01
    4c14:	82 81       	ldd	r24, Z+2	; 0x02
    4c16:	93 81       	ldd	r25, Z+3	; 0x03
    4c18:	20 e0       	ldi	r18, 0x00	; 0
    4c1a:	3f ef       	ldi	r19, 0xFF	; 255
    4c1c:	4f e7       	ldi	r20, 0x7F	; 127
    4c1e:	57 e4       	ldi	r21, 0x47	; 71
    4c20:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4c24:	18 16       	cp	r1, r24
    4c26:	0c f0       	brlt	.+2      	; 0x4c2a <enuWriteData+0x314>
    4c28:	43 c0       	rjmp	.+134    	; 0x4cb0 <enuWriteData+0x39a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c2a:	fe 01       	movw	r30, r28
    4c2c:	ef 5a       	subi	r30, 0xAF	; 175
    4c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c30:	60 81       	ld	r22, Z
    4c32:	71 81       	ldd	r23, Z+1	; 0x01
    4c34:	82 81       	ldd	r24, Z+2	; 0x02
    4c36:	93 81       	ldd	r25, Z+3	; 0x03
    4c38:	20 e0       	ldi	r18, 0x00	; 0
    4c3a:	30 e0       	ldi	r19, 0x00	; 0
    4c3c:	40 e2       	ldi	r20, 0x20	; 32
    4c3e:	51 e4       	ldi	r21, 0x41	; 65
    4c40:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4c44:	dc 01       	movw	r26, r24
    4c46:	cb 01       	movw	r24, r22
    4c48:	8e 01       	movw	r16, r28
    4c4a:	05 5b       	subi	r16, 0xB5	; 181
    4c4c:	1f 4f       	sbci	r17, 0xFF	; 255
    4c4e:	bc 01       	movw	r22, r24
    4c50:	cd 01       	movw	r24, r26
    4c52:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4c56:	dc 01       	movw	r26, r24
    4c58:	cb 01       	movw	r24, r22
    4c5a:	f8 01       	movw	r30, r16
    4c5c:	91 83       	std	Z+1, r25	; 0x01
    4c5e:	80 83       	st	Z, r24
    4c60:	1f c0       	rjmp	.+62     	; 0x4ca0 <enuWriteData+0x38a>
    4c62:	fe 01       	movw	r30, r28
    4c64:	e7 5b       	subi	r30, 0xB7	; 183
    4c66:	ff 4f       	sbci	r31, 0xFF	; 255
    4c68:	80 e9       	ldi	r24, 0x90	; 144
    4c6a:	91 e0       	ldi	r25, 0x01	; 1
    4c6c:	91 83       	std	Z+1, r25	; 0x01
    4c6e:	80 83       	st	Z, r24
    4c70:	fe 01       	movw	r30, r28
    4c72:	e7 5b       	subi	r30, 0xB7	; 183
    4c74:	ff 4f       	sbci	r31, 0xFF	; 255
    4c76:	80 81       	ld	r24, Z
    4c78:	91 81       	ldd	r25, Z+1	; 0x01
    4c7a:	01 97       	sbiw	r24, 0x01	; 1
    4c7c:	f1 f7       	brne	.-4      	; 0x4c7a <enuWriteData+0x364>
    4c7e:	fe 01       	movw	r30, r28
    4c80:	e7 5b       	subi	r30, 0xB7	; 183
    4c82:	ff 4f       	sbci	r31, 0xFF	; 255
    4c84:	91 83       	std	Z+1, r25	; 0x01
    4c86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c88:	de 01       	movw	r26, r28
    4c8a:	a5 5b       	subi	r26, 0xB5	; 181
    4c8c:	bf 4f       	sbci	r27, 0xFF	; 255
    4c8e:	fe 01       	movw	r30, r28
    4c90:	e5 5b       	subi	r30, 0xB5	; 181
    4c92:	ff 4f       	sbci	r31, 0xFF	; 255
    4c94:	80 81       	ld	r24, Z
    4c96:	91 81       	ldd	r25, Z+1	; 0x01
    4c98:	01 97       	sbiw	r24, 0x01	; 1
    4c9a:	11 96       	adiw	r26, 0x01	; 1
    4c9c:	9c 93       	st	X, r25
    4c9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ca0:	fe 01       	movw	r30, r28
    4ca2:	e5 5b       	subi	r30, 0xB5	; 181
    4ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ca6:	80 81       	ld	r24, Z
    4ca8:	91 81       	ldd	r25, Z+1	; 0x01
    4caa:	00 97       	sbiw	r24, 0x00	; 0
    4cac:	d1 f6       	brne	.-76     	; 0x4c62 <enuWriteData+0x34c>
    4cae:	27 c0       	rjmp	.+78     	; 0x4cfe <enuWriteData+0x3e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4cb0:	8e 01       	movw	r16, r28
    4cb2:	05 5b       	subi	r16, 0xB5	; 181
    4cb4:	1f 4f       	sbci	r17, 0xFF	; 255
    4cb6:	fe 01       	movw	r30, r28
    4cb8:	e3 5b       	subi	r30, 0xB3	; 179
    4cba:	ff 4f       	sbci	r31, 0xFF	; 255
    4cbc:	60 81       	ld	r22, Z
    4cbe:	71 81       	ldd	r23, Z+1	; 0x01
    4cc0:	82 81       	ldd	r24, Z+2	; 0x02
    4cc2:	93 81       	ldd	r25, Z+3	; 0x03
    4cc4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4cc8:	dc 01       	movw	r26, r24
    4cca:	cb 01       	movw	r24, r22
    4ccc:	f8 01       	movw	r30, r16
    4cce:	91 83       	std	Z+1, r25	; 0x01
    4cd0:	80 83       	st	Z, r24
    4cd2:	de 01       	movw	r26, r28
    4cd4:	a9 5b       	subi	r26, 0xB9	; 185
    4cd6:	bf 4f       	sbci	r27, 0xFF	; 255
    4cd8:	fe 01       	movw	r30, r28
    4cda:	e5 5b       	subi	r30, 0xB5	; 181
    4cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    4cde:	80 81       	ld	r24, Z
    4ce0:	91 81       	ldd	r25, Z+1	; 0x01
    4ce2:	8d 93       	st	X+, r24
    4ce4:	9c 93       	st	X, r25
    4ce6:	fe 01       	movw	r30, r28
    4ce8:	e9 5b       	subi	r30, 0xB9	; 185
    4cea:	ff 4f       	sbci	r31, 0xFF	; 255
    4cec:	80 81       	ld	r24, Z
    4cee:	91 81       	ldd	r25, Z+1	; 0x01
    4cf0:	01 97       	sbiw	r24, 0x01	; 1
    4cf2:	f1 f7       	brne	.-4      	; 0x4cf0 <enuWriteData+0x3da>
    4cf4:	fe 01       	movw	r30, r28
    4cf6:	e9 5b       	subi	r30, 0xB9	; 185
    4cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    4cfa:	91 83       	std	Z+1, r25	; 0x01
    4cfc:	80 83       	st	Z, r24
        _delay_ms(1);
        DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_ENABLE, DIO_LOW);
    4cfe:	80 e0       	ldi	r24, 0x00	; 0
    4d00:	62 e0       	ldi	r22, 0x02	; 2
    4d02:	40 e0       	ldi	r20, 0x00	; 0
    4d04:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>

        if(LOCAL_u8Address<64){
    4d08:	80 91 b5 01 	lds	r24, 0x01B5
    4d0c:	80 34       	cpi	r24, 0x40	; 64
    4d0e:	08 f0       	brcs	.+2      	; 0x4d12 <enuWriteData+0x3fc>
    4d10:	0a c1       	rjmp	.+532    	; 0x4f26 <enuWriteData+0x610>

        	GOTOX(LOCAL_u8Page);
    4d12:	80 91 b4 01 	lds	r24, 0x01B4
    4d16:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <GOTOX>
        	GOTOY(LOCAL_u8Address);
    4d1a:	80 91 b5 01 	lds	r24, 0x01B5
    4d1e:	0e 94 a3 18 	call	0x3146	; 0x3146 <GOTOY>
    4d22:	fe 01       	movw	r30, r28
    4d24:	ed 5b       	subi	r30, 0xBD	; 189
    4d26:	ff 4f       	sbci	r31, 0xFF	; 255
    4d28:	80 e0       	ldi	r24, 0x00	; 0
    4d2a:	90 e0       	ldi	r25, 0x00	; 0
    4d2c:	a0 ea       	ldi	r26, 0xA0	; 160
    4d2e:	b0 e4       	ldi	r27, 0x40	; 64
    4d30:	80 83       	st	Z, r24
    4d32:	91 83       	std	Z+1, r25	; 0x01
    4d34:	a2 83       	std	Z+2, r26	; 0x02
    4d36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d38:	8e 01       	movw	r16, r28
    4d3a:	01 5c       	subi	r16, 0xC1	; 193
    4d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    4d3e:	fe 01       	movw	r30, r28
    4d40:	ed 5b       	subi	r30, 0xBD	; 189
    4d42:	ff 4f       	sbci	r31, 0xFF	; 255
    4d44:	60 81       	ld	r22, Z
    4d46:	71 81       	ldd	r23, Z+1	; 0x01
    4d48:	82 81       	ldd	r24, Z+2	; 0x02
    4d4a:	93 81       	ldd	r25, Z+3	; 0x03
    4d4c:	20 e0       	ldi	r18, 0x00	; 0
    4d4e:	30 e0       	ldi	r19, 0x00	; 0
    4d50:	4a e7       	ldi	r20, 0x7A	; 122
    4d52:	55 e4       	ldi	r21, 0x45	; 69
    4d54:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4d58:	dc 01       	movw	r26, r24
    4d5a:	cb 01       	movw	r24, r22
    4d5c:	f8 01       	movw	r30, r16
    4d5e:	80 83       	st	Z, r24
    4d60:	91 83       	std	Z+1, r25	; 0x01
    4d62:	a2 83       	std	Z+2, r26	; 0x02
    4d64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d66:	fe 01       	movw	r30, r28
    4d68:	ff 96       	adiw	r30, 0x3f	; 63
    4d6a:	60 81       	ld	r22, Z
    4d6c:	71 81       	ldd	r23, Z+1	; 0x01
    4d6e:	82 81       	ldd	r24, Z+2	; 0x02
    4d70:	93 81       	ldd	r25, Z+3	; 0x03
    4d72:	20 e0       	ldi	r18, 0x00	; 0
    4d74:	30 e0       	ldi	r19, 0x00	; 0
    4d76:	40 e8       	ldi	r20, 0x80	; 128
    4d78:	5f e3       	ldi	r21, 0x3F	; 63
    4d7a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4d7e:	88 23       	and	r24, r24
    4d80:	2c f4       	brge	.+10     	; 0x4d8c <enuWriteData+0x476>
		__ticks = 1;
    4d82:	81 e0       	ldi	r24, 0x01	; 1
    4d84:	90 e0       	ldi	r25, 0x00	; 0
    4d86:	9e af       	std	Y+62, r25	; 0x3e
    4d88:	8d af       	std	Y+61, r24	; 0x3d
    4d8a:	46 c0       	rjmp	.+140    	; 0x4e18 <enuWriteData+0x502>
	else if (__tmp > 65535)
    4d8c:	fe 01       	movw	r30, r28
    4d8e:	ff 96       	adiw	r30, 0x3f	; 63
    4d90:	60 81       	ld	r22, Z
    4d92:	71 81       	ldd	r23, Z+1	; 0x01
    4d94:	82 81       	ldd	r24, Z+2	; 0x02
    4d96:	93 81       	ldd	r25, Z+3	; 0x03
    4d98:	20 e0       	ldi	r18, 0x00	; 0
    4d9a:	3f ef       	ldi	r19, 0xFF	; 255
    4d9c:	4f e7       	ldi	r20, 0x7F	; 127
    4d9e:	57 e4       	ldi	r21, 0x47	; 71
    4da0:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4da4:	18 16       	cp	r1, r24
    4da6:	64 f5       	brge	.+88     	; 0x4e00 <enuWriteData+0x4ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4da8:	fe 01       	movw	r30, r28
    4daa:	ed 5b       	subi	r30, 0xBD	; 189
    4dac:	ff 4f       	sbci	r31, 0xFF	; 255
    4dae:	60 81       	ld	r22, Z
    4db0:	71 81       	ldd	r23, Z+1	; 0x01
    4db2:	82 81       	ldd	r24, Z+2	; 0x02
    4db4:	93 81       	ldd	r25, Z+3	; 0x03
    4db6:	20 e0       	ldi	r18, 0x00	; 0
    4db8:	30 e0       	ldi	r19, 0x00	; 0
    4dba:	40 e2       	ldi	r20, 0x20	; 32
    4dbc:	51 e4       	ldi	r21, 0x41	; 65
    4dbe:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4dc2:	dc 01       	movw	r26, r24
    4dc4:	cb 01       	movw	r24, r22
    4dc6:	bc 01       	movw	r22, r24
    4dc8:	cd 01       	movw	r24, r26
    4dca:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4dce:	dc 01       	movw	r26, r24
    4dd0:	cb 01       	movw	r24, r22
    4dd2:	9e af       	std	Y+62, r25	; 0x3e
    4dd4:	8d af       	std	Y+61, r24	; 0x3d
    4dd6:	0f c0       	rjmp	.+30     	; 0x4df6 <enuWriteData+0x4e0>
    4dd8:	80 e9       	ldi	r24, 0x90	; 144
    4dda:	91 e0       	ldi	r25, 0x01	; 1
    4ddc:	9c af       	std	Y+60, r25	; 0x3c
    4dde:	8b af       	std	Y+59, r24	; 0x3b
    4de0:	8b ad       	ldd	r24, Y+59	; 0x3b
    4de2:	9c ad       	ldd	r25, Y+60	; 0x3c
    4de4:	01 97       	sbiw	r24, 0x01	; 1
    4de6:	f1 f7       	brne	.-4      	; 0x4de4 <enuWriteData+0x4ce>
    4de8:	9c af       	std	Y+60, r25	; 0x3c
    4dea:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4dec:	8d ad       	ldd	r24, Y+61	; 0x3d
    4dee:	9e ad       	ldd	r25, Y+62	; 0x3e
    4df0:	01 97       	sbiw	r24, 0x01	; 1
    4df2:	9e af       	std	Y+62, r25	; 0x3e
    4df4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4df6:	8d ad       	ldd	r24, Y+61	; 0x3d
    4df8:	9e ad       	ldd	r25, Y+62	; 0x3e
    4dfa:	00 97       	sbiw	r24, 0x00	; 0
    4dfc:	69 f7       	brne	.-38     	; 0x4dd8 <enuWriteData+0x4c2>
    4dfe:	16 c0       	rjmp	.+44     	; 0x4e2c <enuWriteData+0x516>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e00:	fe 01       	movw	r30, r28
    4e02:	ff 96       	adiw	r30, 0x3f	; 63
    4e04:	60 81       	ld	r22, Z
    4e06:	71 81       	ldd	r23, Z+1	; 0x01
    4e08:	82 81       	ldd	r24, Z+2	; 0x02
    4e0a:	93 81       	ldd	r25, Z+3	; 0x03
    4e0c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4e10:	dc 01       	movw	r26, r24
    4e12:	cb 01       	movw	r24, r22
    4e14:	9e af       	std	Y+62, r25	; 0x3e
    4e16:	8d af       	std	Y+61, r24	; 0x3d
    4e18:	8d ad       	ldd	r24, Y+61	; 0x3d
    4e1a:	9e ad       	ldd	r25, Y+62	; 0x3e
    4e1c:	9a af       	std	Y+58, r25	; 0x3a
    4e1e:	89 af       	std	Y+57, r24	; 0x39
    4e20:	89 ad       	ldd	r24, Y+57	; 0x39
    4e22:	9a ad       	ldd	r25, Y+58	; 0x3a
    4e24:	01 97       	sbiw	r24, 0x01	; 1
    4e26:	f1 f7       	brne	.-4      	; 0x4e24 <enuWriteData+0x50e>
    4e28:	9a af       	std	Y+58, r25	; 0x3a
    4e2a:	89 af       	std	Y+57, r24	; 0x39
        	_delay_ms(5);
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_HIGH);
    4e2c:	80 e0       	ldi	r24, 0x00	; 0
    4e2e:	63 e0       	ldi	r22, 0x03	; 3
    4e30:	41 e0       	ldi	r20, 0x01	; 1
    4e32:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4e36:	80 e0       	ldi	r24, 0x00	; 0
    4e38:	90 e0       	ldi	r25, 0x00	; 0
    4e3a:	a0 e8       	ldi	r26, 0x80	; 128
    4e3c:	bf e3       	ldi	r27, 0x3F	; 63
    4e3e:	8d ab       	std	Y+53, r24	; 0x35
    4e40:	9e ab       	std	Y+54, r25	; 0x36
    4e42:	af ab       	std	Y+55, r26	; 0x37
    4e44:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e46:	6d a9       	ldd	r22, Y+53	; 0x35
    4e48:	7e a9       	ldd	r23, Y+54	; 0x36
    4e4a:	8f a9       	ldd	r24, Y+55	; 0x37
    4e4c:	98 ad       	ldd	r25, Y+56	; 0x38
    4e4e:	20 e0       	ldi	r18, 0x00	; 0
    4e50:	30 e0       	ldi	r19, 0x00	; 0
    4e52:	4a e7       	ldi	r20, 0x7A	; 122
    4e54:	55 e4       	ldi	r21, 0x45	; 69
    4e56:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4e5a:	dc 01       	movw	r26, r24
    4e5c:	cb 01       	movw	r24, r22
    4e5e:	89 ab       	std	Y+49, r24	; 0x31
    4e60:	9a ab       	std	Y+50, r25	; 0x32
    4e62:	ab ab       	std	Y+51, r26	; 0x33
    4e64:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4e66:	69 a9       	ldd	r22, Y+49	; 0x31
    4e68:	7a a9       	ldd	r23, Y+50	; 0x32
    4e6a:	8b a9       	ldd	r24, Y+51	; 0x33
    4e6c:	9c a9       	ldd	r25, Y+52	; 0x34
    4e6e:	20 e0       	ldi	r18, 0x00	; 0
    4e70:	30 e0       	ldi	r19, 0x00	; 0
    4e72:	40 e8       	ldi	r20, 0x80	; 128
    4e74:	5f e3       	ldi	r21, 0x3F	; 63
    4e76:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4e7a:	88 23       	and	r24, r24
    4e7c:	2c f4       	brge	.+10     	; 0x4e88 <enuWriteData+0x572>
		__ticks = 1;
    4e7e:	81 e0       	ldi	r24, 0x01	; 1
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	98 ab       	std	Y+48, r25	; 0x30
    4e84:	8f a7       	std	Y+47, r24	; 0x2f
    4e86:	3f c0       	rjmp	.+126    	; 0x4f06 <enuWriteData+0x5f0>
	else if (__tmp > 65535)
    4e88:	69 a9       	ldd	r22, Y+49	; 0x31
    4e8a:	7a a9       	ldd	r23, Y+50	; 0x32
    4e8c:	8b a9       	ldd	r24, Y+51	; 0x33
    4e8e:	9c a9       	ldd	r25, Y+52	; 0x34
    4e90:	20 e0       	ldi	r18, 0x00	; 0
    4e92:	3f ef       	ldi	r19, 0xFF	; 255
    4e94:	4f e7       	ldi	r20, 0x7F	; 127
    4e96:	57 e4       	ldi	r21, 0x47	; 71
    4e98:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4e9c:	18 16       	cp	r1, r24
    4e9e:	4c f5       	brge	.+82     	; 0x4ef2 <enuWriteData+0x5dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ea0:	6d a9       	ldd	r22, Y+53	; 0x35
    4ea2:	7e a9       	ldd	r23, Y+54	; 0x36
    4ea4:	8f a9       	ldd	r24, Y+55	; 0x37
    4ea6:	98 ad       	ldd	r25, Y+56	; 0x38
    4ea8:	20 e0       	ldi	r18, 0x00	; 0
    4eaa:	30 e0       	ldi	r19, 0x00	; 0
    4eac:	40 e2       	ldi	r20, 0x20	; 32
    4eae:	51 e4       	ldi	r21, 0x41	; 65
    4eb0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4eb4:	dc 01       	movw	r26, r24
    4eb6:	cb 01       	movw	r24, r22
    4eb8:	bc 01       	movw	r22, r24
    4eba:	cd 01       	movw	r24, r26
    4ebc:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4ec0:	dc 01       	movw	r26, r24
    4ec2:	cb 01       	movw	r24, r22
    4ec4:	98 ab       	std	Y+48, r25	; 0x30
    4ec6:	8f a7       	std	Y+47, r24	; 0x2f
    4ec8:	0f c0       	rjmp	.+30     	; 0x4ee8 <enuWriteData+0x5d2>
    4eca:	80 e9       	ldi	r24, 0x90	; 144
    4ecc:	91 e0       	ldi	r25, 0x01	; 1
    4ece:	9e a7       	std	Y+46, r25	; 0x2e
    4ed0:	8d a7       	std	Y+45, r24	; 0x2d
    4ed2:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ed4:	9e a5       	ldd	r25, Y+46	; 0x2e
    4ed6:	01 97       	sbiw	r24, 0x01	; 1
    4ed8:	f1 f7       	brne	.-4      	; 0x4ed6 <enuWriteData+0x5c0>
    4eda:	9e a7       	std	Y+46, r25	; 0x2e
    4edc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ede:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ee0:	98 a9       	ldd	r25, Y+48	; 0x30
    4ee2:	01 97       	sbiw	r24, 0x01	; 1
    4ee4:	98 ab       	std	Y+48, r25	; 0x30
    4ee6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ee8:	8f a5       	ldd	r24, Y+47	; 0x2f
    4eea:	98 a9       	ldd	r25, Y+48	; 0x30
    4eec:	00 97       	sbiw	r24, 0x00	; 0
    4eee:	69 f7       	brne	.-38     	; 0x4eca <enuWriteData+0x5b4>
    4ef0:	14 c0       	rjmp	.+40     	; 0x4f1a <enuWriteData+0x604>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ef2:	69 a9       	ldd	r22, Y+49	; 0x31
    4ef4:	7a a9       	ldd	r23, Y+50	; 0x32
    4ef6:	8b a9       	ldd	r24, Y+51	; 0x33
    4ef8:	9c a9       	ldd	r25, Y+52	; 0x34
    4efa:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4efe:	dc 01       	movw	r26, r24
    4f00:	cb 01       	movw	r24, r22
    4f02:	98 ab       	std	Y+48, r25	; 0x30
    4f04:	8f a7       	std	Y+47, r24	; 0x2f
    4f06:	8f a5       	ldd	r24, Y+47	; 0x2f
    4f08:	98 a9       	ldd	r25, Y+48	; 0x30
    4f0a:	9c a7       	std	Y+44, r25	; 0x2c
    4f0c:	8b a7       	std	Y+43, r24	; 0x2b
    4f0e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f10:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f12:	01 97       	sbiw	r24, 0x01	; 1
    4f14:	f1 f7       	brne	.-4      	; 0x4f12 <enuWriteData+0x5fc>
    4f16:	9c a7       	std	Y+44, r25	; 0x2c
    4f18:	8b a7       	std	Y+43, r24	; 0x2b
        	_delay_ms(1);
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_LOW);
    4f1a:	80 e0       	ldi	r24, 0x00	; 0
    4f1c:	67 e0       	ldi	r22, 0x07	; 7
    4f1e:	40 e0       	ldi	r20, 0x00	; 0
    4f20:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    4f24:	88 c1       	rjmp	.+784    	; 0x5236 <enuWriteData+0x920>

        }else if(LOCAL_u8Address>=64 && LOCAL_u8Address<128){
    4f26:	80 91 b5 01 	lds	r24, 0x01B5
    4f2a:	80 34       	cpi	r24, 0x40	; 64
    4f2c:	08 f4       	brcc	.+2      	; 0x4f30 <enuWriteData+0x61a>
    4f2e:	fc c0       	rjmp	.+504    	; 0x5128 <enuWriteData+0x812>
    4f30:	80 91 b5 01 	lds	r24, 0x01B5
    4f34:	88 23       	and	r24, r24
    4f36:	0c f4       	brge	.+2      	; 0x4f3a <enuWriteData+0x624>
    4f38:	f7 c0       	rjmp	.+494    	; 0x5128 <enuWriteData+0x812>
        	GOTOX(LOCAL_u8Page);
    4f3a:	80 91 b4 01 	lds	r24, 0x01B4
    4f3e:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <GOTOX>
        	GOTOY((LOCAL_u8Address));
    4f42:	80 91 b5 01 	lds	r24, 0x01B5
    4f46:	0e 94 a3 18 	call	0x3146	; 0x3146 <GOTOY>
    4f4a:	80 e0       	ldi	r24, 0x00	; 0
    4f4c:	90 e0       	ldi	r25, 0x00	; 0
    4f4e:	a0 ea       	ldi	r26, 0xA0	; 160
    4f50:	b0 e4       	ldi	r27, 0x40	; 64
    4f52:	8f a3       	std	Y+39, r24	; 0x27
    4f54:	98 a7       	std	Y+40, r25	; 0x28
    4f56:	a9 a7       	std	Y+41, r26	; 0x29
    4f58:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f5a:	6f a1       	ldd	r22, Y+39	; 0x27
    4f5c:	78 a5       	ldd	r23, Y+40	; 0x28
    4f5e:	89 a5       	ldd	r24, Y+41	; 0x29
    4f60:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f62:	20 e0       	ldi	r18, 0x00	; 0
    4f64:	30 e0       	ldi	r19, 0x00	; 0
    4f66:	4a e7       	ldi	r20, 0x7A	; 122
    4f68:	55 e4       	ldi	r21, 0x45	; 69
    4f6a:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4f6e:	dc 01       	movw	r26, r24
    4f70:	cb 01       	movw	r24, r22
    4f72:	8b a3       	std	Y+35, r24	; 0x23
    4f74:	9c a3       	std	Y+36, r25	; 0x24
    4f76:	ad a3       	std	Y+37, r26	; 0x25
    4f78:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4f7a:	6b a1       	ldd	r22, Y+35	; 0x23
    4f7c:	7c a1       	ldd	r23, Y+36	; 0x24
    4f7e:	8d a1       	ldd	r24, Y+37	; 0x25
    4f80:	9e a1       	ldd	r25, Y+38	; 0x26
    4f82:	20 e0       	ldi	r18, 0x00	; 0
    4f84:	30 e0       	ldi	r19, 0x00	; 0
    4f86:	40 e8       	ldi	r20, 0x80	; 128
    4f88:	5f e3       	ldi	r21, 0x3F	; 63
    4f8a:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    4f8e:	88 23       	and	r24, r24
    4f90:	2c f4       	brge	.+10     	; 0x4f9c <enuWriteData+0x686>
		__ticks = 1;
    4f92:	81 e0       	ldi	r24, 0x01	; 1
    4f94:	90 e0       	ldi	r25, 0x00	; 0
    4f96:	9a a3       	std	Y+34, r25	; 0x22
    4f98:	89 a3       	std	Y+33, r24	; 0x21
    4f9a:	3f c0       	rjmp	.+126    	; 0x501a <enuWriteData+0x704>
	else if (__tmp > 65535)
    4f9c:	6b a1       	ldd	r22, Y+35	; 0x23
    4f9e:	7c a1       	ldd	r23, Y+36	; 0x24
    4fa0:	8d a1       	ldd	r24, Y+37	; 0x25
    4fa2:	9e a1       	ldd	r25, Y+38	; 0x26
    4fa4:	20 e0       	ldi	r18, 0x00	; 0
    4fa6:	3f ef       	ldi	r19, 0xFF	; 255
    4fa8:	4f e7       	ldi	r20, 0x7F	; 127
    4faa:	57 e4       	ldi	r21, 0x47	; 71
    4fac:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    4fb0:	18 16       	cp	r1, r24
    4fb2:	4c f5       	brge	.+82     	; 0x5006 <enuWriteData+0x6f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4fb4:	6f a1       	ldd	r22, Y+39	; 0x27
    4fb6:	78 a5       	ldd	r23, Y+40	; 0x28
    4fb8:	89 a5       	ldd	r24, Y+41	; 0x29
    4fba:	9a a5       	ldd	r25, Y+42	; 0x2a
    4fbc:	20 e0       	ldi	r18, 0x00	; 0
    4fbe:	30 e0       	ldi	r19, 0x00	; 0
    4fc0:	40 e2       	ldi	r20, 0x20	; 32
    4fc2:	51 e4       	ldi	r21, 0x41	; 65
    4fc4:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    4fc8:	dc 01       	movw	r26, r24
    4fca:	cb 01       	movw	r24, r22
    4fcc:	bc 01       	movw	r22, r24
    4fce:	cd 01       	movw	r24, r26
    4fd0:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4fd4:	dc 01       	movw	r26, r24
    4fd6:	cb 01       	movw	r24, r22
    4fd8:	9a a3       	std	Y+34, r25	; 0x22
    4fda:	89 a3       	std	Y+33, r24	; 0x21
    4fdc:	0f c0       	rjmp	.+30     	; 0x4ffc <enuWriteData+0x6e6>
    4fde:	80 e9       	ldi	r24, 0x90	; 144
    4fe0:	91 e0       	ldi	r25, 0x01	; 1
    4fe2:	98 a3       	std	Y+32, r25	; 0x20
    4fe4:	8f 8f       	std	Y+31, r24	; 0x1f
    4fe6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4fe8:	98 a1       	ldd	r25, Y+32	; 0x20
    4fea:	01 97       	sbiw	r24, 0x01	; 1
    4fec:	f1 f7       	brne	.-4      	; 0x4fea <enuWriteData+0x6d4>
    4fee:	98 a3       	std	Y+32, r25	; 0x20
    4ff0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ff2:	89 a1       	ldd	r24, Y+33	; 0x21
    4ff4:	9a a1       	ldd	r25, Y+34	; 0x22
    4ff6:	01 97       	sbiw	r24, 0x01	; 1
    4ff8:	9a a3       	std	Y+34, r25	; 0x22
    4ffa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ffc:	89 a1       	ldd	r24, Y+33	; 0x21
    4ffe:	9a a1       	ldd	r25, Y+34	; 0x22
    5000:	00 97       	sbiw	r24, 0x00	; 0
    5002:	69 f7       	brne	.-38     	; 0x4fde <enuWriteData+0x6c8>
    5004:	14 c0       	rjmp	.+40     	; 0x502e <enuWriteData+0x718>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5006:	6b a1       	ldd	r22, Y+35	; 0x23
    5008:	7c a1       	ldd	r23, Y+36	; 0x24
    500a:	8d a1       	ldd	r24, Y+37	; 0x25
    500c:	9e a1       	ldd	r25, Y+38	; 0x26
    500e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    5012:	dc 01       	movw	r26, r24
    5014:	cb 01       	movw	r24, r22
    5016:	9a a3       	std	Y+34, r25	; 0x22
    5018:	89 a3       	std	Y+33, r24	; 0x21
    501a:	89 a1       	ldd	r24, Y+33	; 0x21
    501c:	9a a1       	ldd	r25, Y+34	; 0x22
    501e:	9e 8f       	std	Y+30, r25	; 0x1e
    5020:	8d 8f       	std	Y+29, r24	; 0x1d
    5022:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5024:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5026:	01 97       	sbiw	r24, 0x01	; 1
    5028:	f1 f7       	brne	.-4      	; 0x5026 <enuWriteData+0x710>
    502a:	9e 8f       	std	Y+30, r25	; 0x1e
    502c:	8d 8f       	std	Y+29, r24	; 0x1d
        	_delay_ms(5);
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_LOW);
    502e:	80 e0       	ldi	r24, 0x00	; 0
    5030:	63 e0       	ldi	r22, 0x03	; 3
    5032:	40 e0       	ldi	r20, 0x00	; 0
    5034:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    5038:	80 e0       	ldi	r24, 0x00	; 0
    503a:	90 e0       	ldi	r25, 0x00	; 0
    503c:	a0 e8       	ldi	r26, 0x80	; 128
    503e:	bf e3       	ldi	r27, 0x3F	; 63
    5040:	89 8f       	std	Y+25, r24	; 0x19
    5042:	9a 8f       	std	Y+26, r25	; 0x1a
    5044:	ab 8f       	std	Y+27, r26	; 0x1b
    5046:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5048:	69 8d       	ldd	r22, Y+25	; 0x19
    504a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    504c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    504e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5050:	20 e0       	ldi	r18, 0x00	; 0
    5052:	30 e0       	ldi	r19, 0x00	; 0
    5054:	4a e7       	ldi	r20, 0x7A	; 122
    5056:	55 e4       	ldi	r21, 0x45	; 69
    5058:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    505c:	dc 01       	movw	r26, r24
    505e:	cb 01       	movw	r24, r22
    5060:	8d 8b       	std	Y+21, r24	; 0x15
    5062:	9e 8b       	std	Y+22, r25	; 0x16
    5064:	af 8b       	std	Y+23, r26	; 0x17
    5066:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5068:	6d 89       	ldd	r22, Y+21	; 0x15
    506a:	7e 89       	ldd	r23, Y+22	; 0x16
    506c:	8f 89       	ldd	r24, Y+23	; 0x17
    506e:	98 8d       	ldd	r25, Y+24	; 0x18
    5070:	20 e0       	ldi	r18, 0x00	; 0
    5072:	30 e0       	ldi	r19, 0x00	; 0
    5074:	40 e8       	ldi	r20, 0x80	; 128
    5076:	5f e3       	ldi	r21, 0x3F	; 63
    5078:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    507c:	88 23       	and	r24, r24
    507e:	2c f4       	brge	.+10     	; 0x508a <enuWriteData+0x774>
		__ticks = 1;
    5080:	81 e0       	ldi	r24, 0x01	; 1
    5082:	90 e0       	ldi	r25, 0x00	; 0
    5084:	9c 8b       	std	Y+20, r25	; 0x14
    5086:	8b 8b       	std	Y+19, r24	; 0x13
    5088:	3f c0       	rjmp	.+126    	; 0x5108 <enuWriteData+0x7f2>
	else if (__tmp > 65535)
    508a:	6d 89       	ldd	r22, Y+21	; 0x15
    508c:	7e 89       	ldd	r23, Y+22	; 0x16
    508e:	8f 89       	ldd	r24, Y+23	; 0x17
    5090:	98 8d       	ldd	r25, Y+24	; 0x18
    5092:	20 e0       	ldi	r18, 0x00	; 0
    5094:	3f ef       	ldi	r19, 0xFF	; 255
    5096:	4f e7       	ldi	r20, 0x7F	; 127
    5098:	57 e4       	ldi	r21, 0x47	; 71
    509a:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    509e:	18 16       	cp	r1, r24
    50a0:	4c f5       	brge	.+82     	; 0x50f4 <enuWriteData+0x7de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50a2:	69 8d       	ldd	r22, Y+25	; 0x19
    50a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    50a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    50a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    50aa:	20 e0       	ldi	r18, 0x00	; 0
    50ac:	30 e0       	ldi	r19, 0x00	; 0
    50ae:	40 e2       	ldi	r20, 0x20	; 32
    50b0:	51 e4       	ldi	r21, 0x41	; 65
    50b2:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    50b6:	dc 01       	movw	r26, r24
    50b8:	cb 01       	movw	r24, r22
    50ba:	bc 01       	movw	r22, r24
    50bc:	cd 01       	movw	r24, r26
    50be:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    50c2:	dc 01       	movw	r26, r24
    50c4:	cb 01       	movw	r24, r22
    50c6:	9c 8b       	std	Y+20, r25	; 0x14
    50c8:	8b 8b       	std	Y+19, r24	; 0x13
    50ca:	0f c0       	rjmp	.+30     	; 0x50ea <enuWriteData+0x7d4>
    50cc:	80 e9       	ldi	r24, 0x90	; 144
    50ce:	91 e0       	ldi	r25, 0x01	; 1
    50d0:	9a 8b       	std	Y+18, r25	; 0x12
    50d2:	89 8b       	std	Y+17, r24	; 0x11
    50d4:	89 89       	ldd	r24, Y+17	; 0x11
    50d6:	9a 89       	ldd	r25, Y+18	; 0x12
    50d8:	01 97       	sbiw	r24, 0x01	; 1
    50da:	f1 f7       	brne	.-4      	; 0x50d8 <enuWriteData+0x7c2>
    50dc:	9a 8b       	std	Y+18, r25	; 0x12
    50de:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50e0:	8b 89       	ldd	r24, Y+19	; 0x13
    50e2:	9c 89       	ldd	r25, Y+20	; 0x14
    50e4:	01 97       	sbiw	r24, 0x01	; 1
    50e6:	9c 8b       	std	Y+20, r25	; 0x14
    50e8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ea:	8b 89       	ldd	r24, Y+19	; 0x13
    50ec:	9c 89       	ldd	r25, Y+20	; 0x14
    50ee:	00 97       	sbiw	r24, 0x00	; 0
    50f0:	69 f7       	brne	.-38     	; 0x50cc <enuWriteData+0x7b6>
    50f2:	14 c0       	rjmp	.+40     	; 0x511c <enuWriteData+0x806>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50f4:	6d 89       	ldd	r22, Y+21	; 0x15
    50f6:	7e 89       	ldd	r23, Y+22	; 0x16
    50f8:	8f 89       	ldd	r24, Y+23	; 0x17
    50fa:	98 8d       	ldd	r25, Y+24	; 0x18
    50fc:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    5100:	dc 01       	movw	r26, r24
    5102:	cb 01       	movw	r24, r22
    5104:	9c 8b       	std	Y+20, r25	; 0x14
    5106:	8b 8b       	std	Y+19, r24	; 0x13
    5108:	8b 89       	ldd	r24, Y+19	; 0x13
    510a:	9c 89       	ldd	r25, Y+20	; 0x14
    510c:	98 8b       	std	Y+16, r25	; 0x10
    510e:	8f 87       	std	Y+15, r24	; 0x0f
    5110:	8f 85       	ldd	r24, Y+15	; 0x0f
    5112:	98 89       	ldd	r25, Y+16	; 0x10
    5114:	01 97       	sbiw	r24, 0x01	; 1
    5116:	f1 f7       	brne	.-4      	; 0x5114 <enuWriteData+0x7fe>
    5118:	98 8b       	std	Y+16, r25	; 0x10
    511a:	8f 87       	std	Y+15, r24	; 0x0f
        	_delay_ms(1);
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_HIGH);
    511c:	80 e0       	ldi	r24, 0x00	; 0
    511e:	67 e0       	ldi	r22, 0x07	; 7
    5120:	41 e0       	ldi	r20, 0x01	; 1
    5122:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    5126:	87 c0       	rjmp	.+270    	; 0x5236 <enuWriteData+0x920>

        }
        else  if(LOCAL_u8Address>=128){
    5128:	80 91 b5 01 	lds	r24, 0x01B5
    512c:	88 23       	and	r24, r24
    512e:	0c f0       	brlt	.+2      	; 0x5132 <enuWriteData+0x81c>
    5130:	82 c0       	rjmp	.+260    	; 0x5236 <enuWriteData+0x920>

        	LOCAL_u8Address=0;
    5132:	10 92 b5 01 	sts	0x01B5, r1
        	GOTOY(LOCAL_u8Address);
    5136:	80 91 b5 01 	lds	r24, 0x01B5
    513a:	0e 94 a3 18 	call	0x3146	; 0x3146 <GOTOY>
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS01, DIO_HIGH);
    513e:	80 e0       	ldi	r24, 0x00	; 0
    5140:	63 e0       	ldi	r22, 0x03	; 3
    5142:	41 e0       	ldi	r20, 0x01	; 1
    5144:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
    5148:	80 e0       	ldi	r24, 0x00	; 0
    514a:	90 e0       	ldi	r25, 0x00	; 0
    514c:	a0 e8       	ldi	r26, 0x80	; 128
    514e:	bf e3       	ldi	r27, 0x3F	; 63
    5150:	8b 87       	std	Y+11, r24	; 0x0b
    5152:	9c 87       	std	Y+12, r25	; 0x0c
    5154:	ad 87       	std	Y+13, r26	; 0x0d
    5156:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5158:	6b 85       	ldd	r22, Y+11	; 0x0b
    515a:	7c 85       	ldd	r23, Y+12	; 0x0c
    515c:	8d 85       	ldd	r24, Y+13	; 0x0d
    515e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5160:	20 e0       	ldi	r18, 0x00	; 0
    5162:	30 e0       	ldi	r19, 0x00	; 0
    5164:	4a e7       	ldi	r20, 0x7A	; 122
    5166:	55 e4       	ldi	r21, 0x45	; 69
    5168:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    516c:	dc 01       	movw	r26, r24
    516e:	cb 01       	movw	r24, r22
    5170:	8f 83       	std	Y+7, r24	; 0x07
    5172:	98 87       	std	Y+8, r25	; 0x08
    5174:	a9 87       	std	Y+9, r26	; 0x09
    5176:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5178:	6f 81       	ldd	r22, Y+7	; 0x07
    517a:	78 85       	ldd	r23, Y+8	; 0x08
    517c:	89 85       	ldd	r24, Y+9	; 0x09
    517e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5180:	20 e0       	ldi	r18, 0x00	; 0
    5182:	30 e0       	ldi	r19, 0x00	; 0
    5184:	40 e8       	ldi	r20, 0x80	; 128
    5186:	5f e3       	ldi	r21, 0x3F	; 63
    5188:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    518c:	88 23       	and	r24, r24
    518e:	2c f4       	brge	.+10     	; 0x519a <enuWriteData+0x884>
		__ticks = 1;
    5190:	81 e0       	ldi	r24, 0x01	; 1
    5192:	90 e0       	ldi	r25, 0x00	; 0
    5194:	9e 83       	std	Y+6, r25	; 0x06
    5196:	8d 83       	std	Y+5, r24	; 0x05
    5198:	3f c0       	rjmp	.+126    	; 0x5218 <enuWriteData+0x902>
	else if (__tmp > 65535)
    519a:	6f 81       	ldd	r22, Y+7	; 0x07
    519c:	78 85       	ldd	r23, Y+8	; 0x08
    519e:	89 85       	ldd	r24, Y+9	; 0x09
    51a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    51a2:	20 e0       	ldi	r18, 0x00	; 0
    51a4:	3f ef       	ldi	r19, 0xFF	; 255
    51a6:	4f e7       	ldi	r20, 0x7F	; 127
    51a8:	57 e4       	ldi	r21, 0x47	; 71
    51aa:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    51ae:	18 16       	cp	r1, r24
    51b0:	4c f5       	brge	.+82     	; 0x5204 <enuWriteData+0x8ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    51b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    51b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    51b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    51ba:	20 e0       	ldi	r18, 0x00	; 0
    51bc:	30 e0       	ldi	r19, 0x00	; 0
    51be:	40 e2       	ldi	r20, 0x20	; 32
    51c0:	51 e4       	ldi	r21, 0x41	; 65
    51c2:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    51c6:	dc 01       	movw	r26, r24
    51c8:	cb 01       	movw	r24, r22
    51ca:	bc 01       	movw	r22, r24
    51cc:	cd 01       	movw	r24, r26
    51ce:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    51d2:	dc 01       	movw	r26, r24
    51d4:	cb 01       	movw	r24, r22
    51d6:	9e 83       	std	Y+6, r25	; 0x06
    51d8:	8d 83       	std	Y+5, r24	; 0x05
    51da:	0f c0       	rjmp	.+30     	; 0x51fa <enuWriteData+0x8e4>
    51dc:	80 e9       	ldi	r24, 0x90	; 144
    51de:	91 e0       	ldi	r25, 0x01	; 1
    51e0:	9c 83       	std	Y+4, r25	; 0x04
    51e2:	8b 83       	std	Y+3, r24	; 0x03
    51e4:	8b 81       	ldd	r24, Y+3	; 0x03
    51e6:	9c 81       	ldd	r25, Y+4	; 0x04
    51e8:	01 97       	sbiw	r24, 0x01	; 1
    51ea:	f1 f7       	brne	.-4      	; 0x51e8 <enuWriteData+0x8d2>
    51ec:	9c 83       	std	Y+4, r25	; 0x04
    51ee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    51f0:	8d 81       	ldd	r24, Y+5	; 0x05
    51f2:	9e 81       	ldd	r25, Y+6	; 0x06
    51f4:	01 97       	sbiw	r24, 0x01	; 1
    51f6:	9e 83       	std	Y+6, r25	; 0x06
    51f8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    51fa:	8d 81       	ldd	r24, Y+5	; 0x05
    51fc:	9e 81       	ldd	r25, Y+6	; 0x06
    51fe:	00 97       	sbiw	r24, 0x00	; 0
    5200:	69 f7       	brne	.-38     	; 0x51dc <enuWriteData+0x8c6>
    5202:	14 c0       	rjmp	.+40     	; 0x522c <enuWriteData+0x916>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5204:	6f 81       	ldd	r22, Y+7	; 0x07
    5206:	78 85       	ldd	r23, Y+8	; 0x08
    5208:	89 85       	ldd	r24, Y+9	; 0x09
    520a:	9a 85       	ldd	r25, Y+10	; 0x0a
    520c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    5210:	dc 01       	movw	r26, r24
    5212:	cb 01       	movw	r24, r22
    5214:	9e 83       	std	Y+6, r25	; 0x06
    5216:	8d 83       	std	Y+5, r24	; 0x05
    5218:	8d 81       	ldd	r24, Y+5	; 0x05
    521a:	9e 81       	ldd	r25, Y+6	; 0x06
    521c:	9a 83       	std	Y+2, r25	; 0x02
    521e:	89 83       	std	Y+1, r24	; 0x01
    5220:	89 81       	ldd	r24, Y+1	; 0x01
    5222:	9a 81       	ldd	r25, Y+2	; 0x02
    5224:	01 97       	sbiw	r24, 0x01	; 1
    5226:	f1 f7       	brne	.-4      	; 0x5224 <enuWriteData+0x90e>
    5228:	9a 83       	std	Y+2, r25	; 0x02
    522a:	89 83       	std	Y+1, r24	; 0x01
        	_delay_ms(1);
        	DIO_enuSetPinValue(GLCD_GROUP_A, GLCD_PIN_CS02, DIO_LOW);
    522c:	80 e0       	ldi	r24, 0x00	; 0
    522e:	67 e0       	ldi	r22, 0x07	; 7
    5230:	40 e0       	ldi	r20, 0x00	; 0
    5232:	0e 94 37 10 	call	0x206e	; 0x206e <DIO_enuSetPinValue>
        }




}
    5236:	cc 59       	subi	r28, 0x9C	; 156
    5238:	df 4f       	sbci	r29, 0xFF	; 255
    523a:	0f b6       	in	r0, 0x3f	; 63
    523c:	f8 94       	cli
    523e:	de bf       	out	0x3e, r29	; 62
    5240:	0f be       	out	0x3f, r0	; 63
    5242:	cd bf       	out	0x3d, r28	; 61
    5244:	cf 91       	pop	r28
    5246:	df 91       	pop	r29
    5248:	1f 91       	pop	r17
    524a:	0f 91       	pop	r16
    524c:	08 95       	ret

0000524e <enuDrawChar>:


static ES_t enuDrawChar(u8 Copy_u8char){
    524e:	df 93       	push	r29
    5250:	cf 93       	push	r28
    5252:	cd b7       	in	r28, 0x3d	; 61
    5254:	de b7       	in	r29, 0x3e	; 62
    5256:	c2 59       	subi	r28, 0x92	; 146
    5258:	d1 40       	sbci	r29, 0x01	; 1
    525a:	0f b6       	in	r0, 0x3f	; 63
    525c:	f8 94       	cli
    525e:	de bf       	out	0x3e, r29	; 62
    5260:	0f be       	out	0x3f, r0	; 63
    5262:	cd bf       	out	0x3d, r28	; 61
    5264:	fe 01       	movw	r30, r28
    5266:	e6 51       	subi	r30, 0x16	; 22
    5268:	ff 4f       	sbci	r31, 0xFF	; 255
    526a:	80 83       	st	Z, r24
	switch(Copy_u8char){
    526c:	fe 01       	movw	r30, r28
    526e:	e6 51       	subi	r30, 0x16	; 22
    5270:	ff 4f       	sbci	r31, 0xFF	; 255
    5272:	80 81       	ld	r24, Z
    5274:	28 2f       	mov	r18, r24
    5276:	30 e0       	ldi	r19, 0x00	; 0
    5278:	c5 51       	subi	r28, 0x15	; 21
    527a:	df 4f       	sbci	r29, 0xFF	; 255
    527c:	39 83       	std	Y+1, r19	; 0x01
    527e:	28 83       	st	Y, r18
    5280:	cb 5e       	subi	r28, 0xEB	; 235
    5282:	d0 40       	sbci	r29, 0x00	; 0
    5284:	c5 51       	subi	r28, 0x15	; 21
    5286:	df 4f       	sbci	r29, 0xFF	; 255
    5288:	88 81       	ld	r24, Y
    528a:	99 81       	ldd	r25, Y+1	; 0x01
    528c:	cb 5e       	subi	r28, 0xEB	; 235
    528e:	d0 40       	sbci	r29, 0x00	; 0
    5290:	81 36       	cpi	r24, 0x61	; 97
    5292:	91 05       	cpc	r25, r1
    5294:	09 f4       	brne	.+2      	; 0x5298 <enuDrawChar+0x4a>
    5296:	98 c1       	rjmp	.+816    	; 0x55c8 <enuDrawChar+0x37a>
    5298:	c5 51       	subi	r28, 0x15	; 21
    529a:	df 4f       	sbci	r29, 0xFF	; 255
    529c:	e8 81       	ld	r30, Y
    529e:	f9 81       	ldd	r31, Y+1	; 0x01
    52a0:	cb 5e       	subi	r28, 0xEB	; 235
    52a2:	d0 40       	sbci	r29, 0x00	; 0
    52a4:	e2 36       	cpi	r30, 0x62	; 98
    52a6:	f1 05       	cpc	r31, r1
    52a8:	0c f0       	brlt	.+2      	; 0x52ac <enuDrawChar+0x5e>
    52aa:	d4 c0       	rjmp	.+424    	; 0x5454 <enuDrawChar+0x206>
    52ac:	c5 51       	subi	r28, 0x15	; 21
    52ae:	df 4f       	sbci	r29, 0xFF	; 255
    52b0:	28 81       	ld	r18, Y
    52b2:	39 81       	ldd	r19, Y+1	; 0x01
    52b4:	cb 5e       	subi	r28, 0xEB	; 235
    52b6:	d0 40       	sbci	r29, 0x00	; 0
    52b8:	26 33       	cpi	r18, 0x36	; 54
    52ba:	31 05       	cpc	r19, r1
    52bc:	11 f4       	brne	.+4      	; 0x52c2 <enuDrawChar+0x74>
    52be:	0c 94 2d 35 	jmp	0x6a5a	; 0x6a5a <enuDrawChar+0x180c>
    52c2:	c5 51       	subi	r28, 0x15	; 21
    52c4:	df 4f       	sbci	r29, 0xFF	; 255
    52c6:	88 81       	ld	r24, Y
    52c8:	99 81       	ldd	r25, Y+1	; 0x01
    52ca:	cb 5e       	subi	r28, 0xEB	; 235
    52cc:	d0 40       	sbci	r29, 0x00	; 0
    52ce:	87 33       	cpi	r24, 0x37	; 55
    52d0:	91 05       	cpc	r25, r1
    52d2:	0c f0       	brlt	.+2      	; 0x52d6 <enuDrawChar+0x88>
    52d4:	5a c0       	rjmp	.+180    	; 0x538a <enuDrawChar+0x13c>
    52d6:	c5 51       	subi	r28, 0x15	; 21
    52d8:	df 4f       	sbci	r29, 0xFF	; 255
    52da:	e8 81       	ld	r30, Y
    52dc:	f9 81       	ldd	r31, Y+1	; 0x01
    52de:	cb 5e       	subi	r28, 0xEB	; 235
    52e0:	d0 40       	sbci	r29, 0x00	; 0
    52e2:	e2 33       	cpi	r30, 0x32	; 50
    52e4:	f1 05       	cpc	r31, r1
    52e6:	11 f4       	brne	.+4      	; 0x52ec <enuDrawChar+0x9e>
    52e8:	0c 94 7d 33 	jmp	0x66fa	; 0x66fa <enuDrawChar+0x14ac>
    52ec:	c5 51       	subi	r28, 0x15	; 21
    52ee:	df 4f       	sbci	r29, 0xFF	; 255
    52f0:	28 81       	ld	r18, Y
    52f2:	39 81       	ldd	r19, Y+1	; 0x01
    52f4:	cb 5e       	subi	r28, 0xEB	; 235
    52f6:	d0 40       	sbci	r29, 0x00	; 0
    52f8:	23 33       	cpi	r18, 0x33	; 51
    52fa:	31 05       	cpc	r19, r1
    52fc:	74 f5       	brge	.+92     	; 0x535a <enuDrawChar+0x10c>
    52fe:	c5 51       	subi	r28, 0x15	; 21
    5300:	df 4f       	sbci	r29, 0xFF	; 255
    5302:	88 81       	ld	r24, Y
    5304:	99 81       	ldd	r25, Y+1	; 0x01
    5306:	cb 5e       	subi	r28, 0xEB	; 235
    5308:	d0 40       	sbci	r29, 0x00	; 0
    530a:	80 33       	cpi	r24, 0x30	; 48
    530c:	91 05       	cpc	r25, r1
    530e:	11 f4       	brne	.+4      	; 0x5314 <enuDrawChar+0xc6>
    5310:	0c 94 a5 32 	jmp	0x654a	; 0x654a <enuDrawChar+0x12fc>
    5314:	c5 51       	subi	r28, 0x15	; 21
    5316:	df 4f       	sbci	r29, 0xFF	; 255
    5318:	e8 81       	ld	r30, Y
    531a:	f9 81       	ldd	r31, Y+1	; 0x01
    531c:	cb 5e       	subi	r28, 0xEB	; 235
    531e:	d0 40       	sbci	r29, 0x00	; 0
    5320:	e1 33       	cpi	r30, 0x31	; 49
    5322:	f1 05       	cpc	r31, r1
    5324:	14 f0       	brlt	.+4      	; 0x532a <enuDrawChar+0xdc>
    5326:	0c 94 11 33 	jmp	0x6622	; 0x6622 <enuDrawChar+0x13d4>
    532a:	c5 51       	subi	r28, 0x15	; 21
    532c:	df 4f       	sbci	r29, 0xFF	; 255
    532e:	28 81       	ld	r18, Y
    5330:	39 81       	ldd	r19, Y+1	; 0x01
    5332:	cb 5e       	subi	r28, 0xEB	; 235
    5334:	d0 40       	sbci	r29, 0x00	; 0
    5336:	20 32       	cpi	r18, 0x20	; 32
    5338:	31 05       	cpc	r19, r1
    533a:	11 f4       	brne	.+4      	; 0x5340 <enuDrawChar+0xf2>
    533c:	0c 94 cd 31 	jmp	0x639a	; 0x639a <enuDrawChar+0x114c>
    5340:	c5 51       	subi	r28, 0x15	; 21
    5342:	df 4f       	sbci	r29, 0xFF	; 255
    5344:	88 81       	ld	r24, Y
    5346:	99 81       	ldd	r25, Y+1	; 0x01
    5348:	cb 5e       	subi	r28, 0xEB	; 235
    534a:	d0 40       	sbci	r29, 0x00	; 0
    534c:	8d 32       	cpi	r24, 0x2D	; 45
    534e:	91 05       	cpc	r25, r1
    5350:	11 f4       	brne	.+4      	; 0x5356 <enuDrawChar+0x108>
    5352:	0c 94 8d 38 	jmp	0x711a	; 0x711a <enuDrawChar+0x1ecc>
    5356:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    535a:	c5 51       	subi	r28, 0x15	; 21
    535c:	df 4f       	sbci	r29, 0xFF	; 255
    535e:	e8 81       	ld	r30, Y
    5360:	f9 81       	ldd	r31, Y+1	; 0x01
    5362:	cb 5e       	subi	r28, 0xEB	; 235
    5364:	d0 40       	sbci	r29, 0x00	; 0
    5366:	e4 33       	cpi	r30, 0x34	; 52
    5368:	f1 05       	cpc	r31, r1
    536a:	11 f4       	brne	.+4      	; 0x5370 <enuDrawChar+0x122>
    536c:	0c 94 55 34 	jmp	0x68aa	; 0x68aa <enuDrawChar+0x165c>
    5370:	c5 51       	subi	r28, 0x15	; 21
    5372:	df 4f       	sbci	r29, 0xFF	; 255
    5374:	28 81       	ld	r18, Y
    5376:	39 81       	ldd	r19, Y+1	; 0x01
    5378:	cb 5e       	subi	r28, 0xEB	; 235
    537a:	d0 40       	sbci	r29, 0x00	; 0
    537c:	25 33       	cpi	r18, 0x35	; 53
    537e:	31 05       	cpc	r19, r1
    5380:	14 f0       	brlt	.+4      	; 0x5386 <enuDrawChar+0x138>
    5382:	0c 94 c1 34 	jmp	0x6982	; 0x6982 <enuDrawChar+0x1734>
    5386:	0c 94 e9 33 	jmp	0x67d2	; 0x67d2 <enuDrawChar+0x1584>
    538a:	c5 51       	subi	r28, 0x15	; 21
    538c:	df 4f       	sbci	r29, 0xFF	; 255
    538e:	88 81       	ld	r24, Y
    5390:	99 81       	ldd	r25, Y+1	; 0x01
    5392:	cb 5e       	subi	r28, 0xEB	; 235
    5394:	d0 40       	sbci	r29, 0x00	; 0
    5396:	86 34       	cpi	r24, 0x46	; 70
    5398:	91 05       	cpc	r25, r1
    539a:	11 f4       	brne	.+4      	; 0x53a0 <enuDrawChar+0x152>
    539c:	0c 94 b5 37 	jmp	0x6f6a	; 0x6f6a <enuDrawChar+0x1d1c>
    53a0:	c5 51       	subi	r28, 0x15	; 21
    53a2:	df 4f       	sbci	r29, 0xFF	; 255
    53a4:	e8 81       	ld	r30, Y
    53a6:	f9 81       	ldd	r31, Y+1	; 0x01
    53a8:	cb 5e       	subi	r28, 0xEB	; 235
    53aa:	d0 40       	sbci	r29, 0x00	; 0
    53ac:	e7 34       	cpi	r30, 0x47	; 71
    53ae:	f1 05       	cpc	r31, r1
    53b0:	74 f5       	brge	.+92     	; 0x540e <enuDrawChar+0x1c0>
    53b2:	c5 51       	subi	r28, 0x15	; 21
    53b4:	df 4f       	sbci	r29, 0xFF	; 255
    53b6:	28 81       	ld	r18, Y
    53b8:	39 81       	ldd	r19, Y+1	; 0x01
    53ba:	cb 5e       	subi	r28, 0xEB	; 235
    53bc:	d0 40       	sbci	r29, 0x00	; 0
    53be:	28 33       	cpi	r18, 0x38	; 56
    53c0:	31 05       	cpc	r19, r1
    53c2:	11 f4       	brne	.+4      	; 0x53c8 <enuDrawChar+0x17a>
    53c4:	0c 94 05 36 	jmp	0x6c0a	; 0x6c0a <enuDrawChar+0x19bc>
    53c8:	c5 51       	subi	r28, 0x15	; 21
    53ca:	df 4f       	sbci	r29, 0xFF	; 255
    53cc:	88 81       	ld	r24, Y
    53ce:	99 81       	ldd	r25, Y+1	; 0x01
    53d0:	cb 5e       	subi	r28, 0xEB	; 235
    53d2:	d0 40       	sbci	r29, 0x00	; 0
    53d4:	88 33       	cpi	r24, 0x38	; 56
    53d6:	91 05       	cpc	r25, r1
    53d8:	14 f4       	brge	.+4      	; 0x53de <enuDrawChar+0x190>
    53da:	0c 94 99 35 	jmp	0x6b32	; 0x6b32 <enuDrawChar+0x18e4>
    53de:	c5 51       	subi	r28, 0x15	; 21
    53e0:	df 4f       	sbci	r29, 0xFF	; 255
    53e2:	e8 81       	ld	r30, Y
    53e4:	f9 81       	ldd	r31, Y+1	; 0x01
    53e6:	cb 5e       	subi	r28, 0xEB	; 235
    53e8:	d0 40       	sbci	r29, 0x00	; 0
    53ea:	e9 33       	cpi	r30, 0x39	; 57
    53ec:	f1 05       	cpc	r31, r1
    53ee:	11 f4       	brne	.+4      	; 0x53f4 <enuDrawChar+0x1a6>
    53f0:	0c 94 71 36 	jmp	0x6ce2	; 0x6ce2 <enuDrawChar+0x1a94>
    53f4:	c5 51       	subi	r28, 0x15	; 21
    53f6:	df 4f       	sbci	r29, 0xFF	; 255
    53f8:	28 81       	ld	r18, Y
    53fa:	39 81       	ldd	r19, Y+1	; 0x01
    53fc:	cb 5e       	subi	r28, 0xEB	; 235
    53fe:	d0 40       	sbci	r29, 0x00	; 0
    5400:	2d 33       	cpi	r18, 0x3D	; 61
    5402:	31 05       	cpc	r19, r1
    5404:	11 f4       	brne	.+4      	; 0x540a <enuDrawChar+0x1bc>
    5406:	0c 94 39 32 	jmp	0x6472	; 0x6472 <enuDrawChar+0x1224>
    540a:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    540e:	c5 51       	subi	r28, 0x15	; 21
    5410:	df 4f       	sbci	r29, 0xFF	; 255
    5412:	88 81       	ld	r24, Y
    5414:	99 81       	ldd	r25, Y+1	; 0x01
    5416:	cb 5e       	subi	r28, 0xEB	; 235
    5418:	d0 40       	sbci	r29, 0x00	; 0
    541a:	8c 34       	cpi	r24, 0x4C	; 76
    541c:	91 05       	cpc	r25, r1
    541e:	11 f4       	brne	.+4      	; 0x5424 <enuDrawChar+0x1d6>
    5420:	0c 94 49 37 	jmp	0x6e92	; 0x6e92 <enuDrawChar+0x1c44>
    5424:	c5 51       	subi	r28, 0x15	; 21
    5426:	df 4f       	sbci	r29, 0xFF	; 255
    5428:	e8 81       	ld	r30, Y
    542a:	f9 81       	ldd	r31, Y+1	; 0x01
    542c:	cb 5e       	subi	r28, 0xEB	; 235
    542e:	d0 40       	sbci	r29, 0x00	; 0
    5430:	e2 35       	cpi	r30, 0x52	; 82
    5432:	f1 05       	cpc	r31, r1
    5434:	11 f4       	brne	.+4      	; 0x543a <enuDrawChar+0x1ec>
    5436:	0c 94 21 38 	jmp	0x7042	; 0x7042 <enuDrawChar+0x1df4>
    543a:	c5 51       	subi	r28, 0x15	; 21
    543c:	df 4f       	sbci	r29, 0xFF	; 255
    543e:	28 81       	ld	r18, Y
    5440:	39 81       	ldd	r19, Y+1	; 0x01
    5442:	cb 5e       	subi	r28, 0xEB	; 235
    5444:	d0 40       	sbci	r29, 0x00	; 0
    5446:	28 34       	cpi	r18, 0x48	; 72
    5448:	31 05       	cpc	r19, r1
    544a:	11 f4       	brne	.+4      	; 0x5450 <enuDrawChar+0x202>
    544c:	0c 94 dd 36 	jmp	0x6dba	; 0x6dba <enuDrawChar+0x1b6c>
    5450:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    5454:	c5 51       	subi	r28, 0x15	; 21
    5456:	df 4f       	sbci	r29, 0xFF	; 255
    5458:	88 81       	ld	r24, Y
    545a:	99 81       	ldd	r25, Y+1	; 0x01
    545c:	cb 5e       	subi	r28, 0xEB	; 235
    545e:	d0 40       	sbci	r29, 0x00	; 0
    5460:	8d 36       	cpi	r24, 0x6D	; 109
    5462:	91 05       	cpc	r25, r1
    5464:	09 f4       	brne	.+2      	; 0x5468 <enuDrawChar+0x21a>
    5466:	32 c4       	rjmp	.+2148   	; 0x5ccc <enuDrawChar+0xa7e>
    5468:	c5 51       	subi	r28, 0x15	; 21
    546a:	df 4f       	sbci	r29, 0xFF	; 255
    546c:	e8 81       	ld	r30, Y
    546e:	f9 81       	ldd	r31, Y+1	; 0x01
    5470:	cb 5e       	subi	r28, 0xEB	; 235
    5472:	d0 40       	sbci	r29, 0x00	; 0
    5474:	ee 36       	cpi	r30, 0x6E	; 110
    5476:	f1 05       	cpc	r31, r1
    5478:	0c f0       	brlt	.+2      	; 0x547c <enuDrawChar+0x22e>
    547a:	53 c0       	rjmp	.+166    	; 0x5522 <enuDrawChar+0x2d4>
    547c:	c5 51       	subi	r28, 0x15	; 21
    547e:	df 4f       	sbci	r29, 0xFF	; 255
    5480:	28 81       	ld	r18, Y
    5482:	39 81       	ldd	r19, Y+1	; 0x01
    5484:	cb 5e       	subi	r28, 0xEB	; 235
    5486:	d0 40       	sbci	r29, 0x00	; 0
    5488:	26 36       	cpi	r18, 0x66	; 102
    548a:	31 05       	cpc	r19, r1
    548c:	09 f4       	brne	.+2      	; 0x5490 <enuDrawChar+0x242>
    548e:	6a c2       	rjmp	.+1236   	; 0x5964 <enuDrawChar+0x716>
    5490:	c5 51       	subi	r28, 0x15	; 21
    5492:	df 4f       	sbci	r29, 0xFF	; 255
    5494:	88 81       	ld	r24, Y
    5496:	99 81       	ldd	r25, Y+1	; 0x01
    5498:	cb 5e       	subi	r28, 0xEB	; 235
    549a:	d0 40       	sbci	r29, 0x00	; 0
    549c:	87 36       	cpi	r24, 0x67	; 103
    549e:	91 05       	cpc	r25, r1
    54a0:	04 f5       	brge	.+64     	; 0x54e2 <enuDrawChar+0x294>
    54a2:	c5 51       	subi	r28, 0x15	; 21
    54a4:	df 4f       	sbci	r29, 0xFF	; 255
    54a6:	e8 81       	ld	r30, Y
    54a8:	f9 81       	ldd	r31, Y+1	; 0x01
    54aa:	cb 5e       	subi	r28, 0xEB	; 235
    54ac:	d0 40       	sbci	r29, 0x00	; 0
    54ae:	e4 36       	cpi	r30, 0x64	; 100
    54b0:	f1 05       	cpc	r31, r1
    54b2:	09 f4       	brne	.+2      	; 0x54b6 <enuDrawChar+0x268>
    54b4:	7d c1       	rjmp	.+762    	; 0x57b0 <enuDrawChar+0x562>
    54b6:	c5 51       	subi	r28, 0x15	; 21
    54b8:	df 4f       	sbci	r29, 0xFF	; 255
    54ba:	28 81       	ld	r18, Y
    54bc:	39 81       	ldd	r19, Y+1	; 0x01
    54be:	cb 5e       	subi	r28, 0xEB	; 235
    54c0:	d0 40       	sbci	r29, 0x00	; 0
    54c2:	25 36       	cpi	r18, 0x65	; 101
    54c4:	31 05       	cpc	r19, r1
    54c6:	0c f0       	brlt	.+2      	; 0x54ca <enuDrawChar+0x27c>
    54c8:	e0 c1       	rjmp	.+960    	; 0x588a <enuDrawChar+0x63c>
    54ca:	c5 51       	subi	r28, 0x15	; 21
    54cc:	df 4f       	sbci	r29, 0xFF	; 255
    54ce:	88 81       	ld	r24, Y
    54d0:	99 81       	ldd	r25, Y+1	; 0x01
    54d2:	cb 5e       	subi	r28, 0xEB	; 235
    54d4:	d0 40       	sbci	r29, 0x00	; 0
    54d6:	83 36       	cpi	r24, 0x63	; 99
    54d8:	91 05       	cpc	r25, r1
    54da:	09 f4       	brne	.+2      	; 0x54de <enuDrawChar+0x290>
    54dc:	f2 c0       	rjmp	.+484    	; 0x56c2 <enuDrawChar+0x474>
    54de:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    54e2:	c5 51       	subi	r28, 0x15	; 21
    54e4:	df 4f       	sbci	r29, 0xFF	; 255
    54e6:	e8 81       	ld	r30, Y
    54e8:	f9 81       	ldd	r31, Y+1	; 0x01
    54ea:	cb 5e       	subi	r28, 0xEB	; 235
    54ec:	d0 40       	sbci	r29, 0x00	; 0
    54ee:	e9 36       	cpi	r30, 0x69	; 105
    54f0:	f1 05       	cpc	r31, r1
    54f2:	09 f4       	brne	.+2      	; 0x54f6 <enuDrawChar+0x2a8>
    54f4:	11 c3       	rjmp	.+1570   	; 0x5b18 <enuDrawChar+0x8ca>
    54f6:	c5 51       	subi	r28, 0x15	; 21
    54f8:	df 4f       	sbci	r29, 0xFF	; 255
    54fa:	28 81       	ld	r18, Y
    54fc:	39 81       	ldd	r19, Y+1	; 0x01
    54fe:	cb 5e       	subi	r28, 0xEB	; 235
    5500:	d0 40       	sbci	r29, 0x00	; 0
    5502:	2b 36       	cpi	r18, 0x6B	; 107
    5504:	31 05       	cpc	r19, r1
    5506:	09 f4       	brne	.+2      	; 0x550a <enuDrawChar+0x2bc>
    5508:	74 c3       	rjmp	.+1768   	; 0x5bf2 <enuDrawChar+0x9a4>
    550a:	c5 51       	subi	r28, 0x15	; 21
    550c:	df 4f       	sbci	r29, 0xFF	; 255
    550e:	88 81       	ld	r24, Y
    5510:	99 81       	ldd	r25, Y+1	; 0x01
    5512:	cb 5e       	subi	r28, 0xEB	; 235
    5514:	d0 40       	sbci	r29, 0x00	; 0
    5516:	88 36       	cpi	r24, 0x68	; 104
    5518:	91 05       	cpc	r25, r1
    551a:	09 f4       	brne	.+2      	; 0x551e <enuDrawChar+0x2d0>
    551c:	90 c2       	rjmp	.+1312   	; 0x5a3e <enuDrawChar+0x7f0>
    551e:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    5522:	c5 51       	subi	r28, 0x15	; 21
    5524:	df 4f       	sbci	r29, 0xFF	; 255
    5526:	e8 81       	ld	r30, Y
    5528:	f9 81       	ldd	r31, Y+1	; 0x01
    552a:	cb 5e       	subi	r28, 0xEB	; 235
    552c:	d0 40       	sbci	r29, 0x00	; 0
    552e:	e4 37       	cpi	r30, 0x74	; 116
    5530:	f1 05       	cpc	r31, r1
    5532:	09 f4       	brne	.+2      	; 0x5536 <enuDrawChar+0x2e8>
    5534:	7f c5       	rjmp	.+2814   	; 0x6034 <enuDrawChar+0xde6>
    5536:	c5 51       	subi	r28, 0x15	; 21
    5538:	df 4f       	sbci	r29, 0xFF	; 255
    553a:	28 81       	ld	r18, Y
    553c:	39 81       	ldd	r19, Y+1	; 0x01
    553e:	cb 5e       	subi	r28, 0xEB	; 235
    5540:	d0 40       	sbci	r29, 0x00	; 0
    5542:	25 37       	cpi	r18, 0x75	; 117
    5544:	31 05       	cpc	r19, r1
    5546:	04 f5       	brge	.+64     	; 0x5588 <enuDrawChar+0x33a>
    5548:	c5 51       	subi	r28, 0x15	; 21
    554a:	df 4f       	sbci	r29, 0xFF	; 255
    554c:	88 81       	ld	r24, Y
    554e:	99 81       	ldd	r25, Y+1	; 0x01
    5550:	cb 5e       	subi	r28, 0xEB	; 235
    5552:	d0 40       	sbci	r29, 0x00	; 0
    5554:	81 37       	cpi	r24, 0x71	; 113
    5556:	91 05       	cpc	r25, r1
    5558:	09 f4       	brne	.+2      	; 0x555c <enuDrawChar+0x30e>
    555a:	92 c4       	rjmp	.+2340   	; 0x5e80 <enuDrawChar+0xc32>
    555c:	c5 51       	subi	r28, 0x15	; 21
    555e:	df 4f       	sbci	r29, 0xFF	; 255
    5560:	e8 81       	ld	r30, Y
    5562:	f9 81       	ldd	r31, Y+1	; 0x01
    5564:	cb 5e       	subi	r28, 0xEB	; 235
    5566:	d0 40       	sbci	r29, 0x00	; 0
    5568:	e2 37       	cpi	r30, 0x72	; 114
    556a:	f1 05       	cpc	r31, r1
    556c:	09 f4       	brne	.+2      	; 0x5570 <enuDrawChar+0x322>
    556e:	f5 c4       	rjmp	.+2538   	; 0x5f5a <enuDrawChar+0xd0c>
    5570:	c5 51       	subi	r28, 0x15	; 21
    5572:	df 4f       	sbci	r29, 0xFF	; 255
    5574:	28 81       	ld	r18, Y
    5576:	39 81       	ldd	r19, Y+1	; 0x01
    5578:	cb 5e       	subi	r28, 0xEB	; 235
    557a:	d0 40       	sbci	r29, 0x00	; 0
    557c:	2e 36       	cpi	r18, 0x6E	; 110
    557e:	31 05       	cpc	r19, r1
    5580:	09 f4       	brne	.+2      	; 0x5584 <enuDrawChar+0x336>
    5582:	11 c4       	rjmp	.+2082   	; 0x5da6 <enuDrawChar+0xb58>
    5584:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
    5588:	c5 51       	subi	r28, 0x15	; 21
    558a:	df 4f       	sbci	r29, 0xFF	; 255
    558c:	88 81       	ld	r24, Y
    558e:	99 81       	ldd	r25, Y+1	; 0x01
    5590:	cb 5e       	subi	r28, 0xEB	; 235
    5592:	d0 40       	sbci	r29, 0x00	; 0
    5594:	89 37       	cpi	r24, 0x79	; 121
    5596:	91 05       	cpc	r25, r1
    5598:	09 f4       	brne	.+2      	; 0x559c <enuDrawChar+0x34e>
    559a:	26 c6       	rjmp	.+3148   	; 0x61e8 <enuDrawChar+0xf9a>
    559c:	c5 51       	subi	r28, 0x15	; 21
    559e:	df 4f       	sbci	r29, 0xFF	; 255
    55a0:	e8 81       	ld	r30, Y
    55a2:	f9 81       	ldd	r31, Y+1	; 0x01
    55a4:	cb 5e       	subi	r28, 0xEB	; 235
    55a6:	d0 40       	sbci	r29, 0x00	; 0
    55a8:	ea 37       	cpi	r30, 0x7A	; 122
    55aa:	f1 05       	cpc	r31, r1
    55ac:	09 f4       	brne	.+2      	; 0x55b0 <enuDrawChar+0x362>
    55ae:	89 c6       	rjmp	.+3346   	; 0x62c2 <enuDrawChar+0x1074>
    55b0:	c5 51       	subi	r28, 0x15	; 21
    55b2:	df 4f       	sbci	r29, 0xFF	; 255
    55b4:	28 81       	ld	r18, Y
    55b6:	39 81       	ldd	r19, Y+1	; 0x01
    55b8:	cb 5e       	subi	r28, 0xEB	; 235
    55ba:	d0 40       	sbci	r29, 0x00	; 0
    55bc:	25 37       	cpi	r18, 0x75	; 117
    55be:	31 05       	cpc	r19, r1
    55c0:	09 f4       	brne	.+2      	; 0x55c4 <enuDrawChar+0x376>
    55c2:	a5 c5       	rjmp	.+2890   	; 0x610e <enuDrawChar+0xec0>
    55c4:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
	case 'a': ;
		u8 a[5]={0x20,0x54,0x54,0x54,0x78};
    55c8:	ce 01       	movw	r24, r28
    55ca:	8d 5b       	subi	r24, 0xBD	; 189
    55cc:	9f 4f       	sbci	r25, 0xFF	; 255
    55ce:	c2 51       	subi	r28, 0x12	; 18
    55d0:	df 4f       	sbci	r29, 0xFF	; 255
    55d2:	99 83       	std	Y+1, r25	; 0x01
    55d4:	88 83       	st	Y, r24
    55d6:	ce 5e       	subi	r28, 0xEE	; 238
    55d8:	d0 40       	sbci	r29, 0x00	; 0
    55da:	81 e7       	ldi	r24, 0x71	; 113
    55dc:	91 e0       	ldi	r25, 0x01	; 1
    55de:	c0 51       	subi	r28, 0x10	; 16
    55e0:	df 4f       	sbci	r29, 0xFF	; 255
    55e2:	99 83       	std	Y+1, r25	; 0x01
    55e4:	88 83       	st	Y, r24
    55e6:	c0 5f       	subi	r28, 0xF0	; 240
    55e8:	d0 40       	sbci	r29, 0x00	; 0
    55ea:	95 e0       	ldi	r25, 0x05	; 5
    55ec:	ce 50       	subi	r28, 0x0E	; 14
    55ee:	df 4f       	sbci	r29, 0xFF	; 255
    55f0:	98 83       	st	Y, r25
    55f2:	c2 5f       	subi	r28, 0xF2	; 242
    55f4:	d0 40       	sbci	r29, 0x00	; 0
    55f6:	c0 51       	subi	r28, 0x10	; 16
    55f8:	df 4f       	sbci	r29, 0xFF	; 255
    55fa:	e8 81       	ld	r30, Y
    55fc:	f9 81       	ldd	r31, Y+1	; 0x01
    55fe:	c0 5f       	subi	r28, 0xF0	; 240
    5600:	d0 40       	sbci	r29, 0x00	; 0
    5602:	00 80       	ld	r0, Z
    5604:	c0 51       	subi	r28, 0x10	; 16
    5606:	df 4f       	sbci	r29, 0xFF	; 255
    5608:	28 81       	ld	r18, Y
    560a:	39 81       	ldd	r19, Y+1	; 0x01
    560c:	c0 5f       	subi	r28, 0xF0	; 240
    560e:	d0 40       	sbci	r29, 0x00	; 0
    5610:	2f 5f       	subi	r18, 0xFF	; 255
    5612:	3f 4f       	sbci	r19, 0xFF	; 255
    5614:	c0 51       	subi	r28, 0x10	; 16
    5616:	df 4f       	sbci	r29, 0xFF	; 255
    5618:	39 83       	std	Y+1, r19	; 0x01
    561a:	28 83       	st	Y, r18
    561c:	c0 5f       	subi	r28, 0xF0	; 240
    561e:	d0 40       	sbci	r29, 0x00	; 0
    5620:	c2 51       	subi	r28, 0x12	; 18
    5622:	df 4f       	sbci	r29, 0xFF	; 255
    5624:	e8 81       	ld	r30, Y
    5626:	f9 81       	ldd	r31, Y+1	; 0x01
    5628:	ce 5e       	subi	r28, 0xEE	; 238
    562a:	d0 40       	sbci	r29, 0x00	; 0
    562c:	00 82       	st	Z, r0
    562e:	c2 51       	subi	r28, 0x12	; 18
    5630:	df 4f       	sbci	r29, 0xFF	; 255
    5632:	28 81       	ld	r18, Y
    5634:	39 81       	ldd	r19, Y+1	; 0x01
    5636:	ce 5e       	subi	r28, 0xEE	; 238
    5638:	d0 40       	sbci	r29, 0x00	; 0
    563a:	2f 5f       	subi	r18, 0xFF	; 255
    563c:	3f 4f       	sbci	r19, 0xFF	; 255
    563e:	c2 51       	subi	r28, 0x12	; 18
    5640:	df 4f       	sbci	r29, 0xFF	; 255
    5642:	39 83       	std	Y+1, r19	; 0x01
    5644:	28 83       	st	Y, r18
    5646:	ce 5e       	subi	r28, 0xEE	; 238
    5648:	d0 40       	sbci	r29, 0x00	; 0
    564a:	ce 50       	subi	r28, 0x0E	; 14
    564c:	df 4f       	sbci	r29, 0xFF	; 255
    564e:	38 81       	ld	r19, Y
    5650:	c2 5f       	subi	r28, 0xF2	; 242
    5652:	d0 40       	sbci	r29, 0x00	; 0
    5654:	31 50       	subi	r19, 0x01	; 1
    5656:	ce 50       	subi	r28, 0x0E	; 14
    5658:	df 4f       	sbci	r29, 0xFF	; 255
    565a:	38 83       	st	Y, r19
    565c:	c2 5f       	subi	r28, 0xF2	; 242
    565e:	d0 40       	sbci	r29, 0x00	; 0
    5660:	ce 50       	subi	r28, 0x0E	; 14
    5662:	df 4f       	sbci	r29, 0xFF	; 255
    5664:	88 81       	ld	r24, Y
    5666:	c2 5f       	subi	r28, 0xF2	; 242
    5668:	d0 40       	sbci	r29, 0x00	; 0
    566a:	88 23       	and	r24, r24
    566c:	21 f6       	brne	.-120    	; 0x55f6 <enuDrawChar+0x3a8>
		for(int i = 0 ; i<5;i++){
    566e:	fe 01       	movw	r30, r28
    5670:	ef 5b       	subi	r30, 0xBF	; 191
    5672:	ff 4f       	sbci	r31, 0xFF	; 255
    5674:	11 82       	std	Z+1, r1	; 0x01
    5676:	10 82       	st	Z, r1
    5678:	1a c0       	rjmp	.+52     	; 0x56ae <enuDrawChar+0x460>
			enuWriteData(a[i]);
    567a:	fe 01       	movw	r30, r28
    567c:	ef 5b       	subi	r30, 0xBF	; 191
    567e:	ff 4f       	sbci	r31, 0xFF	; 255
    5680:	20 81       	ld	r18, Z
    5682:	31 81       	ldd	r19, Z+1	; 0x01
    5684:	ce 01       	movw	r24, r28
    5686:	8d 5b       	subi	r24, 0xBD	; 189
    5688:	9f 4f       	sbci	r25, 0xFF	; 255
    568a:	fc 01       	movw	r30, r24
    568c:	e2 0f       	add	r30, r18
    568e:	f3 1f       	adc	r31, r19
    5690:	80 81       	ld	r24, Z
    5692:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>

static ES_t enuDrawChar(u8 Copy_u8char){
	switch(Copy_u8char){
	case 'a': ;
		u8 a[5]={0x20,0x54,0x54,0x54,0x78};
		for(int i = 0 ; i<5;i++){
    5696:	de 01       	movw	r26, r28
    5698:	af 5b       	subi	r26, 0xBF	; 191
    569a:	bf 4f       	sbci	r27, 0xFF	; 255
    569c:	fe 01       	movw	r30, r28
    569e:	ef 5b       	subi	r30, 0xBF	; 191
    56a0:	ff 4f       	sbci	r31, 0xFF	; 255
    56a2:	80 81       	ld	r24, Z
    56a4:	91 81       	ldd	r25, Z+1	; 0x01
    56a6:	01 96       	adiw	r24, 0x01	; 1
    56a8:	11 96       	adiw	r26, 0x01	; 1
    56aa:	9c 93       	st	X, r25
    56ac:	8e 93       	st	-X, r24
    56ae:	fe 01       	movw	r30, r28
    56b0:	ef 5b       	subi	r30, 0xBF	; 191
    56b2:	ff 4f       	sbci	r31, 0xFF	; 255
    56b4:	80 81       	ld	r24, Z
    56b6:	91 81       	ldd	r25, Z+1	; 0x01
    56b8:	85 30       	cpi	r24, 0x05	; 5
    56ba:	91 05       	cpc	r25, r1
    56bc:	f4 f2       	brlt	.-68     	; 0x567a <enuDrawChar+0x42c>
    56be:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>

		}
		break;

case 'c': ;
		u8 c[5]={0x38, 0x44, 0x44, 0x44, 0x44};
    56c2:	ce 01       	movw	r24, r28
    56c4:	88 5b       	subi	r24, 0xB8	; 184
    56c6:	9f 4f       	sbci	r25, 0xFF	; 255
    56c8:	cd 50       	subi	r28, 0x0D	; 13
    56ca:	df 4f       	sbci	r29, 0xFF	; 255
    56cc:	99 83       	std	Y+1, r25	; 0x01
    56ce:	88 83       	st	Y, r24
    56d0:	c3 5f       	subi	r28, 0xF3	; 243
    56d2:	d0 40       	sbci	r29, 0x00	; 0
    56d4:	ec e6       	ldi	r30, 0x6C	; 108
    56d6:	f1 e0       	ldi	r31, 0x01	; 1
    56d8:	cb 50       	subi	r28, 0x0B	; 11
    56da:	df 4f       	sbci	r29, 0xFF	; 255
    56dc:	f9 83       	std	Y+1, r31	; 0x01
    56de:	e8 83       	st	Y, r30
    56e0:	c5 5f       	subi	r28, 0xF5	; 245
    56e2:	d0 40       	sbci	r29, 0x00	; 0
    56e4:	f5 e0       	ldi	r31, 0x05	; 5
    56e6:	c9 50       	subi	r28, 0x09	; 9
    56e8:	df 4f       	sbci	r29, 0xFF	; 255
    56ea:	f8 83       	st	Y, r31
    56ec:	c7 5f       	subi	r28, 0xF7	; 247
    56ee:	d0 40       	sbci	r29, 0x00	; 0
    56f0:	cb 50       	subi	r28, 0x0B	; 11
    56f2:	df 4f       	sbci	r29, 0xFF	; 255
    56f4:	e8 81       	ld	r30, Y
    56f6:	f9 81       	ldd	r31, Y+1	; 0x01
    56f8:	c5 5f       	subi	r28, 0xF5	; 245
    56fa:	d0 40       	sbci	r29, 0x00	; 0
    56fc:	00 80       	ld	r0, Z
    56fe:	cb 50       	subi	r28, 0x0B	; 11
    5700:	df 4f       	sbci	r29, 0xFF	; 255
    5702:	28 81       	ld	r18, Y
    5704:	39 81       	ldd	r19, Y+1	; 0x01
    5706:	c5 5f       	subi	r28, 0xF5	; 245
    5708:	d0 40       	sbci	r29, 0x00	; 0
    570a:	2f 5f       	subi	r18, 0xFF	; 255
    570c:	3f 4f       	sbci	r19, 0xFF	; 255
    570e:	cb 50       	subi	r28, 0x0B	; 11
    5710:	df 4f       	sbci	r29, 0xFF	; 255
    5712:	39 83       	std	Y+1, r19	; 0x01
    5714:	28 83       	st	Y, r18
    5716:	c5 5f       	subi	r28, 0xF5	; 245
    5718:	d0 40       	sbci	r29, 0x00	; 0
    571a:	cd 50       	subi	r28, 0x0D	; 13
    571c:	df 4f       	sbci	r29, 0xFF	; 255
    571e:	e8 81       	ld	r30, Y
    5720:	f9 81       	ldd	r31, Y+1	; 0x01
    5722:	c3 5f       	subi	r28, 0xF3	; 243
    5724:	d0 40       	sbci	r29, 0x00	; 0
    5726:	00 82       	st	Z, r0
    5728:	cd 50       	subi	r28, 0x0D	; 13
    572a:	df 4f       	sbci	r29, 0xFF	; 255
    572c:	28 81       	ld	r18, Y
    572e:	39 81       	ldd	r19, Y+1	; 0x01
    5730:	c3 5f       	subi	r28, 0xF3	; 243
    5732:	d0 40       	sbci	r29, 0x00	; 0
    5734:	2f 5f       	subi	r18, 0xFF	; 255
    5736:	3f 4f       	sbci	r19, 0xFF	; 255
    5738:	cd 50       	subi	r28, 0x0D	; 13
    573a:	df 4f       	sbci	r29, 0xFF	; 255
    573c:	39 83       	std	Y+1, r19	; 0x01
    573e:	28 83       	st	Y, r18
    5740:	c3 5f       	subi	r28, 0xF3	; 243
    5742:	d0 40       	sbci	r29, 0x00	; 0
    5744:	c9 50       	subi	r28, 0x09	; 9
    5746:	df 4f       	sbci	r29, 0xFF	; 255
    5748:	38 81       	ld	r19, Y
    574a:	c7 5f       	subi	r28, 0xF7	; 247
    574c:	d0 40       	sbci	r29, 0x00	; 0
    574e:	31 50       	subi	r19, 0x01	; 1
    5750:	c9 50       	subi	r28, 0x09	; 9
    5752:	df 4f       	sbci	r29, 0xFF	; 255
    5754:	38 83       	st	Y, r19
    5756:	c7 5f       	subi	r28, 0xF7	; 247
    5758:	d0 40       	sbci	r29, 0x00	; 0
    575a:	c9 50       	subi	r28, 0x09	; 9
    575c:	df 4f       	sbci	r29, 0xFF	; 255
    575e:	88 81       	ld	r24, Y
    5760:	c7 5f       	subi	r28, 0xF7	; 247
    5762:	d0 40       	sbci	r29, 0x00	; 0
    5764:	88 23       	and	r24, r24
    5766:	21 f6       	brne	.-120    	; 0x56f0 <enuDrawChar+0x4a2>
		for(int i = 0 ; i<5;i++){
    5768:	fe 01       	movw	r30, r28
    576a:	ff 96       	adiw	r30, 0x3f	; 63
    576c:	11 82       	std	Z+1, r1	; 0x01
    576e:	10 82       	st	Z, r1
    5770:	16 c0       	rjmp	.+44     	; 0x579e <enuDrawChar+0x550>
			enuWriteData(c[i]);
    5772:	fe 01       	movw	r30, r28
    5774:	ff 96       	adiw	r30, 0x3f	; 63
    5776:	20 81       	ld	r18, Z
    5778:	31 81       	ldd	r19, Z+1	; 0x01
    577a:	ce 01       	movw	r24, r28
    577c:	88 5b       	subi	r24, 0xB8	; 184
    577e:	9f 4f       	sbci	r25, 0xFF	; 255
    5780:	fc 01       	movw	r30, r24
    5782:	e2 0f       	add	r30, r18
    5784:	f3 1f       	adc	r31, r19
    5786:	80 81       	ld	r24, Z
    5788:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

case 'c': ;
		u8 c[5]={0x38, 0x44, 0x44, 0x44, 0x44};
		for(int i = 0 ; i<5;i++){
    578c:	fe 01       	movw	r30, r28
    578e:	ff 96       	adiw	r30, 0x3f	; 63
    5790:	80 81       	ld	r24, Z
    5792:	91 81       	ldd	r25, Z+1	; 0x01
    5794:	01 96       	adiw	r24, 0x01	; 1
    5796:	fe 01       	movw	r30, r28
    5798:	ff 96       	adiw	r30, 0x3f	; 63
    579a:	91 83       	std	Z+1, r25	; 0x01
    579c:	80 83       	st	Z, r24
    579e:	fe 01       	movw	r30, r28
    57a0:	ff 96       	adiw	r30, 0x3f	; 63
    57a2:	80 81       	ld	r24, Z
    57a4:	91 81       	ldd	r25, Z+1	; 0x01
    57a6:	85 30       	cpi	r24, 0x05	; 5
    57a8:	91 05       	cpc	r25, r1
    57aa:	1c f3       	brlt	.-58     	; 0x5772 <enuDrawChar+0x524>
    57ac:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(c[i]);
		}
		break;

    case 'd': ;
		u8 d[5]={0x38, 0x44, 0x44, 0x44, 0x7F};
    57b0:	ce 01       	movw	r24, r28
    57b2:	83 5b       	subi	r24, 0xB3	; 179
    57b4:	9f 4f       	sbci	r25, 0xFF	; 255
    57b6:	c8 50       	subi	r28, 0x08	; 8
    57b8:	df 4f       	sbci	r29, 0xFF	; 255
    57ba:	99 83       	std	Y+1, r25	; 0x01
    57bc:	88 83       	st	Y, r24
    57be:	c8 5f       	subi	r28, 0xF8	; 248
    57c0:	d0 40       	sbci	r29, 0x00	; 0
    57c2:	e7 e6       	ldi	r30, 0x67	; 103
    57c4:	f1 e0       	ldi	r31, 0x01	; 1
    57c6:	c6 50       	subi	r28, 0x06	; 6
    57c8:	df 4f       	sbci	r29, 0xFF	; 255
    57ca:	f9 83       	std	Y+1, r31	; 0x01
    57cc:	e8 83       	st	Y, r30
    57ce:	ca 5f       	subi	r28, 0xFA	; 250
    57d0:	d0 40       	sbci	r29, 0x00	; 0
    57d2:	f5 e0       	ldi	r31, 0x05	; 5
    57d4:	c4 50       	subi	r28, 0x04	; 4
    57d6:	df 4f       	sbci	r29, 0xFF	; 255
    57d8:	f8 83       	st	Y, r31
    57da:	cc 5f       	subi	r28, 0xFC	; 252
    57dc:	d0 40       	sbci	r29, 0x00	; 0
    57de:	c6 50       	subi	r28, 0x06	; 6
    57e0:	df 4f       	sbci	r29, 0xFF	; 255
    57e2:	e8 81       	ld	r30, Y
    57e4:	f9 81       	ldd	r31, Y+1	; 0x01
    57e6:	ca 5f       	subi	r28, 0xFA	; 250
    57e8:	d0 40       	sbci	r29, 0x00	; 0
    57ea:	00 80       	ld	r0, Z
    57ec:	c6 50       	subi	r28, 0x06	; 6
    57ee:	df 4f       	sbci	r29, 0xFF	; 255
    57f0:	28 81       	ld	r18, Y
    57f2:	39 81       	ldd	r19, Y+1	; 0x01
    57f4:	ca 5f       	subi	r28, 0xFA	; 250
    57f6:	d0 40       	sbci	r29, 0x00	; 0
    57f8:	2f 5f       	subi	r18, 0xFF	; 255
    57fa:	3f 4f       	sbci	r19, 0xFF	; 255
    57fc:	c6 50       	subi	r28, 0x06	; 6
    57fe:	df 4f       	sbci	r29, 0xFF	; 255
    5800:	39 83       	std	Y+1, r19	; 0x01
    5802:	28 83       	st	Y, r18
    5804:	ca 5f       	subi	r28, 0xFA	; 250
    5806:	d0 40       	sbci	r29, 0x00	; 0
    5808:	c8 50       	subi	r28, 0x08	; 8
    580a:	df 4f       	sbci	r29, 0xFF	; 255
    580c:	e8 81       	ld	r30, Y
    580e:	f9 81       	ldd	r31, Y+1	; 0x01
    5810:	c8 5f       	subi	r28, 0xF8	; 248
    5812:	d0 40       	sbci	r29, 0x00	; 0
    5814:	00 82       	st	Z, r0
    5816:	c8 50       	subi	r28, 0x08	; 8
    5818:	df 4f       	sbci	r29, 0xFF	; 255
    581a:	28 81       	ld	r18, Y
    581c:	39 81       	ldd	r19, Y+1	; 0x01
    581e:	c8 5f       	subi	r28, 0xF8	; 248
    5820:	d0 40       	sbci	r29, 0x00	; 0
    5822:	2f 5f       	subi	r18, 0xFF	; 255
    5824:	3f 4f       	sbci	r19, 0xFF	; 255
    5826:	c8 50       	subi	r28, 0x08	; 8
    5828:	df 4f       	sbci	r29, 0xFF	; 255
    582a:	39 83       	std	Y+1, r19	; 0x01
    582c:	28 83       	st	Y, r18
    582e:	c8 5f       	subi	r28, 0xF8	; 248
    5830:	d0 40       	sbci	r29, 0x00	; 0
    5832:	c4 50       	subi	r28, 0x04	; 4
    5834:	df 4f       	sbci	r29, 0xFF	; 255
    5836:	38 81       	ld	r19, Y
    5838:	cc 5f       	subi	r28, 0xFC	; 252
    583a:	d0 40       	sbci	r29, 0x00	; 0
    583c:	31 50       	subi	r19, 0x01	; 1
    583e:	c4 50       	subi	r28, 0x04	; 4
    5840:	df 4f       	sbci	r29, 0xFF	; 255
    5842:	38 83       	st	Y, r19
    5844:	cc 5f       	subi	r28, 0xFC	; 252
    5846:	d0 40       	sbci	r29, 0x00	; 0
    5848:	c4 50       	subi	r28, 0x04	; 4
    584a:	df 4f       	sbci	r29, 0xFF	; 255
    584c:	88 81       	ld	r24, Y
    584e:	cc 5f       	subi	r28, 0xFC	; 252
    5850:	d0 40       	sbci	r29, 0x00	; 0
    5852:	88 23       	and	r24, r24
    5854:	21 f6       	brne	.-120    	; 0x57de <enuDrawChar+0x590>
		for(int i = 0 ; i<5;i++){
    5856:	1e ae       	std	Y+62, r1	; 0x3e
    5858:	1d ae       	std	Y+61, r1	; 0x3d
    585a:	10 c0       	rjmp	.+32     	; 0x587c <enuDrawChar+0x62e>
			enuWriteData(d[i]);
    585c:	2d ad       	ldd	r18, Y+61	; 0x3d
    585e:	3e ad       	ldd	r19, Y+62	; 0x3e
    5860:	ce 01       	movw	r24, r28
    5862:	83 5b       	subi	r24, 0xB3	; 179
    5864:	9f 4f       	sbci	r25, 0xFF	; 255
    5866:	fc 01       	movw	r30, r24
    5868:	e2 0f       	add	r30, r18
    586a:	f3 1f       	adc	r31, r19
    586c:	80 81       	ld	r24, Z
    586e:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

    case 'd': ;
		u8 d[5]={0x38, 0x44, 0x44, 0x44, 0x7F};
		for(int i = 0 ; i<5;i++){
    5872:	8d ad       	ldd	r24, Y+61	; 0x3d
    5874:	9e ad       	ldd	r25, Y+62	; 0x3e
    5876:	01 96       	adiw	r24, 0x01	; 1
    5878:	9e af       	std	Y+62, r25	; 0x3e
    587a:	8d af       	std	Y+61, r24	; 0x3d
    587c:	8d ad       	ldd	r24, Y+61	; 0x3d
    587e:	9e ad       	ldd	r25, Y+62	; 0x3e
    5880:	85 30       	cpi	r24, 0x05	; 5
    5882:	91 05       	cpc	r25, r1
    5884:	5c f3       	brlt	.-42     	; 0x585c <enuDrawChar+0x60e>
    5886:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(d[i]);
		}
		break;

        case 'e': ;
		u8 e[5]={0x38, 0x54, 0x54, 0x54, 0x18};
    588a:	ce 01       	movw	r24, r28
    588c:	8e 5a       	subi	r24, 0xAE	; 174
    588e:	9f 4f       	sbci	r25, 0xFF	; 255
    5890:	c3 50       	subi	r28, 0x03	; 3
    5892:	df 4f       	sbci	r29, 0xFF	; 255
    5894:	99 83       	std	Y+1, r25	; 0x01
    5896:	88 83       	st	Y, r24
    5898:	cd 5f       	subi	r28, 0xFD	; 253
    589a:	d0 40       	sbci	r29, 0x00	; 0
    589c:	e2 e6       	ldi	r30, 0x62	; 98
    589e:	f1 e0       	ldi	r31, 0x01	; 1
    58a0:	c1 50       	subi	r28, 0x01	; 1
    58a2:	df 4f       	sbci	r29, 0xFF	; 255
    58a4:	f9 83       	std	Y+1, r31	; 0x01
    58a6:	e8 83       	st	Y, r30
    58a8:	cf 5f       	subi	r28, 0xFF	; 255
    58aa:	d0 40       	sbci	r29, 0x00	; 0
    58ac:	f5 e0       	ldi	r31, 0x05	; 5
    58ae:	cf 5f       	subi	r28, 0xFF	; 255
    58b0:	de 4f       	sbci	r29, 0xFE	; 254
    58b2:	f8 83       	st	Y, r31
    58b4:	c1 50       	subi	r28, 0x01	; 1
    58b6:	d1 40       	sbci	r29, 0x01	; 1
    58b8:	c1 50       	subi	r28, 0x01	; 1
    58ba:	df 4f       	sbci	r29, 0xFF	; 255
    58bc:	e8 81       	ld	r30, Y
    58be:	f9 81       	ldd	r31, Y+1	; 0x01
    58c0:	cf 5f       	subi	r28, 0xFF	; 255
    58c2:	d0 40       	sbci	r29, 0x00	; 0
    58c4:	00 80       	ld	r0, Z
    58c6:	c1 50       	subi	r28, 0x01	; 1
    58c8:	df 4f       	sbci	r29, 0xFF	; 255
    58ca:	28 81       	ld	r18, Y
    58cc:	39 81       	ldd	r19, Y+1	; 0x01
    58ce:	cf 5f       	subi	r28, 0xFF	; 255
    58d0:	d0 40       	sbci	r29, 0x00	; 0
    58d2:	2f 5f       	subi	r18, 0xFF	; 255
    58d4:	3f 4f       	sbci	r19, 0xFF	; 255
    58d6:	c1 50       	subi	r28, 0x01	; 1
    58d8:	df 4f       	sbci	r29, 0xFF	; 255
    58da:	39 83       	std	Y+1, r19	; 0x01
    58dc:	28 83       	st	Y, r18
    58de:	cf 5f       	subi	r28, 0xFF	; 255
    58e0:	d0 40       	sbci	r29, 0x00	; 0
    58e2:	c3 50       	subi	r28, 0x03	; 3
    58e4:	df 4f       	sbci	r29, 0xFF	; 255
    58e6:	e8 81       	ld	r30, Y
    58e8:	f9 81       	ldd	r31, Y+1	; 0x01
    58ea:	cd 5f       	subi	r28, 0xFD	; 253
    58ec:	d0 40       	sbci	r29, 0x00	; 0
    58ee:	00 82       	st	Z, r0
    58f0:	c3 50       	subi	r28, 0x03	; 3
    58f2:	df 4f       	sbci	r29, 0xFF	; 255
    58f4:	28 81       	ld	r18, Y
    58f6:	39 81       	ldd	r19, Y+1	; 0x01
    58f8:	cd 5f       	subi	r28, 0xFD	; 253
    58fa:	d0 40       	sbci	r29, 0x00	; 0
    58fc:	2f 5f       	subi	r18, 0xFF	; 255
    58fe:	3f 4f       	sbci	r19, 0xFF	; 255
    5900:	c3 50       	subi	r28, 0x03	; 3
    5902:	df 4f       	sbci	r29, 0xFF	; 255
    5904:	39 83       	std	Y+1, r19	; 0x01
    5906:	28 83       	st	Y, r18
    5908:	cd 5f       	subi	r28, 0xFD	; 253
    590a:	d0 40       	sbci	r29, 0x00	; 0
    590c:	cf 5f       	subi	r28, 0xFF	; 255
    590e:	de 4f       	sbci	r29, 0xFE	; 254
    5910:	38 81       	ld	r19, Y
    5912:	c1 50       	subi	r28, 0x01	; 1
    5914:	d1 40       	sbci	r29, 0x01	; 1
    5916:	31 50       	subi	r19, 0x01	; 1
    5918:	cf 5f       	subi	r28, 0xFF	; 255
    591a:	de 4f       	sbci	r29, 0xFE	; 254
    591c:	38 83       	st	Y, r19
    591e:	c1 50       	subi	r28, 0x01	; 1
    5920:	d1 40       	sbci	r29, 0x01	; 1
    5922:	cf 5f       	subi	r28, 0xFF	; 255
    5924:	de 4f       	sbci	r29, 0xFE	; 254
    5926:	88 81       	ld	r24, Y
    5928:	c1 50       	subi	r28, 0x01	; 1
    592a:	d1 40       	sbci	r29, 0x01	; 1
    592c:	88 23       	and	r24, r24
    592e:	21 f6       	brne	.-120    	; 0x58b8 <enuDrawChar+0x66a>
		for(int i = 0 ; i<5;i++){
    5930:	1c ae       	std	Y+60, r1	; 0x3c
    5932:	1b ae       	std	Y+59, r1	; 0x3b
    5934:	10 c0       	rjmp	.+32     	; 0x5956 <enuDrawChar+0x708>
			enuWriteData(e[i]);
    5936:	2b ad       	ldd	r18, Y+59	; 0x3b
    5938:	3c ad       	ldd	r19, Y+60	; 0x3c
    593a:	ce 01       	movw	r24, r28
    593c:	8e 5a       	subi	r24, 0xAE	; 174
    593e:	9f 4f       	sbci	r25, 0xFF	; 255
    5940:	fc 01       	movw	r30, r24
    5942:	e2 0f       	add	r30, r18
    5944:	f3 1f       	adc	r31, r19
    5946:	80 81       	ld	r24, Z
    5948:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

        case 'e': ;
		u8 e[5]={0x38, 0x54, 0x54, 0x54, 0x18};
		for(int i = 0 ; i<5;i++){
    594c:	8b ad       	ldd	r24, Y+59	; 0x3b
    594e:	9c ad       	ldd	r25, Y+60	; 0x3c
    5950:	01 96       	adiw	r24, 0x01	; 1
    5952:	9c af       	std	Y+60, r25	; 0x3c
    5954:	8b af       	std	Y+59, r24	; 0x3b
    5956:	8b ad       	ldd	r24, Y+59	; 0x3b
    5958:	9c ad       	ldd	r25, Y+60	; 0x3c
    595a:	85 30       	cpi	r24, 0x05	; 5
    595c:	91 05       	cpc	r25, r1
    595e:	5c f3       	brlt	.-42     	; 0x5936 <enuDrawChar+0x6e8>
    5960:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(e[i]);
		}
		break;
        case 'f': ;
		u8 f[5]={0x04, 0x04, 0x7E, 0x05, 0x05};
    5964:	ce 01       	movw	r24, r28
    5966:	89 5a       	subi	r24, 0xA9	; 169
    5968:	9f 4f       	sbci	r25, 0xFF	; 255
    596a:	ce 5f       	subi	r28, 0xFE	; 254
    596c:	de 4f       	sbci	r29, 0xFE	; 254
    596e:	99 83       	std	Y+1, r25	; 0x01
    5970:	88 83       	st	Y, r24
    5972:	c2 50       	subi	r28, 0x02	; 2
    5974:	d1 40       	sbci	r29, 0x01	; 1
    5976:	ed e5       	ldi	r30, 0x5D	; 93
    5978:	f1 e0       	ldi	r31, 0x01	; 1
    597a:	cc 5f       	subi	r28, 0xFC	; 252
    597c:	de 4f       	sbci	r29, 0xFE	; 254
    597e:	f9 83       	std	Y+1, r31	; 0x01
    5980:	e8 83       	st	Y, r30
    5982:	c4 50       	subi	r28, 0x04	; 4
    5984:	d1 40       	sbci	r29, 0x01	; 1
    5986:	f5 e0       	ldi	r31, 0x05	; 5
    5988:	ca 5f       	subi	r28, 0xFA	; 250
    598a:	de 4f       	sbci	r29, 0xFE	; 254
    598c:	f8 83       	st	Y, r31
    598e:	c6 50       	subi	r28, 0x06	; 6
    5990:	d1 40       	sbci	r29, 0x01	; 1
    5992:	cc 5f       	subi	r28, 0xFC	; 252
    5994:	de 4f       	sbci	r29, 0xFE	; 254
    5996:	e8 81       	ld	r30, Y
    5998:	f9 81       	ldd	r31, Y+1	; 0x01
    599a:	c4 50       	subi	r28, 0x04	; 4
    599c:	d1 40       	sbci	r29, 0x01	; 1
    599e:	00 80       	ld	r0, Z
    59a0:	cc 5f       	subi	r28, 0xFC	; 252
    59a2:	de 4f       	sbci	r29, 0xFE	; 254
    59a4:	28 81       	ld	r18, Y
    59a6:	39 81       	ldd	r19, Y+1	; 0x01
    59a8:	c4 50       	subi	r28, 0x04	; 4
    59aa:	d1 40       	sbci	r29, 0x01	; 1
    59ac:	2f 5f       	subi	r18, 0xFF	; 255
    59ae:	3f 4f       	sbci	r19, 0xFF	; 255
    59b0:	cc 5f       	subi	r28, 0xFC	; 252
    59b2:	de 4f       	sbci	r29, 0xFE	; 254
    59b4:	39 83       	std	Y+1, r19	; 0x01
    59b6:	28 83       	st	Y, r18
    59b8:	c4 50       	subi	r28, 0x04	; 4
    59ba:	d1 40       	sbci	r29, 0x01	; 1
    59bc:	ce 5f       	subi	r28, 0xFE	; 254
    59be:	de 4f       	sbci	r29, 0xFE	; 254
    59c0:	e8 81       	ld	r30, Y
    59c2:	f9 81       	ldd	r31, Y+1	; 0x01
    59c4:	c2 50       	subi	r28, 0x02	; 2
    59c6:	d1 40       	sbci	r29, 0x01	; 1
    59c8:	00 82       	st	Z, r0
    59ca:	ce 5f       	subi	r28, 0xFE	; 254
    59cc:	de 4f       	sbci	r29, 0xFE	; 254
    59ce:	28 81       	ld	r18, Y
    59d0:	39 81       	ldd	r19, Y+1	; 0x01
    59d2:	c2 50       	subi	r28, 0x02	; 2
    59d4:	d1 40       	sbci	r29, 0x01	; 1
    59d6:	2f 5f       	subi	r18, 0xFF	; 255
    59d8:	3f 4f       	sbci	r19, 0xFF	; 255
    59da:	ce 5f       	subi	r28, 0xFE	; 254
    59dc:	de 4f       	sbci	r29, 0xFE	; 254
    59de:	39 83       	std	Y+1, r19	; 0x01
    59e0:	28 83       	st	Y, r18
    59e2:	c2 50       	subi	r28, 0x02	; 2
    59e4:	d1 40       	sbci	r29, 0x01	; 1
    59e6:	ca 5f       	subi	r28, 0xFA	; 250
    59e8:	de 4f       	sbci	r29, 0xFE	; 254
    59ea:	38 81       	ld	r19, Y
    59ec:	c6 50       	subi	r28, 0x06	; 6
    59ee:	d1 40       	sbci	r29, 0x01	; 1
    59f0:	31 50       	subi	r19, 0x01	; 1
    59f2:	ca 5f       	subi	r28, 0xFA	; 250
    59f4:	de 4f       	sbci	r29, 0xFE	; 254
    59f6:	38 83       	st	Y, r19
    59f8:	c6 50       	subi	r28, 0x06	; 6
    59fa:	d1 40       	sbci	r29, 0x01	; 1
    59fc:	ca 5f       	subi	r28, 0xFA	; 250
    59fe:	de 4f       	sbci	r29, 0xFE	; 254
    5a00:	88 81       	ld	r24, Y
    5a02:	c6 50       	subi	r28, 0x06	; 6
    5a04:	d1 40       	sbci	r29, 0x01	; 1
    5a06:	88 23       	and	r24, r24
    5a08:	21 f6       	brne	.-120    	; 0x5992 <enuDrawChar+0x744>
		for(int i = 0 ; i<5;i++){
    5a0a:	1a ae       	std	Y+58, r1	; 0x3a
    5a0c:	19 ae       	std	Y+57, r1	; 0x39
    5a0e:	10 c0       	rjmp	.+32     	; 0x5a30 <enuDrawChar+0x7e2>
			enuWriteData(f[i]);
    5a10:	29 ad       	ldd	r18, Y+57	; 0x39
    5a12:	3a ad       	ldd	r19, Y+58	; 0x3a
    5a14:	ce 01       	movw	r24, r28
    5a16:	89 5a       	subi	r24, 0xA9	; 169
    5a18:	9f 4f       	sbci	r25, 0xFF	; 255
    5a1a:	fc 01       	movw	r30, r24
    5a1c:	e2 0f       	add	r30, r18
    5a1e:	f3 1f       	adc	r31, r19
    5a20:	80 81       	ld	r24, Z
    5a22:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(e[i]);
		}
		break;
        case 'f': ;
		u8 f[5]={0x04, 0x04, 0x7E, 0x05, 0x05};
		for(int i = 0 ; i<5;i++){
    5a26:	89 ad       	ldd	r24, Y+57	; 0x39
    5a28:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a2a:	01 96       	adiw	r24, 0x01	; 1
    5a2c:	9a af       	std	Y+58, r25	; 0x3a
    5a2e:	89 af       	std	Y+57, r24	; 0x39
    5a30:	89 ad       	ldd	r24, Y+57	; 0x39
    5a32:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a34:	85 30       	cpi	r24, 0x05	; 5
    5a36:	91 05       	cpc	r25, r1
    5a38:	5c f3       	brlt	.-42     	; 0x5a10 <enuDrawChar+0x7c2>
    5a3a:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(f[i]);
		}
		break;

        case 'h': ;
		u8 h[5]={0x7F, 0x08, 0x04, 0x04, 0x78};
    5a3e:	ce 01       	movw	r24, r28
    5a40:	84 5a       	subi	r24, 0xA4	; 164
    5a42:	9f 4f       	sbci	r25, 0xFF	; 255
    5a44:	c9 5f       	subi	r28, 0xF9	; 249
    5a46:	de 4f       	sbci	r29, 0xFE	; 254
    5a48:	99 83       	std	Y+1, r25	; 0x01
    5a4a:	88 83       	st	Y, r24
    5a4c:	c7 50       	subi	r28, 0x07	; 7
    5a4e:	d1 40       	sbci	r29, 0x01	; 1
    5a50:	e8 e5       	ldi	r30, 0x58	; 88
    5a52:	f1 e0       	ldi	r31, 0x01	; 1
    5a54:	c7 5f       	subi	r28, 0xF7	; 247
    5a56:	de 4f       	sbci	r29, 0xFE	; 254
    5a58:	f9 83       	std	Y+1, r31	; 0x01
    5a5a:	e8 83       	st	Y, r30
    5a5c:	c9 50       	subi	r28, 0x09	; 9
    5a5e:	d1 40       	sbci	r29, 0x01	; 1
    5a60:	f5 e0       	ldi	r31, 0x05	; 5
    5a62:	c5 5f       	subi	r28, 0xF5	; 245
    5a64:	de 4f       	sbci	r29, 0xFE	; 254
    5a66:	f8 83       	st	Y, r31
    5a68:	cb 50       	subi	r28, 0x0B	; 11
    5a6a:	d1 40       	sbci	r29, 0x01	; 1
    5a6c:	c7 5f       	subi	r28, 0xF7	; 247
    5a6e:	de 4f       	sbci	r29, 0xFE	; 254
    5a70:	e8 81       	ld	r30, Y
    5a72:	f9 81       	ldd	r31, Y+1	; 0x01
    5a74:	c9 50       	subi	r28, 0x09	; 9
    5a76:	d1 40       	sbci	r29, 0x01	; 1
    5a78:	00 80       	ld	r0, Z
    5a7a:	c7 5f       	subi	r28, 0xF7	; 247
    5a7c:	de 4f       	sbci	r29, 0xFE	; 254
    5a7e:	28 81       	ld	r18, Y
    5a80:	39 81       	ldd	r19, Y+1	; 0x01
    5a82:	c9 50       	subi	r28, 0x09	; 9
    5a84:	d1 40       	sbci	r29, 0x01	; 1
    5a86:	2f 5f       	subi	r18, 0xFF	; 255
    5a88:	3f 4f       	sbci	r19, 0xFF	; 255
    5a8a:	c7 5f       	subi	r28, 0xF7	; 247
    5a8c:	de 4f       	sbci	r29, 0xFE	; 254
    5a8e:	39 83       	std	Y+1, r19	; 0x01
    5a90:	28 83       	st	Y, r18
    5a92:	c9 50       	subi	r28, 0x09	; 9
    5a94:	d1 40       	sbci	r29, 0x01	; 1
    5a96:	c9 5f       	subi	r28, 0xF9	; 249
    5a98:	de 4f       	sbci	r29, 0xFE	; 254
    5a9a:	e8 81       	ld	r30, Y
    5a9c:	f9 81       	ldd	r31, Y+1	; 0x01
    5a9e:	c7 50       	subi	r28, 0x07	; 7
    5aa0:	d1 40       	sbci	r29, 0x01	; 1
    5aa2:	00 82       	st	Z, r0
    5aa4:	c9 5f       	subi	r28, 0xF9	; 249
    5aa6:	de 4f       	sbci	r29, 0xFE	; 254
    5aa8:	28 81       	ld	r18, Y
    5aaa:	39 81       	ldd	r19, Y+1	; 0x01
    5aac:	c7 50       	subi	r28, 0x07	; 7
    5aae:	d1 40       	sbci	r29, 0x01	; 1
    5ab0:	2f 5f       	subi	r18, 0xFF	; 255
    5ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    5ab4:	c9 5f       	subi	r28, 0xF9	; 249
    5ab6:	de 4f       	sbci	r29, 0xFE	; 254
    5ab8:	39 83       	std	Y+1, r19	; 0x01
    5aba:	28 83       	st	Y, r18
    5abc:	c7 50       	subi	r28, 0x07	; 7
    5abe:	d1 40       	sbci	r29, 0x01	; 1
    5ac0:	c5 5f       	subi	r28, 0xF5	; 245
    5ac2:	de 4f       	sbci	r29, 0xFE	; 254
    5ac4:	38 81       	ld	r19, Y
    5ac6:	cb 50       	subi	r28, 0x0B	; 11
    5ac8:	d1 40       	sbci	r29, 0x01	; 1
    5aca:	31 50       	subi	r19, 0x01	; 1
    5acc:	c5 5f       	subi	r28, 0xF5	; 245
    5ace:	de 4f       	sbci	r29, 0xFE	; 254
    5ad0:	38 83       	st	Y, r19
    5ad2:	cb 50       	subi	r28, 0x0B	; 11
    5ad4:	d1 40       	sbci	r29, 0x01	; 1
    5ad6:	c5 5f       	subi	r28, 0xF5	; 245
    5ad8:	de 4f       	sbci	r29, 0xFE	; 254
    5ada:	88 81       	ld	r24, Y
    5adc:	cb 50       	subi	r28, 0x0B	; 11
    5ade:	d1 40       	sbci	r29, 0x01	; 1
    5ae0:	88 23       	and	r24, r24
    5ae2:	21 f6       	brne	.-120    	; 0x5a6c <enuDrawChar+0x81e>
		for(int i = 0 ; i<5;i++){
    5ae4:	18 ae       	std	Y+56, r1	; 0x38
    5ae6:	1f aa       	std	Y+55, r1	; 0x37
    5ae8:	10 c0       	rjmp	.+32     	; 0x5b0a <enuDrawChar+0x8bc>
			enuWriteData(h[i]);
    5aea:	2f a9       	ldd	r18, Y+55	; 0x37
    5aec:	38 ad       	ldd	r19, Y+56	; 0x38
    5aee:	ce 01       	movw	r24, r28
    5af0:	84 5a       	subi	r24, 0xA4	; 164
    5af2:	9f 4f       	sbci	r25, 0xFF	; 255
    5af4:	fc 01       	movw	r30, r24
    5af6:	e2 0f       	add	r30, r18
    5af8:	f3 1f       	adc	r31, r19
    5afa:	80 81       	ld	r24, Z
    5afc:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

        case 'h': ;
		u8 h[5]={0x7F, 0x08, 0x04, 0x04, 0x78};
		for(int i = 0 ; i<5;i++){
    5b00:	8f a9       	ldd	r24, Y+55	; 0x37
    5b02:	98 ad       	ldd	r25, Y+56	; 0x38
    5b04:	01 96       	adiw	r24, 0x01	; 1
    5b06:	98 af       	std	Y+56, r25	; 0x38
    5b08:	8f ab       	std	Y+55, r24	; 0x37
    5b0a:	8f a9       	ldd	r24, Y+55	; 0x37
    5b0c:	98 ad       	ldd	r25, Y+56	; 0x38
    5b0e:	85 30       	cpi	r24, 0x05	; 5
    5b10:	91 05       	cpc	r25, r1
    5b12:	5c f3       	brlt	.-42     	; 0x5aea <enuDrawChar+0x89c>
    5b14:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(h[i]);
		}
		break;
        case 'i': ;
		u8 i1[5]={0x00, 0x44, 0x7D, 0x40, 0x00};
    5b18:	ce 01       	movw	r24, r28
    5b1a:	8f 59       	subi	r24, 0x9F	; 159
    5b1c:	9f 4f       	sbci	r25, 0xFF	; 255
    5b1e:	c4 5f       	subi	r28, 0xF4	; 244
    5b20:	de 4f       	sbci	r29, 0xFE	; 254
    5b22:	99 83       	std	Y+1, r25	; 0x01
    5b24:	88 83       	st	Y, r24
    5b26:	cc 50       	subi	r28, 0x0C	; 12
    5b28:	d1 40       	sbci	r29, 0x01	; 1
    5b2a:	e3 e5       	ldi	r30, 0x53	; 83
    5b2c:	f1 e0       	ldi	r31, 0x01	; 1
    5b2e:	c2 5f       	subi	r28, 0xF2	; 242
    5b30:	de 4f       	sbci	r29, 0xFE	; 254
    5b32:	f9 83       	std	Y+1, r31	; 0x01
    5b34:	e8 83       	st	Y, r30
    5b36:	ce 50       	subi	r28, 0x0E	; 14
    5b38:	d1 40       	sbci	r29, 0x01	; 1
    5b3a:	f5 e0       	ldi	r31, 0x05	; 5
    5b3c:	c0 5f       	subi	r28, 0xF0	; 240
    5b3e:	de 4f       	sbci	r29, 0xFE	; 254
    5b40:	f8 83       	st	Y, r31
    5b42:	c0 51       	subi	r28, 0x10	; 16
    5b44:	d1 40       	sbci	r29, 0x01	; 1
    5b46:	c2 5f       	subi	r28, 0xF2	; 242
    5b48:	de 4f       	sbci	r29, 0xFE	; 254
    5b4a:	e8 81       	ld	r30, Y
    5b4c:	f9 81       	ldd	r31, Y+1	; 0x01
    5b4e:	ce 50       	subi	r28, 0x0E	; 14
    5b50:	d1 40       	sbci	r29, 0x01	; 1
    5b52:	00 80       	ld	r0, Z
    5b54:	c2 5f       	subi	r28, 0xF2	; 242
    5b56:	de 4f       	sbci	r29, 0xFE	; 254
    5b58:	28 81       	ld	r18, Y
    5b5a:	39 81       	ldd	r19, Y+1	; 0x01
    5b5c:	ce 50       	subi	r28, 0x0E	; 14
    5b5e:	d1 40       	sbci	r29, 0x01	; 1
    5b60:	2f 5f       	subi	r18, 0xFF	; 255
    5b62:	3f 4f       	sbci	r19, 0xFF	; 255
    5b64:	c2 5f       	subi	r28, 0xF2	; 242
    5b66:	de 4f       	sbci	r29, 0xFE	; 254
    5b68:	39 83       	std	Y+1, r19	; 0x01
    5b6a:	28 83       	st	Y, r18
    5b6c:	ce 50       	subi	r28, 0x0E	; 14
    5b6e:	d1 40       	sbci	r29, 0x01	; 1
    5b70:	c4 5f       	subi	r28, 0xF4	; 244
    5b72:	de 4f       	sbci	r29, 0xFE	; 254
    5b74:	e8 81       	ld	r30, Y
    5b76:	f9 81       	ldd	r31, Y+1	; 0x01
    5b78:	cc 50       	subi	r28, 0x0C	; 12
    5b7a:	d1 40       	sbci	r29, 0x01	; 1
    5b7c:	00 82       	st	Z, r0
    5b7e:	c4 5f       	subi	r28, 0xF4	; 244
    5b80:	de 4f       	sbci	r29, 0xFE	; 254
    5b82:	28 81       	ld	r18, Y
    5b84:	39 81       	ldd	r19, Y+1	; 0x01
    5b86:	cc 50       	subi	r28, 0x0C	; 12
    5b88:	d1 40       	sbci	r29, 0x01	; 1
    5b8a:	2f 5f       	subi	r18, 0xFF	; 255
    5b8c:	3f 4f       	sbci	r19, 0xFF	; 255
    5b8e:	c4 5f       	subi	r28, 0xF4	; 244
    5b90:	de 4f       	sbci	r29, 0xFE	; 254
    5b92:	39 83       	std	Y+1, r19	; 0x01
    5b94:	28 83       	st	Y, r18
    5b96:	cc 50       	subi	r28, 0x0C	; 12
    5b98:	d1 40       	sbci	r29, 0x01	; 1
    5b9a:	c0 5f       	subi	r28, 0xF0	; 240
    5b9c:	de 4f       	sbci	r29, 0xFE	; 254
    5b9e:	38 81       	ld	r19, Y
    5ba0:	c0 51       	subi	r28, 0x10	; 16
    5ba2:	d1 40       	sbci	r29, 0x01	; 1
    5ba4:	31 50       	subi	r19, 0x01	; 1
    5ba6:	c0 5f       	subi	r28, 0xF0	; 240
    5ba8:	de 4f       	sbci	r29, 0xFE	; 254
    5baa:	38 83       	st	Y, r19
    5bac:	c0 51       	subi	r28, 0x10	; 16
    5bae:	d1 40       	sbci	r29, 0x01	; 1
    5bb0:	c0 5f       	subi	r28, 0xF0	; 240
    5bb2:	de 4f       	sbci	r29, 0xFE	; 254
    5bb4:	88 81       	ld	r24, Y
    5bb6:	c0 51       	subi	r28, 0x10	; 16
    5bb8:	d1 40       	sbci	r29, 0x01	; 1
    5bba:	88 23       	and	r24, r24
    5bbc:	21 f6       	brne	.-120    	; 0x5b46 <enuDrawChar+0x8f8>
		for(int i = 0 ; i<5;i++){
    5bbe:	1e aa       	std	Y+54, r1	; 0x36
    5bc0:	1d aa       	std	Y+53, r1	; 0x35
    5bc2:	10 c0       	rjmp	.+32     	; 0x5be4 <enuDrawChar+0x996>
			enuWriteData(i1[i]);
    5bc4:	2d a9       	ldd	r18, Y+53	; 0x35
    5bc6:	3e a9       	ldd	r19, Y+54	; 0x36
    5bc8:	ce 01       	movw	r24, r28
    5bca:	8f 59       	subi	r24, 0x9F	; 159
    5bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    5bce:	fc 01       	movw	r30, r24
    5bd0:	e2 0f       	add	r30, r18
    5bd2:	f3 1f       	adc	r31, r19
    5bd4:	80 81       	ld	r24, Z
    5bd6:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(h[i]);
		}
		break;
        case 'i': ;
		u8 i1[5]={0x00, 0x44, 0x7D, 0x40, 0x00};
		for(int i = 0 ; i<5;i++){
    5bda:	8d a9       	ldd	r24, Y+53	; 0x35
    5bdc:	9e a9       	ldd	r25, Y+54	; 0x36
    5bde:	01 96       	adiw	r24, 0x01	; 1
    5be0:	9e ab       	std	Y+54, r25	; 0x36
    5be2:	8d ab       	std	Y+53, r24	; 0x35
    5be4:	8d a9       	ldd	r24, Y+53	; 0x35
    5be6:	9e a9       	ldd	r25, Y+54	; 0x36
    5be8:	85 30       	cpi	r24, 0x05	; 5
    5bea:	91 05       	cpc	r25, r1
    5bec:	5c f3       	brlt	.-42     	; 0x5bc4 <enuDrawChar+0x976>
    5bee:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(i1[i]);
		}
		break;

        case 'k': ;
		u8 k[5]={0x7F, 0x10, 0x28, 0x44, 0x00};
    5bf2:	ce 01       	movw	r24, r28
    5bf4:	8a 59       	subi	r24, 0x9A	; 154
    5bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    5bf8:	cf 5e       	subi	r28, 0xEF	; 239
    5bfa:	de 4f       	sbci	r29, 0xFE	; 254
    5bfc:	99 83       	std	Y+1, r25	; 0x01
    5bfe:	88 83       	st	Y, r24
    5c00:	c1 51       	subi	r28, 0x11	; 17
    5c02:	d1 40       	sbci	r29, 0x01	; 1
    5c04:	ee e4       	ldi	r30, 0x4E	; 78
    5c06:	f1 e0       	ldi	r31, 0x01	; 1
    5c08:	cd 5e       	subi	r28, 0xED	; 237
    5c0a:	de 4f       	sbci	r29, 0xFE	; 254
    5c0c:	f9 83       	std	Y+1, r31	; 0x01
    5c0e:	e8 83       	st	Y, r30
    5c10:	c3 51       	subi	r28, 0x13	; 19
    5c12:	d1 40       	sbci	r29, 0x01	; 1
    5c14:	f5 e0       	ldi	r31, 0x05	; 5
    5c16:	cb 5e       	subi	r28, 0xEB	; 235
    5c18:	de 4f       	sbci	r29, 0xFE	; 254
    5c1a:	f8 83       	st	Y, r31
    5c1c:	c5 51       	subi	r28, 0x15	; 21
    5c1e:	d1 40       	sbci	r29, 0x01	; 1
    5c20:	cd 5e       	subi	r28, 0xED	; 237
    5c22:	de 4f       	sbci	r29, 0xFE	; 254
    5c24:	e8 81       	ld	r30, Y
    5c26:	f9 81       	ldd	r31, Y+1	; 0x01
    5c28:	c3 51       	subi	r28, 0x13	; 19
    5c2a:	d1 40       	sbci	r29, 0x01	; 1
    5c2c:	00 80       	ld	r0, Z
    5c2e:	cd 5e       	subi	r28, 0xED	; 237
    5c30:	de 4f       	sbci	r29, 0xFE	; 254
    5c32:	28 81       	ld	r18, Y
    5c34:	39 81       	ldd	r19, Y+1	; 0x01
    5c36:	c3 51       	subi	r28, 0x13	; 19
    5c38:	d1 40       	sbci	r29, 0x01	; 1
    5c3a:	2f 5f       	subi	r18, 0xFF	; 255
    5c3c:	3f 4f       	sbci	r19, 0xFF	; 255
    5c3e:	cd 5e       	subi	r28, 0xED	; 237
    5c40:	de 4f       	sbci	r29, 0xFE	; 254
    5c42:	39 83       	std	Y+1, r19	; 0x01
    5c44:	28 83       	st	Y, r18
    5c46:	c3 51       	subi	r28, 0x13	; 19
    5c48:	d1 40       	sbci	r29, 0x01	; 1
    5c4a:	cf 5e       	subi	r28, 0xEF	; 239
    5c4c:	de 4f       	sbci	r29, 0xFE	; 254
    5c4e:	e8 81       	ld	r30, Y
    5c50:	f9 81       	ldd	r31, Y+1	; 0x01
    5c52:	c1 51       	subi	r28, 0x11	; 17
    5c54:	d1 40       	sbci	r29, 0x01	; 1
    5c56:	00 82       	st	Z, r0
    5c58:	cf 5e       	subi	r28, 0xEF	; 239
    5c5a:	de 4f       	sbci	r29, 0xFE	; 254
    5c5c:	28 81       	ld	r18, Y
    5c5e:	39 81       	ldd	r19, Y+1	; 0x01
    5c60:	c1 51       	subi	r28, 0x11	; 17
    5c62:	d1 40       	sbci	r29, 0x01	; 1
    5c64:	2f 5f       	subi	r18, 0xFF	; 255
    5c66:	3f 4f       	sbci	r19, 0xFF	; 255
    5c68:	cf 5e       	subi	r28, 0xEF	; 239
    5c6a:	de 4f       	sbci	r29, 0xFE	; 254
    5c6c:	39 83       	std	Y+1, r19	; 0x01
    5c6e:	28 83       	st	Y, r18
    5c70:	c1 51       	subi	r28, 0x11	; 17
    5c72:	d1 40       	sbci	r29, 0x01	; 1
    5c74:	cb 5e       	subi	r28, 0xEB	; 235
    5c76:	de 4f       	sbci	r29, 0xFE	; 254
    5c78:	38 81       	ld	r19, Y
    5c7a:	c5 51       	subi	r28, 0x15	; 21
    5c7c:	d1 40       	sbci	r29, 0x01	; 1
    5c7e:	31 50       	subi	r19, 0x01	; 1
    5c80:	cb 5e       	subi	r28, 0xEB	; 235
    5c82:	de 4f       	sbci	r29, 0xFE	; 254
    5c84:	38 83       	st	Y, r19
    5c86:	c5 51       	subi	r28, 0x15	; 21
    5c88:	d1 40       	sbci	r29, 0x01	; 1
    5c8a:	cb 5e       	subi	r28, 0xEB	; 235
    5c8c:	de 4f       	sbci	r29, 0xFE	; 254
    5c8e:	88 81       	ld	r24, Y
    5c90:	c5 51       	subi	r28, 0x15	; 21
    5c92:	d1 40       	sbci	r29, 0x01	; 1
    5c94:	88 23       	and	r24, r24
    5c96:	21 f6       	brne	.-120    	; 0x5c20 <enuDrawChar+0x9d2>
		for(int i = 0 ; i<5;i++){
    5c98:	1c aa       	std	Y+52, r1	; 0x34
    5c9a:	1b aa       	std	Y+51, r1	; 0x33
    5c9c:	10 c0       	rjmp	.+32     	; 0x5cbe <enuDrawChar+0xa70>
			enuWriteData(k[i]);
    5c9e:	2b a9       	ldd	r18, Y+51	; 0x33
    5ca0:	3c a9       	ldd	r19, Y+52	; 0x34
    5ca2:	ce 01       	movw	r24, r28
    5ca4:	8a 59       	subi	r24, 0x9A	; 154
    5ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ca8:	fc 01       	movw	r30, r24
    5caa:	e2 0f       	add	r30, r18
    5cac:	f3 1f       	adc	r31, r19
    5cae:	80 81       	ld	r24, Z
    5cb0:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

        case 'k': ;
		u8 k[5]={0x7F, 0x10, 0x28, 0x44, 0x00};
		for(int i = 0 ; i<5;i++){
    5cb4:	8b a9       	ldd	r24, Y+51	; 0x33
    5cb6:	9c a9       	ldd	r25, Y+52	; 0x34
    5cb8:	01 96       	adiw	r24, 0x01	; 1
    5cba:	9c ab       	std	Y+52, r25	; 0x34
    5cbc:	8b ab       	std	Y+51, r24	; 0x33
    5cbe:	8b a9       	ldd	r24, Y+51	; 0x33
    5cc0:	9c a9       	ldd	r25, Y+52	; 0x34
    5cc2:	85 30       	cpi	r24, 0x05	; 5
    5cc4:	91 05       	cpc	r25, r1
    5cc6:	5c f3       	brlt	.-42     	; 0x5c9e <enuDrawChar+0xa50>
    5cc8:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(k[i]);
		}
		break;
        case 'm': ;
		u8 m[5]={0x7C, 0x04, 0x78, 0x04, 0x78};
    5ccc:	ce 01       	movw	r24, r28
    5cce:	85 59       	subi	r24, 0x95	; 149
    5cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    5cd2:	ca 5e       	subi	r28, 0xEA	; 234
    5cd4:	de 4f       	sbci	r29, 0xFE	; 254
    5cd6:	99 83       	std	Y+1, r25	; 0x01
    5cd8:	88 83       	st	Y, r24
    5cda:	c6 51       	subi	r28, 0x16	; 22
    5cdc:	d1 40       	sbci	r29, 0x01	; 1
    5cde:	e9 e4       	ldi	r30, 0x49	; 73
    5ce0:	f1 e0       	ldi	r31, 0x01	; 1
    5ce2:	c8 5e       	subi	r28, 0xE8	; 232
    5ce4:	de 4f       	sbci	r29, 0xFE	; 254
    5ce6:	f9 83       	std	Y+1, r31	; 0x01
    5ce8:	e8 83       	st	Y, r30
    5cea:	c8 51       	subi	r28, 0x18	; 24
    5cec:	d1 40       	sbci	r29, 0x01	; 1
    5cee:	f5 e0       	ldi	r31, 0x05	; 5
    5cf0:	c6 5e       	subi	r28, 0xE6	; 230
    5cf2:	de 4f       	sbci	r29, 0xFE	; 254
    5cf4:	f8 83       	st	Y, r31
    5cf6:	ca 51       	subi	r28, 0x1A	; 26
    5cf8:	d1 40       	sbci	r29, 0x01	; 1
    5cfa:	c8 5e       	subi	r28, 0xE8	; 232
    5cfc:	de 4f       	sbci	r29, 0xFE	; 254
    5cfe:	e8 81       	ld	r30, Y
    5d00:	f9 81       	ldd	r31, Y+1	; 0x01
    5d02:	c8 51       	subi	r28, 0x18	; 24
    5d04:	d1 40       	sbci	r29, 0x01	; 1
    5d06:	00 80       	ld	r0, Z
    5d08:	c8 5e       	subi	r28, 0xE8	; 232
    5d0a:	de 4f       	sbci	r29, 0xFE	; 254
    5d0c:	28 81       	ld	r18, Y
    5d0e:	39 81       	ldd	r19, Y+1	; 0x01
    5d10:	c8 51       	subi	r28, 0x18	; 24
    5d12:	d1 40       	sbci	r29, 0x01	; 1
    5d14:	2f 5f       	subi	r18, 0xFF	; 255
    5d16:	3f 4f       	sbci	r19, 0xFF	; 255
    5d18:	c8 5e       	subi	r28, 0xE8	; 232
    5d1a:	de 4f       	sbci	r29, 0xFE	; 254
    5d1c:	39 83       	std	Y+1, r19	; 0x01
    5d1e:	28 83       	st	Y, r18
    5d20:	c8 51       	subi	r28, 0x18	; 24
    5d22:	d1 40       	sbci	r29, 0x01	; 1
    5d24:	ca 5e       	subi	r28, 0xEA	; 234
    5d26:	de 4f       	sbci	r29, 0xFE	; 254
    5d28:	e8 81       	ld	r30, Y
    5d2a:	f9 81       	ldd	r31, Y+1	; 0x01
    5d2c:	c6 51       	subi	r28, 0x16	; 22
    5d2e:	d1 40       	sbci	r29, 0x01	; 1
    5d30:	00 82       	st	Z, r0
    5d32:	ca 5e       	subi	r28, 0xEA	; 234
    5d34:	de 4f       	sbci	r29, 0xFE	; 254
    5d36:	28 81       	ld	r18, Y
    5d38:	39 81       	ldd	r19, Y+1	; 0x01
    5d3a:	c6 51       	subi	r28, 0x16	; 22
    5d3c:	d1 40       	sbci	r29, 0x01	; 1
    5d3e:	2f 5f       	subi	r18, 0xFF	; 255
    5d40:	3f 4f       	sbci	r19, 0xFF	; 255
    5d42:	ca 5e       	subi	r28, 0xEA	; 234
    5d44:	de 4f       	sbci	r29, 0xFE	; 254
    5d46:	39 83       	std	Y+1, r19	; 0x01
    5d48:	28 83       	st	Y, r18
    5d4a:	c6 51       	subi	r28, 0x16	; 22
    5d4c:	d1 40       	sbci	r29, 0x01	; 1
    5d4e:	c6 5e       	subi	r28, 0xE6	; 230
    5d50:	de 4f       	sbci	r29, 0xFE	; 254
    5d52:	38 81       	ld	r19, Y
    5d54:	ca 51       	subi	r28, 0x1A	; 26
    5d56:	d1 40       	sbci	r29, 0x01	; 1
    5d58:	31 50       	subi	r19, 0x01	; 1
    5d5a:	c6 5e       	subi	r28, 0xE6	; 230
    5d5c:	de 4f       	sbci	r29, 0xFE	; 254
    5d5e:	38 83       	st	Y, r19
    5d60:	ca 51       	subi	r28, 0x1A	; 26
    5d62:	d1 40       	sbci	r29, 0x01	; 1
    5d64:	c6 5e       	subi	r28, 0xE6	; 230
    5d66:	de 4f       	sbci	r29, 0xFE	; 254
    5d68:	88 81       	ld	r24, Y
    5d6a:	ca 51       	subi	r28, 0x1A	; 26
    5d6c:	d1 40       	sbci	r29, 0x01	; 1
    5d6e:	88 23       	and	r24, r24
    5d70:	21 f6       	brne	.-120    	; 0x5cfa <enuDrawChar+0xaac>
		for(int i = 0 ; i<5;i++){
    5d72:	1a aa       	std	Y+50, r1	; 0x32
    5d74:	19 aa       	std	Y+49, r1	; 0x31
    5d76:	10 c0       	rjmp	.+32     	; 0x5d98 <enuDrawChar+0xb4a>
			enuWriteData(m[i]);
    5d78:	29 a9       	ldd	r18, Y+49	; 0x31
    5d7a:	3a a9       	ldd	r19, Y+50	; 0x32
    5d7c:	ce 01       	movw	r24, r28
    5d7e:	85 59       	subi	r24, 0x95	; 149
    5d80:	9f 4f       	sbci	r25, 0xFF	; 255
    5d82:	fc 01       	movw	r30, r24
    5d84:	e2 0f       	add	r30, r18
    5d86:	f3 1f       	adc	r31, r19
    5d88:	80 81       	ld	r24, Z
    5d8a:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(k[i]);
		}
		break;
        case 'm': ;
		u8 m[5]={0x7C, 0x04, 0x78, 0x04, 0x78};
		for(int i = 0 ; i<5;i++){
    5d8e:	89 a9       	ldd	r24, Y+49	; 0x31
    5d90:	9a a9       	ldd	r25, Y+50	; 0x32
    5d92:	01 96       	adiw	r24, 0x01	; 1
    5d94:	9a ab       	std	Y+50, r25	; 0x32
    5d96:	89 ab       	std	Y+49, r24	; 0x31
    5d98:	89 a9       	ldd	r24, Y+49	; 0x31
    5d9a:	9a a9       	ldd	r25, Y+50	; 0x32
    5d9c:	85 30       	cpi	r24, 0x05	; 5
    5d9e:	91 05       	cpc	r25, r1
    5da0:	5c f3       	brlt	.-42     	; 0x5d78 <enuDrawChar+0xb2a>
    5da2:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(m[i]);
		}
		break;
        case 'n': ;
		u8 n[5]={0x7C, 0x08, 0x04, 0x04, 0x78};
    5da6:	ce 01       	movw	r24, r28
    5da8:	80 59       	subi	r24, 0x90	; 144
    5daa:	9f 4f       	sbci	r25, 0xFF	; 255
    5dac:	c5 5e       	subi	r28, 0xE5	; 229
    5dae:	de 4f       	sbci	r29, 0xFE	; 254
    5db0:	99 83       	std	Y+1, r25	; 0x01
    5db2:	88 83       	st	Y, r24
    5db4:	cb 51       	subi	r28, 0x1B	; 27
    5db6:	d1 40       	sbci	r29, 0x01	; 1
    5db8:	e4 e4       	ldi	r30, 0x44	; 68
    5dba:	f1 e0       	ldi	r31, 0x01	; 1
    5dbc:	c3 5e       	subi	r28, 0xE3	; 227
    5dbe:	de 4f       	sbci	r29, 0xFE	; 254
    5dc0:	f9 83       	std	Y+1, r31	; 0x01
    5dc2:	e8 83       	st	Y, r30
    5dc4:	cd 51       	subi	r28, 0x1D	; 29
    5dc6:	d1 40       	sbci	r29, 0x01	; 1
    5dc8:	f5 e0       	ldi	r31, 0x05	; 5
    5dca:	c1 5e       	subi	r28, 0xE1	; 225
    5dcc:	de 4f       	sbci	r29, 0xFE	; 254
    5dce:	f8 83       	st	Y, r31
    5dd0:	cf 51       	subi	r28, 0x1F	; 31
    5dd2:	d1 40       	sbci	r29, 0x01	; 1
    5dd4:	c3 5e       	subi	r28, 0xE3	; 227
    5dd6:	de 4f       	sbci	r29, 0xFE	; 254
    5dd8:	e8 81       	ld	r30, Y
    5dda:	f9 81       	ldd	r31, Y+1	; 0x01
    5ddc:	cd 51       	subi	r28, 0x1D	; 29
    5dde:	d1 40       	sbci	r29, 0x01	; 1
    5de0:	00 80       	ld	r0, Z
    5de2:	c3 5e       	subi	r28, 0xE3	; 227
    5de4:	de 4f       	sbci	r29, 0xFE	; 254
    5de6:	28 81       	ld	r18, Y
    5de8:	39 81       	ldd	r19, Y+1	; 0x01
    5dea:	cd 51       	subi	r28, 0x1D	; 29
    5dec:	d1 40       	sbci	r29, 0x01	; 1
    5dee:	2f 5f       	subi	r18, 0xFF	; 255
    5df0:	3f 4f       	sbci	r19, 0xFF	; 255
    5df2:	c3 5e       	subi	r28, 0xE3	; 227
    5df4:	de 4f       	sbci	r29, 0xFE	; 254
    5df6:	39 83       	std	Y+1, r19	; 0x01
    5df8:	28 83       	st	Y, r18
    5dfa:	cd 51       	subi	r28, 0x1D	; 29
    5dfc:	d1 40       	sbci	r29, 0x01	; 1
    5dfe:	c5 5e       	subi	r28, 0xE5	; 229
    5e00:	de 4f       	sbci	r29, 0xFE	; 254
    5e02:	e8 81       	ld	r30, Y
    5e04:	f9 81       	ldd	r31, Y+1	; 0x01
    5e06:	cb 51       	subi	r28, 0x1B	; 27
    5e08:	d1 40       	sbci	r29, 0x01	; 1
    5e0a:	00 82       	st	Z, r0
    5e0c:	c5 5e       	subi	r28, 0xE5	; 229
    5e0e:	de 4f       	sbci	r29, 0xFE	; 254
    5e10:	28 81       	ld	r18, Y
    5e12:	39 81       	ldd	r19, Y+1	; 0x01
    5e14:	cb 51       	subi	r28, 0x1B	; 27
    5e16:	d1 40       	sbci	r29, 0x01	; 1
    5e18:	2f 5f       	subi	r18, 0xFF	; 255
    5e1a:	3f 4f       	sbci	r19, 0xFF	; 255
    5e1c:	c5 5e       	subi	r28, 0xE5	; 229
    5e1e:	de 4f       	sbci	r29, 0xFE	; 254
    5e20:	39 83       	std	Y+1, r19	; 0x01
    5e22:	28 83       	st	Y, r18
    5e24:	cb 51       	subi	r28, 0x1B	; 27
    5e26:	d1 40       	sbci	r29, 0x01	; 1
    5e28:	c1 5e       	subi	r28, 0xE1	; 225
    5e2a:	de 4f       	sbci	r29, 0xFE	; 254
    5e2c:	38 81       	ld	r19, Y
    5e2e:	cf 51       	subi	r28, 0x1F	; 31
    5e30:	d1 40       	sbci	r29, 0x01	; 1
    5e32:	31 50       	subi	r19, 0x01	; 1
    5e34:	c1 5e       	subi	r28, 0xE1	; 225
    5e36:	de 4f       	sbci	r29, 0xFE	; 254
    5e38:	38 83       	st	Y, r19
    5e3a:	cf 51       	subi	r28, 0x1F	; 31
    5e3c:	d1 40       	sbci	r29, 0x01	; 1
    5e3e:	c1 5e       	subi	r28, 0xE1	; 225
    5e40:	de 4f       	sbci	r29, 0xFE	; 254
    5e42:	88 81       	ld	r24, Y
    5e44:	cf 51       	subi	r28, 0x1F	; 31
    5e46:	d1 40       	sbci	r29, 0x01	; 1
    5e48:	88 23       	and	r24, r24
    5e4a:	21 f6       	brne	.-120    	; 0x5dd4 <enuDrawChar+0xb86>
		for(int i = 0 ; i<5;i++){
    5e4c:	18 aa       	std	Y+48, r1	; 0x30
    5e4e:	1f a6       	std	Y+47, r1	; 0x2f
    5e50:	10 c0       	rjmp	.+32     	; 0x5e72 <enuDrawChar+0xc24>
			enuWriteData(n[i]);
    5e52:	2f a5       	ldd	r18, Y+47	; 0x2f
    5e54:	38 a9       	ldd	r19, Y+48	; 0x30
    5e56:	ce 01       	movw	r24, r28
    5e58:	80 59       	subi	r24, 0x90	; 144
    5e5a:	9f 4f       	sbci	r25, 0xFF	; 255
    5e5c:	fc 01       	movw	r30, r24
    5e5e:	e2 0f       	add	r30, r18
    5e60:	f3 1f       	adc	r31, r19
    5e62:	80 81       	ld	r24, Z
    5e64:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(m[i]);
		}
		break;
        case 'n': ;
		u8 n[5]={0x7C, 0x08, 0x04, 0x04, 0x78};
		for(int i = 0 ; i<5;i++){
    5e68:	8f a5       	ldd	r24, Y+47	; 0x2f
    5e6a:	98 a9       	ldd	r25, Y+48	; 0x30
    5e6c:	01 96       	adiw	r24, 0x01	; 1
    5e6e:	98 ab       	std	Y+48, r25	; 0x30
    5e70:	8f a7       	std	Y+47, r24	; 0x2f
    5e72:	8f a5       	ldd	r24, Y+47	; 0x2f
    5e74:	98 a9       	ldd	r25, Y+48	; 0x30
    5e76:	85 30       	cpi	r24, 0x05	; 5
    5e78:	91 05       	cpc	r25, r1
    5e7a:	5c f3       	brlt	.-42     	; 0x5e52 <enuDrawChar+0xc04>
    5e7c:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(n[i]);
		}
		break;

        case 'q': ;
		u8 q[5]={0x08, 0x14, 0x14, 0x14, 0x7C};
    5e80:	ce 01       	movw	r24, r28
    5e82:	8b 58       	subi	r24, 0x8B	; 139
    5e84:	9f 4f       	sbci	r25, 0xFF	; 255
    5e86:	c0 5e       	subi	r28, 0xE0	; 224
    5e88:	de 4f       	sbci	r29, 0xFE	; 254
    5e8a:	99 83       	std	Y+1, r25	; 0x01
    5e8c:	88 83       	st	Y, r24
    5e8e:	c0 52       	subi	r28, 0x20	; 32
    5e90:	d1 40       	sbci	r29, 0x01	; 1
    5e92:	ef e3       	ldi	r30, 0x3F	; 63
    5e94:	f1 e0       	ldi	r31, 0x01	; 1
    5e96:	ce 5d       	subi	r28, 0xDE	; 222
    5e98:	de 4f       	sbci	r29, 0xFE	; 254
    5e9a:	f9 83       	std	Y+1, r31	; 0x01
    5e9c:	e8 83       	st	Y, r30
    5e9e:	c2 52       	subi	r28, 0x22	; 34
    5ea0:	d1 40       	sbci	r29, 0x01	; 1
    5ea2:	f5 e0       	ldi	r31, 0x05	; 5
    5ea4:	cc 5d       	subi	r28, 0xDC	; 220
    5ea6:	de 4f       	sbci	r29, 0xFE	; 254
    5ea8:	f8 83       	st	Y, r31
    5eaa:	c4 52       	subi	r28, 0x24	; 36
    5eac:	d1 40       	sbci	r29, 0x01	; 1
    5eae:	ce 5d       	subi	r28, 0xDE	; 222
    5eb0:	de 4f       	sbci	r29, 0xFE	; 254
    5eb2:	e8 81       	ld	r30, Y
    5eb4:	f9 81       	ldd	r31, Y+1	; 0x01
    5eb6:	c2 52       	subi	r28, 0x22	; 34
    5eb8:	d1 40       	sbci	r29, 0x01	; 1
    5eba:	00 80       	ld	r0, Z
    5ebc:	ce 5d       	subi	r28, 0xDE	; 222
    5ebe:	de 4f       	sbci	r29, 0xFE	; 254
    5ec0:	28 81       	ld	r18, Y
    5ec2:	39 81       	ldd	r19, Y+1	; 0x01
    5ec4:	c2 52       	subi	r28, 0x22	; 34
    5ec6:	d1 40       	sbci	r29, 0x01	; 1
    5ec8:	2f 5f       	subi	r18, 0xFF	; 255
    5eca:	3f 4f       	sbci	r19, 0xFF	; 255
    5ecc:	ce 5d       	subi	r28, 0xDE	; 222
    5ece:	de 4f       	sbci	r29, 0xFE	; 254
    5ed0:	39 83       	std	Y+1, r19	; 0x01
    5ed2:	28 83       	st	Y, r18
    5ed4:	c2 52       	subi	r28, 0x22	; 34
    5ed6:	d1 40       	sbci	r29, 0x01	; 1
    5ed8:	c0 5e       	subi	r28, 0xE0	; 224
    5eda:	de 4f       	sbci	r29, 0xFE	; 254
    5edc:	e8 81       	ld	r30, Y
    5ede:	f9 81       	ldd	r31, Y+1	; 0x01
    5ee0:	c0 52       	subi	r28, 0x20	; 32
    5ee2:	d1 40       	sbci	r29, 0x01	; 1
    5ee4:	00 82       	st	Z, r0
    5ee6:	c0 5e       	subi	r28, 0xE0	; 224
    5ee8:	de 4f       	sbci	r29, 0xFE	; 254
    5eea:	28 81       	ld	r18, Y
    5eec:	39 81       	ldd	r19, Y+1	; 0x01
    5eee:	c0 52       	subi	r28, 0x20	; 32
    5ef0:	d1 40       	sbci	r29, 0x01	; 1
    5ef2:	2f 5f       	subi	r18, 0xFF	; 255
    5ef4:	3f 4f       	sbci	r19, 0xFF	; 255
    5ef6:	c0 5e       	subi	r28, 0xE0	; 224
    5ef8:	de 4f       	sbci	r29, 0xFE	; 254
    5efa:	39 83       	std	Y+1, r19	; 0x01
    5efc:	28 83       	st	Y, r18
    5efe:	c0 52       	subi	r28, 0x20	; 32
    5f00:	d1 40       	sbci	r29, 0x01	; 1
    5f02:	cc 5d       	subi	r28, 0xDC	; 220
    5f04:	de 4f       	sbci	r29, 0xFE	; 254
    5f06:	38 81       	ld	r19, Y
    5f08:	c4 52       	subi	r28, 0x24	; 36
    5f0a:	d1 40       	sbci	r29, 0x01	; 1
    5f0c:	31 50       	subi	r19, 0x01	; 1
    5f0e:	cc 5d       	subi	r28, 0xDC	; 220
    5f10:	de 4f       	sbci	r29, 0xFE	; 254
    5f12:	38 83       	st	Y, r19
    5f14:	c4 52       	subi	r28, 0x24	; 36
    5f16:	d1 40       	sbci	r29, 0x01	; 1
    5f18:	cc 5d       	subi	r28, 0xDC	; 220
    5f1a:	de 4f       	sbci	r29, 0xFE	; 254
    5f1c:	88 81       	ld	r24, Y
    5f1e:	c4 52       	subi	r28, 0x24	; 36
    5f20:	d1 40       	sbci	r29, 0x01	; 1
    5f22:	88 23       	and	r24, r24
    5f24:	21 f6       	brne	.-120    	; 0x5eae <enuDrawChar+0xc60>
		for(int i = 0 ; i<5;i++){
    5f26:	1e a6       	std	Y+46, r1	; 0x2e
    5f28:	1d a6       	std	Y+45, r1	; 0x2d
    5f2a:	10 c0       	rjmp	.+32     	; 0x5f4c <enuDrawChar+0xcfe>
			enuWriteData(q[i]);
    5f2c:	2d a5       	ldd	r18, Y+45	; 0x2d
    5f2e:	3e a5       	ldd	r19, Y+46	; 0x2e
    5f30:	ce 01       	movw	r24, r28
    5f32:	8b 58       	subi	r24, 0x8B	; 139
    5f34:	9f 4f       	sbci	r25, 0xFF	; 255
    5f36:	fc 01       	movw	r30, r24
    5f38:	e2 0f       	add	r30, r18
    5f3a:	f3 1f       	adc	r31, r19
    5f3c:	80 81       	ld	r24, Z
    5f3e:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

        case 'q': ;
		u8 q[5]={0x08, 0x14, 0x14, 0x14, 0x7C};
		for(int i = 0 ; i<5;i++){
    5f42:	8d a5       	ldd	r24, Y+45	; 0x2d
    5f44:	9e a5       	ldd	r25, Y+46	; 0x2e
    5f46:	01 96       	adiw	r24, 0x01	; 1
    5f48:	9e a7       	std	Y+46, r25	; 0x2e
    5f4a:	8d a7       	std	Y+45, r24	; 0x2d
    5f4c:	8d a5       	ldd	r24, Y+45	; 0x2d
    5f4e:	9e a5       	ldd	r25, Y+46	; 0x2e
    5f50:	85 30       	cpi	r24, 0x05	; 5
    5f52:	91 05       	cpc	r25, r1
    5f54:	5c f3       	brlt	.-42     	; 0x5f2c <enuDrawChar+0xcde>
    5f56:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(q[i]);
		}
		break;
        case 'r': ;
		u8 r[5]={0x00, 0x7C, 0x08, 0x04, 0x04};
    5f5a:	ce 01       	movw	r24, r28
    5f5c:	86 58       	subi	r24, 0x86	; 134
    5f5e:	9f 4f       	sbci	r25, 0xFF	; 255
    5f60:	cb 5d       	subi	r28, 0xDB	; 219
    5f62:	de 4f       	sbci	r29, 0xFE	; 254
    5f64:	99 83       	std	Y+1, r25	; 0x01
    5f66:	88 83       	st	Y, r24
    5f68:	c5 52       	subi	r28, 0x25	; 37
    5f6a:	d1 40       	sbci	r29, 0x01	; 1
    5f6c:	ea e3       	ldi	r30, 0x3A	; 58
    5f6e:	f1 e0       	ldi	r31, 0x01	; 1
    5f70:	c9 5d       	subi	r28, 0xD9	; 217
    5f72:	de 4f       	sbci	r29, 0xFE	; 254
    5f74:	f9 83       	std	Y+1, r31	; 0x01
    5f76:	e8 83       	st	Y, r30
    5f78:	c7 52       	subi	r28, 0x27	; 39
    5f7a:	d1 40       	sbci	r29, 0x01	; 1
    5f7c:	f5 e0       	ldi	r31, 0x05	; 5
    5f7e:	c7 5d       	subi	r28, 0xD7	; 215
    5f80:	de 4f       	sbci	r29, 0xFE	; 254
    5f82:	f8 83       	st	Y, r31
    5f84:	c9 52       	subi	r28, 0x29	; 41
    5f86:	d1 40       	sbci	r29, 0x01	; 1
    5f88:	c9 5d       	subi	r28, 0xD9	; 217
    5f8a:	de 4f       	sbci	r29, 0xFE	; 254
    5f8c:	e8 81       	ld	r30, Y
    5f8e:	f9 81       	ldd	r31, Y+1	; 0x01
    5f90:	c7 52       	subi	r28, 0x27	; 39
    5f92:	d1 40       	sbci	r29, 0x01	; 1
    5f94:	00 80       	ld	r0, Z
    5f96:	c9 5d       	subi	r28, 0xD9	; 217
    5f98:	de 4f       	sbci	r29, 0xFE	; 254
    5f9a:	28 81       	ld	r18, Y
    5f9c:	39 81       	ldd	r19, Y+1	; 0x01
    5f9e:	c7 52       	subi	r28, 0x27	; 39
    5fa0:	d1 40       	sbci	r29, 0x01	; 1
    5fa2:	2f 5f       	subi	r18, 0xFF	; 255
    5fa4:	3f 4f       	sbci	r19, 0xFF	; 255
    5fa6:	c9 5d       	subi	r28, 0xD9	; 217
    5fa8:	de 4f       	sbci	r29, 0xFE	; 254
    5faa:	39 83       	std	Y+1, r19	; 0x01
    5fac:	28 83       	st	Y, r18
    5fae:	c7 52       	subi	r28, 0x27	; 39
    5fb0:	d1 40       	sbci	r29, 0x01	; 1
    5fb2:	cb 5d       	subi	r28, 0xDB	; 219
    5fb4:	de 4f       	sbci	r29, 0xFE	; 254
    5fb6:	e8 81       	ld	r30, Y
    5fb8:	f9 81       	ldd	r31, Y+1	; 0x01
    5fba:	c5 52       	subi	r28, 0x25	; 37
    5fbc:	d1 40       	sbci	r29, 0x01	; 1
    5fbe:	00 82       	st	Z, r0
    5fc0:	cb 5d       	subi	r28, 0xDB	; 219
    5fc2:	de 4f       	sbci	r29, 0xFE	; 254
    5fc4:	28 81       	ld	r18, Y
    5fc6:	39 81       	ldd	r19, Y+1	; 0x01
    5fc8:	c5 52       	subi	r28, 0x25	; 37
    5fca:	d1 40       	sbci	r29, 0x01	; 1
    5fcc:	2f 5f       	subi	r18, 0xFF	; 255
    5fce:	3f 4f       	sbci	r19, 0xFF	; 255
    5fd0:	cb 5d       	subi	r28, 0xDB	; 219
    5fd2:	de 4f       	sbci	r29, 0xFE	; 254
    5fd4:	39 83       	std	Y+1, r19	; 0x01
    5fd6:	28 83       	st	Y, r18
    5fd8:	c5 52       	subi	r28, 0x25	; 37
    5fda:	d1 40       	sbci	r29, 0x01	; 1
    5fdc:	c7 5d       	subi	r28, 0xD7	; 215
    5fde:	de 4f       	sbci	r29, 0xFE	; 254
    5fe0:	38 81       	ld	r19, Y
    5fe2:	c9 52       	subi	r28, 0x29	; 41
    5fe4:	d1 40       	sbci	r29, 0x01	; 1
    5fe6:	31 50       	subi	r19, 0x01	; 1
    5fe8:	c7 5d       	subi	r28, 0xD7	; 215
    5fea:	de 4f       	sbci	r29, 0xFE	; 254
    5fec:	38 83       	st	Y, r19
    5fee:	c9 52       	subi	r28, 0x29	; 41
    5ff0:	d1 40       	sbci	r29, 0x01	; 1
    5ff2:	c7 5d       	subi	r28, 0xD7	; 215
    5ff4:	de 4f       	sbci	r29, 0xFE	; 254
    5ff6:	88 81       	ld	r24, Y
    5ff8:	c9 52       	subi	r28, 0x29	; 41
    5ffa:	d1 40       	sbci	r29, 0x01	; 1
    5ffc:	88 23       	and	r24, r24
    5ffe:	21 f6       	brne	.-120    	; 0x5f88 <enuDrawChar+0xd3a>
		for(int i = 0 ; i<5;i++){
    6000:	1c a6       	std	Y+44, r1	; 0x2c
    6002:	1b a6       	std	Y+43, r1	; 0x2b
    6004:	10 c0       	rjmp	.+32     	; 0x6026 <enuDrawChar+0xdd8>
			enuWriteData(r[i]);
    6006:	2b a5       	ldd	r18, Y+43	; 0x2b
    6008:	3c a5       	ldd	r19, Y+44	; 0x2c
    600a:	ce 01       	movw	r24, r28
    600c:	86 58       	subi	r24, 0x86	; 134
    600e:	9f 4f       	sbci	r25, 0xFF	; 255
    6010:	fc 01       	movw	r30, r24
    6012:	e2 0f       	add	r30, r18
    6014:	f3 1f       	adc	r31, r19
    6016:	80 81       	ld	r24, Z
    6018:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(q[i]);
		}
		break;
        case 'r': ;
		u8 r[5]={0x00, 0x7C, 0x08, 0x04, 0x04};
		for(int i = 0 ; i<5;i++){
    601c:	8b a5       	ldd	r24, Y+43	; 0x2b
    601e:	9c a5       	ldd	r25, Y+44	; 0x2c
    6020:	01 96       	adiw	r24, 0x01	; 1
    6022:	9c a7       	std	Y+44, r25	; 0x2c
    6024:	8b a7       	std	Y+43, r24	; 0x2b
    6026:	8b a5       	ldd	r24, Y+43	; 0x2b
    6028:	9c a5       	ldd	r25, Y+44	; 0x2c
    602a:	85 30       	cpi	r24, 0x05	; 5
    602c:	91 05       	cpc	r25, r1
    602e:	5c f3       	brlt	.-42     	; 0x6006 <enuDrawChar+0xdb8>
    6030:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(r[i]);
		}
		break;
        case 't': ;
		u8 t[5]={0x04, 0x04, 0x3F, 0x44, 0x44};
    6034:	ce 01       	movw	r24, r28
    6036:	81 58       	subi	r24, 0x81	; 129
    6038:	9f 4f       	sbci	r25, 0xFF	; 255
    603a:	c6 5d       	subi	r28, 0xD6	; 214
    603c:	de 4f       	sbci	r29, 0xFE	; 254
    603e:	99 83       	std	Y+1, r25	; 0x01
    6040:	88 83       	st	Y, r24
    6042:	ca 52       	subi	r28, 0x2A	; 42
    6044:	d1 40       	sbci	r29, 0x01	; 1
    6046:	e5 e3       	ldi	r30, 0x35	; 53
    6048:	f1 e0       	ldi	r31, 0x01	; 1
    604a:	c4 5d       	subi	r28, 0xD4	; 212
    604c:	de 4f       	sbci	r29, 0xFE	; 254
    604e:	f9 83       	std	Y+1, r31	; 0x01
    6050:	e8 83       	st	Y, r30
    6052:	cc 52       	subi	r28, 0x2C	; 44
    6054:	d1 40       	sbci	r29, 0x01	; 1
    6056:	f5 e0       	ldi	r31, 0x05	; 5
    6058:	c2 5d       	subi	r28, 0xD2	; 210
    605a:	de 4f       	sbci	r29, 0xFE	; 254
    605c:	f8 83       	st	Y, r31
    605e:	ce 52       	subi	r28, 0x2E	; 46
    6060:	d1 40       	sbci	r29, 0x01	; 1
    6062:	c4 5d       	subi	r28, 0xD4	; 212
    6064:	de 4f       	sbci	r29, 0xFE	; 254
    6066:	e8 81       	ld	r30, Y
    6068:	f9 81       	ldd	r31, Y+1	; 0x01
    606a:	cc 52       	subi	r28, 0x2C	; 44
    606c:	d1 40       	sbci	r29, 0x01	; 1
    606e:	00 80       	ld	r0, Z
    6070:	c4 5d       	subi	r28, 0xD4	; 212
    6072:	de 4f       	sbci	r29, 0xFE	; 254
    6074:	28 81       	ld	r18, Y
    6076:	39 81       	ldd	r19, Y+1	; 0x01
    6078:	cc 52       	subi	r28, 0x2C	; 44
    607a:	d1 40       	sbci	r29, 0x01	; 1
    607c:	2f 5f       	subi	r18, 0xFF	; 255
    607e:	3f 4f       	sbci	r19, 0xFF	; 255
    6080:	c4 5d       	subi	r28, 0xD4	; 212
    6082:	de 4f       	sbci	r29, 0xFE	; 254
    6084:	39 83       	std	Y+1, r19	; 0x01
    6086:	28 83       	st	Y, r18
    6088:	cc 52       	subi	r28, 0x2C	; 44
    608a:	d1 40       	sbci	r29, 0x01	; 1
    608c:	c6 5d       	subi	r28, 0xD6	; 214
    608e:	de 4f       	sbci	r29, 0xFE	; 254
    6090:	e8 81       	ld	r30, Y
    6092:	f9 81       	ldd	r31, Y+1	; 0x01
    6094:	ca 52       	subi	r28, 0x2A	; 42
    6096:	d1 40       	sbci	r29, 0x01	; 1
    6098:	00 82       	st	Z, r0
    609a:	c6 5d       	subi	r28, 0xD6	; 214
    609c:	de 4f       	sbci	r29, 0xFE	; 254
    609e:	28 81       	ld	r18, Y
    60a0:	39 81       	ldd	r19, Y+1	; 0x01
    60a2:	ca 52       	subi	r28, 0x2A	; 42
    60a4:	d1 40       	sbci	r29, 0x01	; 1
    60a6:	2f 5f       	subi	r18, 0xFF	; 255
    60a8:	3f 4f       	sbci	r19, 0xFF	; 255
    60aa:	c6 5d       	subi	r28, 0xD6	; 214
    60ac:	de 4f       	sbci	r29, 0xFE	; 254
    60ae:	39 83       	std	Y+1, r19	; 0x01
    60b0:	28 83       	st	Y, r18
    60b2:	ca 52       	subi	r28, 0x2A	; 42
    60b4:	d1 40       	sbci	r29, 0x01	; 1
    60b6:	c2 5d       	subi	r28, 0xD2	; 210
    60b8:	de 4f       	sbci	r29, 0xFE	; 254
    60ba:	38 81       	ld	r19, Y
    60bc:	ce 52       	subi	r28, 0x2E	; 46
    60be:	d1 40       	sbci	r29, 0x01	; 1
    60c0:	31 50       	subi	r19, 0x01	; 1
    60c2:	c2 5d       	subi	r28, 0xD2	; 210
    60c4:	de 4f       	sbci	r29, 0xFE	; 254
    60c6:	38 83       	st	Y, r19
    60c8:	ce 52       	subi	r28, 0x2E	; 46
    60ca:	d1 40       	sbci	r29, 0x01	; 1
    60cc:	c2 5d       	subi	r28, 0xD2	; 210
    60ce:	de 4f       	sbci	r29, 0xFE	; 254
    60d0:	88 81       	ld	r24, Y
    60d2:	ce 52       	subi	r28, 0x2E	; 46
    60d4:	d1 40       	sbci	r29, 0x01	; 1
    60d6:	88 23       	and	r24, r24
    60d8:	21 f6       	brne	.-120    	; 0x6062 <enuDrawChar+0xe14>
		for(int i = 0 ; i<5;i++){
    60da:	1a a6       	std	Y+42, r1	; 0x2a
    60dc:	19 a6       	std	Y+41, r1	; 0x29
    60de:	10 c0       	rjmp	.+32     	; 0x6100 <enuDrawChar+0xeb2>
			enuWriteData(t[i]);
    60e0:	29 a5       	ldd	r18, Y+41	; 0x29
    60e2:	3a a5       	ldd	r19, Y+42	; 0x2a
    60e4:	ce 01       	movw	r24, r28
    60e6:	81 58       	subi	r24, 0x81	; 129
    60e8:	9f 4f       	sbci	r25, 0xFF	; 255
    60ea:	fc 01       	movw	r30, r24
    60ec:	e2 0f       	add	r30, r18
    60ee:	f3 1f       	adc	r31, r19
    60f0:	80 81       	ld	r24, Z
    60f2:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(r[i]);
		}
		break;
        case 't': ;
		u8 t[5]={0x04, 0x04, 0x3F, 0x44, 0x44};
		for(int i = 0 ; i<5;i++){
    60f6:	89 a5       	ldd	r24, Y+41	; 0x29
    60f8:	9a a5       	ldd	r25, Y+42	; 0x2a
    60fa:	01 96       	adiw	r24, 0x01	; 1
    60fc:	9a a7       	std	Y+42, r25	; 0x2a
    60fe:	89 a7       	std	Y+41, r24	; 0x29
    6100:	89 a5       	ldd	r24, Y+41	; 0x29
    6102:	9a a5       	ldd	r25, Y+42	; 0x2a
    6104:	85 30       	cpi	r24, 0x05	; 5
    6106:	91 05       	cpc	r25, r1
    6108:	5c f3       	brlt	.-42     	; 0x60e0 <enuDrawChar+0xe92>
    610a:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(t[i]);
		}
		break;
        case 'u': ;
		u8 u[5]={0x3C, 0x40, 0x40, 0x20, 0x7C};
    610e:	ce 01       	movw	r24, r28
    6110:	8c 57       	subi	r24, 0x7C	; 124
    6112:	9f 4f       	sbci	r25, 0xFF	; 255
    6114:	c1 5d       	subi	r28, 0xD1	; 209
    6116:	de 4f       	sbci	r29, 0xFE	; 254
    6118:	99 83       	std	Y+1, r25	; 0x01
    611a:	88 83       	st	Y, r24
    611c:	cf 52       	subi	r28, 0x2F	; 47
    611e:	d1 40       	sbci	r29, 0x01	; 1
    6120:	e0 e3       	ldi	r30, 0x30	; 48
    6122:	f1 e0       	ldi	r31, 0x01	; 1
    6124:	cf 5c       	subi	r28, 0xCF	; 207
    6126:	de 4f       	sbci	r29, 0xFE	; 254
    6128:	f9 83       	std	Y+1, r31	; 0x01
    612a:	e8 83       	st	Y, r30
    612c:	c1 53       	subi	r28, 0x31	; 49
    612e:	d1 40       	sbci	r29, 0x01	; 1
    6130:	f5 e0       	ldi	r31, 0x05	; 5
    6132:	cd 5c       	subi	r28, 0xCD	; 205
    6134:	de 4f       	sbci	r29, 0xFE	; 254
    6136:	f8 83       	st	Y, r31
    6138:	c3 53       	subi	r28, 0x33	; 51
    613a:	d1 40       	sbci	r29, 0x01	; 1
    613c:	cf 5c       	subi	r28, 0xCF	; 207
    613e:	de 4f       	sbci	r29, 0xFE	; 254
    6140:	e8 81       	ld	r30, Y
    6142:	f9 81       	ldd	r31, Y+1	; 0x01
    6144:	c1 53       	subi	r28, 0x31	; 49
    6146:	d1 40       	sbci	r29, 0x01	; 1
    6148:	00 80       	ld	r0, Z
    614a:	cf 5c       	subi	r28, 0xCF	; 207
    614c:	de 4f       	sbci	r29, 0xFE	; 254
    614e:	28 81       	ld	r18, Y
    6150:	39 81       	ldd	r19, Y+1	; 0x01
    6152:	c1 53       	subi	r28, 0x31	; 49
    6154:	d1 40       	sbci	r29, 0x01	; 1
    6156:	2f 5f       	subi	r18, 0xFF	; 255
    6158:	3f 4f       	sbci	r19, 0xFF	; 255
    615a:	cf 5c       	subi	r28, 0xCF	; 207
    615c:	de 4f       	sbci	r29, 0xFE	; 254
    615e:	39 83       	std	Y+1, r19	; 0x01
    6160:	28 83       	st	Y, r18
    6162:	c1 53       	subi	r28, 0x31	; 49
    6164:	d1 40       	sbci	r29, 0x01	; 1
    6166:	c1 5d       	subi	r28, 0xD1	; 209
    6168:	de 4f       	sbci	r29, 0xFE	; 254
    616a:	e8 81       	ld	r30, Y
    616c:	f9 81       	ldd	r31, Y+1	; 0x01
    616e:	cf 52       	subi	r28, 0x2F	; 47
    6170:	d1 40       	sbci	r29, 0x01	; 1
    6172:	00 82       	st	Z, r0
    6174:	c1 5d       	subi	r28, 0xD1	; 209
    6176:	de 4f       	sbci	r29, 0xFE	; 254
    6178:	28 81       	ld	r18, Y
    617a:	39 81       	ldd	r19, Y+1	; 0x01
    617c:	cf 52       	subi	r28, 0x2F	; 47
    617e:	d1 40       	sbci	r29, 0x01	; 1
    6180:	2f 5f       	subi	r18, 0xFF	; 255
    6182:	3f 4f       	sbci	r19, 0xFF	; 255
    6184:	c1 5d       	subi	r28, 0xD1	; 209
    6186:	de 4f       	sbci	r29, 0xFE	; 254
    6188:	39 83       	std	Y+1, r19	; 0x01
    618a:	28 83       	st	Y, r18
    618c:	cf 52       	subi	r28, 0x2F	; 47
    618e:	d1 40       	sbci	r29, 0x01	; 1
    6190:	cd 5c       	subi	r28, 0xCD	; 205
    6192:	de 4f       	sbci	r29, 0xFE	; 254
    6194:	38 81       	ld	r19, Y
    6196:	c3 53       	subi	r28, 0x33	; 51
    6198:	d1 40       	sbci	r29, 0x01	; 1
    619a:	31 50       	subi	r19, 0x01	; 1
    619c:	cd 5c       	subi	r28, 0xCD	; 205
    619e:	de 4f       	sbci	r29, 0xFE	; 254
    61a0:	38 83       	st	Y, r19
    61a2:	c3 53       	subi	r28, 0x33	; 51
    61a4:	d1 40       	sbci	r29, 0x01	; 1
    61a6:	cd 5c       	subi	r28, 0xCD	; 205
    61a8:	de 4f       	sbci	r29, 0xFE	; 254
    61aa:	88 81       	ld	r24, Y
    61ac:	c3 53       	subi	r28, 0x33	; 51
    61ae:	d1 40       	sbci	r29, 0x01	; 1
    61b0:	88 23       	and	r24, r24
    61b2:	21 f6       	brne	.-120    	; 0x613c <enuDrawChar+0xeee>
		for(int i = 0 ; i<5;i++){
    61b4:	18 a6       	std	Y+40, r1	; 0x28
    61b6:	1f a2       	std	Y+39, r1	; 0x27
    61b8:	10 c0       	rjmp	.+32     	; 0x61da <enuDrawChar+0xf8c>
			enuWriteData(u[i]);
    61ba:	2f a1       	ldd	r18, Y+39	; 0x27
    61bc:	38 a5       	ldd	r19, Y+40	; 0x28
    61be:	ce 01       	movw	r24, r28
    61c0:	8c 57       	subi	r24, 0x7C	; 124
    61c2:	9f 4f       	sbci	r25, 0xFF	; 255
    61c4:	fc 01       	movw	r30, r24
    61c6:	e2 0f       	add	r30, r18
    61c8:	f3 1f       	adc	r31, r19
    61ca:	80 81       	ld	r24, Z
    61cc:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(t[i]);
		}
		break;
        case 'u': ;
		u8 u[5]={0x3C, 0x40, 0x40, 0x20, 0x7C};
		for(int i = 0 ; i<5;i++){
    61d0:	8f a1       	ldd	r24, Y+39	; 0x27
    61d2:	98 a5       	ldd	r25, Y+40	; 0x28
    61d4:	01 96       	adiw	r24, 0x01	; 1
    61d6:	98 a7       	std	Y+40, r25	; 0x28
    61d8:	8f a3       	std	Y+39, r24	; 0x27
    61da:	8f a1       	ldd	r24, Y+39	; 0x27
    61dc:	98 a5       	ldd	r25, Y+40	; 0x28
    61de:	85 30       	cpi	r24, 0x05	; 5
    61e0:	91 05       	cpc	r25, r1
    61e2:	5c f3       	brlt	.-42     	; 0x61ba <enuDrawChar+0xf6c>
    61e4:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(u[i]);
		}
		break;
        case 'y': ;
		u8 y[5]={0x0C, 0x50, 0x50, 0x50, 0x3C};
    61e8:	ce 01       	movw	r24, r28
    61ea:	87 57       	subi	r24, 0x77	; 119
    61ec:	9f 4f       	sbci	r25, 0xFF	; 255
    61ee:	cc 5c       	subi	r28, 0xCC	; 204
    61f0:	de 4f       	sbci	r29, 0xFE	; 254
    61f2:	99 83       	std	Y+1, r25	; 0x01
    61f4:	88 83       	st	Y, r24
    61f6:	c4 53       	subi	r28, 0x34	; 52
    61f8:	d1 40       	sbci	r29, 0x01	; 1
    61fa:	eb e2       	ldi	r30, 0x2B	; 43
    61fc:	f1 e0       	ldi	r31, 0x01	; 1
    61fe:	ca 5c       	subi	r28, 0xCA	; 202
    6200:	de 4f       	sbci	r29, 0xFE	; 254
    6202:	f9 83       	std	Y+1, r31	; 0x01
    6204:	e8 83       	st	Y, r30
    6206:	c6 53       	subi	r28, 0x36	; 54
    6208:	d1 40       	sbci	r29, 0x01	; 1
    620a:	f5 e0       	ldi	r31, 0x05	; 5
    620c:	c8 5c       	subi	r28, 0xC8	; 200
    620e:	de 4f       	sbci	r29, 0xFE	; 254
    6210:	f8 83       	st	Y, r31
    6212:	c8 53       	subi	r28, 0x38	; 56
    6214:	d1 40       	sbci	r29, 0x01	; 1
    6216:	ca 5c       	subi	r28, 0xCA	; 202
    6218:	de 4f       	sbci	r29, 0xFE	; 254
    621a:	e8 81       	ld	r30, Y
    621c:	f9 81       	ldd	r31, Y+1	; 0x01
    621e:	c6 53       	subi	r28, 0x36	; 54
    6220:	d1 40       	sbci	r29, 0x01	; 1
    6222:	00 80       	ld	r0, Z
    6224:	ca 5c       	subi	r28, 0xCA	; 202
    6226:	de 4f       	sbci	r29, 0xFE	; 254
    6228:	28 81       	ld	r18, Y
    622a:	39 81       	ldd	r19, Y+1	; 0x01
    622c:	c6 53       	subi	r28, 0x36	; 54
    622e:	d1 40       	sbci	r29, 0x01	; 1
    6230:	2f 5f       	subi	r18, 0xFF	; 255
    6232:	3f 4f       	sbci	r19, 0xFF	; 255
    6234:	ca 5c       	subi	r28, 0xCA	; 202
    6236:	de 4f       	sbci	r29, 0xFE	; 254
    6238:	39 83       	std	Y+1, r19	; 0x01
    623a:	28 83       	st	Y, r18
    623c:	c6 53       	subi	r28, 0x36	; 54
    623e:	d1 40       	sbci	r29, 0x01	; 1
    6240:	cc 5c       	subi	r28, 0xCC	; 204
    6242:	de 4f       	sbci	r29, 0xFE	; 254
    6244:	e8 81       	ld	r30, Y
    6246:	f9 81       	ldd	r31, Y+1	; 0x01
    6248:	c4 53       	subi	r28, 0x34	; 52
    624a:	d1 40       	sbci	r29, 0x01	; 1
    624c:	00 82       	st	Z, r0
    624e:	cc 5c       	subi	r28, 0xCC	; 204
    6250:	de 4f       	sbci	r29, 0xFE	; 254
    6252:	28 81       	ld	r18, Y
    6254:	39 81       	ldd	r19, Y+1	; 0x01
    6256:	c4 53       	subi	r28, 0x34	; 52
    6258:	d1 40       	sbci	r29, 0x01	; 1
    625a:	2f 5f       	subi	r18, 0xFF	; 255
    625c:	3f 4f       	sbci	r19, 0xFF	; 255
    625e:	cc 5c       	subi	r28, 0xCC	; 204
    6260:	de 4f       	sbci	r29, 0xFE	; 254
    6262:	39 83       	std	Y+1, r19	; 0x01
    6264:	28 83       	st	Y, r18
    6266:	c4 53       	subi	r28, 0x34	; 52
    6268:	d1 40       	sbci	r29, 0x01	; 1
    626a:	c8 5c       	subi	r28, 0xC8	; 200
    626c:	de 4f       	sbci	r29, 0xFE	; 254
    626e:	38 81       	ld	r19, Y
    6270:	c8 53       	subi	r28, 0x38	; 56
    6272:	d1 40       	sbci	r29, 0x01	; 1
    6274:	31 50       	subi	r19, 0x01	; 1
    6276:	c8 5c       	subi	r28, 0xC8	; 200
    6278:	de 4f       	sbci	r29, 0xFE	; 254
    627a:	38 83       	st	Y, r19
    627c:	c8 53       	subi	r28, 0x38	; 56
    627e:	d1 40       	sbci	r29, 0x01	; 1
    6280:	c8 5c       	subi	r28, 0xC8	; 200
    6282:	de 4f       	sbci	r29, 0xFE	; 254
    6284:	88 81       	ld	r24, Y
    6286:	c8 53       	subi	r28, 0x38	; 56
    6288:	d1 40       	sbci	r29, 0x01	; 1
    628a:	88 23       	and	r24, r24
    628c:	21 f6       	brne	.-120    	; 0x6216 <enuDrawChar+0xfc8>
		for(int i = 0 ; i<5;i++){
    628e:	1e a2       	std	Y+38, r1	; 0x26
    6290:	1d a2       	std	Y+37, r1	; 0x25
    6292:	10 c0       	rjmp	.+32     	; 0x62b4 <enuDrawChar+0x1066>
			enuWriteData(y[i]);
    6294:	2d a1       	ldd	r18, Y+37	; 0x25
    6296:	3e a1       	ldd	r19, Y+38	; 0x26
    6298:	ce 01       	movw	r24, r28
    629a:	87 57       	subi	r24, 0x77	; 119
    629c:	9f 4f       	sbci	r25, 0xFF	; 255
    629e:	fc 01       	movw	r30, r24
    62a0:	e2 0f       	add	r30, r18
    62a2:	f3 1f       	adc	r31, r19
    62a4:	80 81       	ld	r24, Z
    62a6:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(u[i]);
		}
		break;
        case 'y': ;
		u8 y[5]={0x0C, 0x50, 0x50, 0x50, 0x3C};
		for(int i = 0 ; i<5;i++){
    62aa:	8d a1       	ldd	r24, Y+37	; 0x25
    62ac:	9e a1       	ldd	r25, Y+38	; 0x26
    62ae:	01 96       	adiw	r24, 0x01	; 1
    62b0:	9e a3       	std	Y+38, r25	; 0x26
    62b2:	8d a3       	std	Y+37, r24	; 0x25
    62b4:	8d a1       	ldd	r24, Y+37	; 0x25
    62b6:	9e a1       	ldd	r25, Y+38	; 0x26
    62b8:	85 30       	cpi	r24, 0x05	; 5
    62ba:	91 05       	cpc	r25, r1
    62bc:	5c f3       	brlt	.-42     	; 0x6294 <enuDrawChar+0x1046>
    62be:	0c 94 f8 38 	jmp	0x71f0	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(y[i]);
		}
		break;
        case 'z': ;
		u8 z[5]={0x44, 0x64, 0x54, 0x4C, 0x44};
    62c2:	ce 01       	movw	r24, r28
    62c4:	82 57       	subi	r24, 0x72	; 114
    62c6:	9f 4f       	sbci	r25, 0xFF	; 255
    62c8:	c7 5c       	subi	r28, 0xC7	; 199
    62ca:	de 4f       	sbci	r29, 0xFE	; 254
    62cc:	99 83       	std	Y+1, r25	; 0x01
    62ce:	88 83       	st	Y, r24
    62d0:	c9 53       	subi	r28, 0x39	; 57
    62d2:	d1 40       	sbci	r29, 0x01	; 1
    62d4:	e6 e2       	ldi	r30, 0x26	; 38
    62d6:	f1 e0       	ldi	r31, 0x01	; 1
    62d8:	c5 5c       	subi	r28, 0xC5	; 197
    62da:	de 4f       	sbci	r29, 0xFE	; 254
    62dc:	f9 83       	std	Y+1, r31	; 0x01
    62de:	e8 83       	st	Y, r30
    62e0:	cb 53       	subi	r28, 0x3B	; 59
    62e2:	d1 40       	sbci	r29, 0x01	; 1
    62e4:	f5 e0       	ldi	r31, 0x05	; 5
    62e6:	c3 5c       	subi	r28, 0xC3	; 195
    62e8:	de 4f       	sbci	r29, 0xFE	; 254
    62ea:	f8 83       	st	Y, r31
    62ec:	cd 53       	subi	r28, 0x3D	; 61
    62ee:	d1 40       	sbci	r29, 0x01	; 1
    62f0:	c5 5c       	subi	r28, 0xC5	; 197
    62f2:	de 4f       	sbci	r29, 0xFE	; 254
    62f4:	e8 81       	ld	r30, Y
    62f6:	f9 81       	ldd	r31, Y+1	; 0x01
    62f8:	cb 53       	subi	r28, 0x3B	; 59
    62fa:	d1 40       	sbci	r29, 0x01	; 1
    62fc:	00 80       	ld	r0, Z
    62fe:	c5 5c       	subi	r28, 0xC5	; 197
    6300:	de 4f       	sbci	r29, 0xFE	; 254
    6302:	28 81       	ld	r18, Y
    6304:	39 81       	ldd	r19, Y+1	; 0x01
    6306:	cb 53       	subi	r28, 0x3B	; 59
    6308:	d1 40       	sbci	r29, 0x01	; 1
    630a:	2f 5f       	subi	r18, 0xFF	; 255
    630c:	3f 4f       	sbci	r19, 0xFF	; 255
    630e:	c5 5c       	subi	r28, 0xC5	; 197
    6310:	de 4f       	sbci	r29, 0xFE	; 254
    6312:	39 83       	std	Y+1, r19	; 0x01
    6314:	28 83       	st	Y, r18
    6316:	cb 53       	subi	r28, 0x3B	; 59
    6318:	d1 40       	sbci	r29, 0x01	; 1
    631a:	c7 5c       	subi	r28, 0xC7	; 199
    631c:	de 4f       	sbci	r29, 0xFE	; 254
    631e:	e8 81       	ld	r30, Y
    6320:	f9 81       	ldd	r31, Y+1	; 0x01
    6322:	c9 53       	subi	r28, 0x39	; 57
    6324:	d1 40       	sbci	r29, 0x01	; 1
    6326:	00 82       	st	Z, r0
    6328:	c7 5c       	subi	r28, 0xC7	; 199
    632a:	de 4f       	sbci	r29, 0xFE	; 254
    632c:	28 81       	ld	r18, Y
    632e:	39 81       	ldd	r19, Y+1	; 0x01
    6330:	c9 53       	subi	r28, 0x39	; 57
    6332:	d1 40       	sbci	r29, 0x01	; 1
    6334:	2f 5f       	subi	r18, 0xFF	; 255
    6336:	3f 4f       	sbci	r19, 0xFF	; 255
    6338:	c7 5c       	subi	r28, 0xC7	; 199
    633a:	de 4f       	sbci	r29, 0xFE	; 254
    633c:	39 83       	std	Y+1, r19	; 0x01
    633e:	28 83       	st	Y, r18
    6340:	c9 53       	subi	r28, 0x39	; 57
    6342:	d1 40       	sbci	r29, 0x01	; 1
    6344:	c3 5c       	subi	r28, 0xC3	; 195
    6346:	de 4f       	sbci	r29, 0xFE	; 254
    6348:	38 81       	ld	r19, Y
    634a:	cd 53       	subi	r28, 0x3D	; 61
    634c:	d1 40       	sbci	r29, 0x01	; 1
    634e:	31 50       	subi	r19, 0x01	; 1
    6350:	c3 5c       	subi	r28, 0xC3	; 195
    6352:	de 4f       	sbci	r29, 0xFE	; 254
    6354:	38 83       	st	Y, r19
    6356:	cd 53       	subi	r28, 0x3D	; 61
    6358:	d1 40       	sbci	r29, 0x01	; 1
    635a:	c3 5c       	subi	r28, 0xC3	; 195
    635c:	de 4f       	sbci	r29, 0xFE	; 254
    635e:	88 81       	ld	r24, Y
    6360:	cd 53       	subi	r28, 0x3D	; 61
    6362:	d1 40       	sbci	r29, 0x01	; 1
    6364:	88 23       	and	r24, r24
    6366:	21 f6       	brne	.-120    	; 0x62f0 <enuDrawChar+0x10a2>
		for(int i = 0 ; i<5;i++){
    6368:	1c a2       	std	Y+36, r1	; 0x24
    636a:	1b a2       	std	Y+35, r1	; 0x23
    636c:	10 c0       	rjmp	.+32     	; 0x638e <enuDrawChar+0x1140>
			enuWriteData(z[i]);
    636e:	2b a1       	ldd	r18, Y+35	; 0x23
    6370:	3c a1       	ldd	r19, Y+36	; 0x24
    6372:	ce 01       	movw	r24, r28
    6374:	82 57       	subi	r24, 0x72	; 114
    6376:	9f 4f       	sbci	r25, 0xFF	; 255
    6378:	fc 01       	movw	r30, r24
    637a:	e2 0f       	add	r30, r18
    637c:	f3 1f       	adc	r31, r19
    637e:	80 81       	ld	r24, Z
    6380:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
			enuWriteData(y[i]);
		}
		break;
        case 'z': ;
		u8 z[5]={0x44, 0x64, 0x54, 0x4C, 0x44};
		for(int i = 0 ; i<5;i++){
    6384:	8b a1       	ldd	r24, Y+35	; 0x23
    6386:	9c a1       	ldd	r25, Y+36	; 0x24
    6388:	01 96       	adiw	r24, 0x01	; 1
    638a:	9c a3       	std	Y+36, r25	; 0x24
    638c:	8b a3       	std	Y+35, r24	; 0x23
    638e:	8b a1       	ldd	r24, Y+35	; 0x23
    6390:	9c a1       	ldd	r25, Y+36	; 0x24
    6392:	85 30       	cpi	r24, 0x05	; 5
    6394:	91 05       	cpc	r25, r1
    6396:	5c f3       	brlt	.-42     	; 0x636e <enuDrawChar+0x1120>
    6398:	2b c7       	rjmp	.+3670   	; 0x71f0 <enuDrawChar+0x1fa2>
			enuWriteData(z[i]);
		}
		break;

        case ' ': ;
        u8 Z12[3]={0x00, 0x00, 0x00};
    639a:	ce 01       	movw	r24, r28
    639c:	8d 56       	subi	r24, 0x6D	; 109
    639e:	9f 4f       	sbci	r25, 0xFF	; 255
    63a0:	c2 5c       	subi	r28, 0xC2	; 194
    63a2:	de 4f       	sbci	r29, 0xFE	; 254
    63a4:	99 83       	std	Y+1, r25	; 0x01
    63a6:	88 83       	st	Y, r24
    63a8:	ce 53       	subi	r28, 0x3E	; 62
    63aa:	d1 40       	sbci	r29, 0x01	; 1
    63ac:	e3 e2       	ldi	r30, 0x23	; 35
    63ae:	f1 e0       	ldi	r31, 0x01	; 1
    63b0:	c0 5c       	subi	r28, 0xC0	; 192
    63b2:	de 4f       	sbci	r29, 0xFE	; 254
    63b4:	f9 83       	std	Y+1, r31	; 0x01
    63b6:	e8 83       	st	Y, r30
    63b8:	c0 54       	subi	r28, 0x40	; 64
    63ba:	d1 40       	sbci	r29, 0x01	; 1
    63bc:	f3 e0       	ldi	r31, 0x03	; 3
    63be:	ce 5b       	subi	r28, 0xBE	; 190
    63c0:	de 4f       	sbci	r29, 0xFE	; 254
    63c2:	f8 83       	st	Y, r31
    63c4:	c2 54       	subi	r28, 0x42	; 66
    63c6:	d1 40       	sbci	r29, 0x01	; 1
    63c8:	c0 5c       	subi	r28, 0xC0	; 192
    63ca:	de 4f       	sbci	r29, 0xFE	; 254
    63cc:	e8 81       	ld	r30, Y
    63ce:	f9 81       	ldd	r31, Y+1	; 0x01
    63d0:	c0 54       	subi	r28, 0x40	; 64
    63d2:	d1 40       	sbci	r29, 0x01	; 1
    63d4:	00 80       	ld	r0, Z
    63d6:	c0 5c       	subi	r28, 0xC0	; 192
    63d8:	de 4f       	sbci	r29, 0xFE	; 254
    63da:	28 81       	ld	r18, Y
    63dc:	39 81       	ldd	r19, Y+1	; 0x01
    63de:	c0 54       	subi	r28, 0x40	; 64
    63e0:	d1 40       	sbci	r29, 0x01	; 1
    63e2:	2f 5f       	subi	r18, 0xFF	; 255
    63e4:	3f 4f       	sbci	r19, 0xFF	; 255
    63e6:	c0 5c       	subi	r28, 0xC0	; 192
    63e8:	de 4f       	sbci	r29, 0xFE	; 254
    63ea:	39 83       	std	Y+1, r19	; 0x01
    63ec:	28 83       	st	Y, r18
    63ee:	c0 54       	subi	r28, 0x40	; 64
    63f0:	d1 40       	sbci	r29, 0x01	; 1
    63f2:	c2 5c       	subi	r28, 0xC2	; 194
    63f4:	de 4f       	sbci	r29, 0xFE	; 254
    63f6:	e8 81       	ld	r30, Y
    63f8:	f9 81       	ldd	r31, Y+1	; 0x01
    63fa:	ce 53       	subi	r28, 0x3E	; 62
    63fc:	d1 40       	sbci	r29, 0x01	; 1
    63fe:	00 82       	st	Z, r0
    6400:	c2 5c       	subi	r28, 0xC2	; 194
    6402:	de 4f       	sbci	r29, 0xFE	; 254
    6404:	28 81       	ld	r18, Y
    6406:	39 81       	ldd	r19, Y+1	; 0x01
    6408:	ce 53       	subi	r28, 0x3E	; 62
    640a:	d1 40       	sbci	r29, 0x01	; 1
    640c:	2f 5f       	subi	r18, 0xFF	; 255
    640e:	3f 4f       	sbci	r19, 0xFF	; 255
    6410:	c2 5c       	subi	r28, 0xC2	; 194
    6412:	de 4f       	sbci	r29, 0xFE	; 254
    6414:	39 83       	std	Y+1, r19	; 0x01
    6416:	28 83       	st	Y, r18
    6418:	ce 53       	subi	r28, 0x3E	; 62
    641a:	d1 40       	sbci	r29, 0x01	; 1
    641c:	ce 5b       	subi	r28, 0xBE	; 190
    641e:	de 4f       	sbci	r29, 0xFE	; 254
    6420:	38 81       	ld	r19, Y
    6422:	c2 54       	subi	r28, 0x42	; 66
    6424:	d1 40       	sbci	r29, 0x01	; 1
    6426:	31 50       	subi	r19, 0x01	; 1
    6428:	ce 5b       	subi	r28, 0xBE	; 190
    642a:	de 4f       	sbci	r29, 0xFE	; 254
    642c:	38 83       	st	Y, r19
    642e:	c2 54       	subi	r28, 0x42	; 66
    6430:	d1 40       	sbci	r29, 0x01	; 1
    6432:	ce 5b       	subi	r28, 0xBE	; 190
    6434:	de 4f       	sbci	r29, 0xFE	; 254
    6436:	88 81       	ld	r24, Y
    6438:	c2 54       	subi	r28, 0x42	; 66
    643a:	d1 40       	sbci	r29, 0x01	; 1
    643c:	88 23       	and	r24, r24
    643e:	21 f6       	brne	.-120    	; 0x63c8 <enuDrawChar+0x117a>
        for(int i = 0 ; i<5;i++){
    6440:	1a a2       	std	Y+34, r1	; 0x22
    6442:	19 a2       	std	Y+33, r1	; 0x21
    6444:	10 c0       	rjmp	.+32     	; 0x6466 <enuDrawChar+0x1218>
            enuWriteData(Z12[i]);
    6446:	29 a1       	ldd	r18, Y+33	; 0x21
    6448:	3a a1       	ldd	r19, Y+34	; 0x22
    644a:	ce 01       	movw	r24, r28
    644c:	8d 56       	subi	r24, 0x6D	; 109
    644e:	9f 4f       	sbci	r25, 0xFF	; 255
    6450:	fc 01       	movw	r30, r24
    6452:	e2 0f       	add	r30, r18
    6454:	f3 1f       	adc	r31, r19
    6456:	80 81       	ld	r24, Z
    6458:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
		}
		break;

        case ' ': ;
        u8 Z12[3]={0x00, 0x00, 0x00};
        for(int i = 0 ; i<5;i++){
    645c:	89 a1       	ldd	r24, Y+33	; 0x21
    645e:	9a a1       	ldd	r25, Y+34	; 0x22
    6460:	01 96       	adiw	r24, 0x01	; 1
    6462:	9a a3       	std	Y+34, r25	; 0x22
    6464:	89 a3       	std	Y+33, r24	; 0x21
    6466:	89 a1       	ldd	r24, Y+33	; 0x21
    6468:	9a a1       	ldd	r25, Y+34	; 0x22
    646a:	85 30       	cpi	r24, 0x05	; 5
    646c:	91 05       	cpc	r25, r1
    646e:	5c f3       	brlt	.-42     	; 0x6446 <enuDrawChar+0x11f8>
    6470:	bf c6       	rjmp	.+3454   	; 0x71f0 <enuDrawChar+0x1fa2>
            enuWriteData(Z12[i]);
        }
        break;

        case '=': ;
    	u8 Z11[3]={0x14, 0x14, 0x14,0x14};
    6472:	ce 01       	movw	r24, r28
    6474:	8a 56       	subi	r24, 0x6A	; 106
    6476:	9f 4f       	sbci	r25, 0xFF	; 255
    6478:	cd 5b       	subi	r28, 0xBD	; 189
    647a:	de 4f       	sbci	r29, 0xFE	; 254
    647c:	99 83       	std	Y+1, r25	; 0x01
    647e:	88 83       	st	Y, r24
    6480:	c3 54       	subi	r28, 0x43	; 67
    6482:	d1 40       	sbci	r29, 0x01	; 1
    6484:	e0 e2       	ldi	r30, 0x20	; 32
    6486:	f1 e0       	ldi	r31, 0x01	; 1
    6488:	cb 5b       	subi	r28, 0xBB	; 187
    648a:	de 4f       	sbci	r29, 0xFE	; 254
    648c:	f9 83       	std	Y+1, r31	; 0x01
    648e:	e8 83       	st	Y, r30
    6490:	c5 54       	subi	r28, 0x45	; 69
    6492:	d1 40       	sbci	r29, 0x01	; 1
    6494:	f3 e0       	ldi	r31, 0x03	; 3
    6496:	c9 5b       	subi	r28, 0xB9	; 185
    6498:	de 4f       	sbci	r29, 0xFE	; 254
    649a:	f8 83       	st	Y, r31
    649c:	c7 54       	subi	r28, 0x47	; 71
    649e:	d1 40       	sbci	r29, 0x01	; 1
    64a0:	cb 5b       	subi	r28, 0xBB	; 187
    64a2:	de 4f       	sbci	r29, 0xFE	; 254
    64a4:	e8 81       	ld	r30, Y
    64a6:	f9 81       	ldd	r31, Y+1	; 0x01
    64a8:	c5 54       	subi	r28, 0x45	; 69
    64aa:	d1 40       	sbci	r29, 0x01	; 1
    64ac:	00 80       	ld	r0, Z
    64ae:	cb 5b       	subi	r28, 0xBB	; 187
    64b0:	de 4f       	sbci	r29, 0xFE	; 254
    64b2:	28 81       	ld	r18, Y
    64b4:	39 81       	ldd	r19, Y+1	; 0x01
    64b6:	c5 54       	subi	r28, 0x45	; 69
    64b8:	d1 40       	sbci	r29, 0x01	; 1
    64ba:	2f 5f       	subi	r18, 0xFF	; 255
    64bc:	3f 4f       	sbci	r19, 0xFF	; 255
    64be:	cb 5b       	subi	r28, 0xBB	; 187
    64c0:	de 4f       	sbci	r29, 0xFE	; 254
    64c2:	39 83       	std	Y+1, r19	; 0x01
    64c4:	28 83       	st	Y, r18
    64c6:	c5 54       	subi	r28, 0x45	; 69
    64c8:	d1 40       	sbci	r29, 0x01	; 1
    64ca:	cd 5b       	subi	r28, 0xBD	; 189
    64cc:	de 4f       	sbci	r29, 0xFE	; 254
    64ce:	e8 81       	ld	r30, Y
    64d0:	f9 81       	ldd	r31, Y+1	; 0x01
    64d2:	c3 54       	subi	r28, 0x43	; 67
    64d4:	d1 40       	sbci	r29, 0x01	; 1
    64d6:	00 82       	st	Z, r0
    64d8:	cd 5b       	subi	r28, 0xBD	; 189
    64da:	de 4f       	sbci	r29, 0xFE	; 254
    64dc:	28 81       	ld	r18, Y
    64de:	39 81       	ldd	r19, Y+1	; 0x01
    64e0:	c3 54       	subi	r28, 0x43	; 67
    64e2:	d1 40       	sbci	r29, 0x01	; 1
    64e4:	2f 5f       	subi	r18, 0xFF	; 255
    64e6:	3f 4f       	sbci	r19, 0xFF	; 255
    64e8:	cd 5b       	subi	r28, 0xBD	; 189
    64ea:	de 4f       	sbci	r29, 0xFE	; 254
    64ec:	39 83       	std	Y+1, r19	; 0x01
    64ee:	28 83       	st	Y, r18
    64f0:	c3 54       	subi	r28, 0x43	; 67
    64f2:	d1 40       	sbci	r29, 0x01	; 1
    64f4:	c9 5b       	subi	r28, 0xB9	; 185
    64f6:	de 4f       	sbci	r29, 0xFE	; 254
    64f8:	38 81       	ld	r19, Y
    64fa:	c7 54       	subi	r28, 0x47	; 71
    64fc:	d1 40       	sbci	r29, 0x01	; 1
    64fe:	31 50       	subi	r19, 0x01	; 1
    6500:	c9 5b       	subi	r28, 0xB9	; 185
    6502:	de 4f       	sbci	r29, 0xFE	; 254
    6504:	38 83       	st	Y, r19
    6506:	c7 54       	subi	r28, 0x47	; 71
    6508:	d1 40       	sbci	r29, 0x01	; 1
    650a:	c9 5b       	subi	r28, 0xB9	; 185
    650c:	de 4f       	sbci	r29, 0xFE	; 254
    650e:	88 81       	ld	r24, Y
    6510:	c7 54       	subi	r28, 0x47	; 71
    6512:	d1 40       	sbci	r29, 0x01	; 1
    6514:	88 23       	and	r24, r24
    6516:	21 f6       	brne	.-120    	; 0x64a0 <enuDrawChar+0x1252>
    	for(int i = 0 ; i<5;i++){
    6518:	18 a2       	std	Y+32, r1	; 0x20
    651a:	1f 8e       	std	Y+31, r1	; 0x1f
    651c:	10 c0       	rjmp	.+32     	; 0x653e <enuDrawChar+0x12f0>
    		enuWriteData(Z11[i]);
    651e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    6520:	38 a1       	ldd	r19, Y+32	; 0x20
    6522:	ce 01       	movw	r24, r28
    6524:	8a 56       	subi	r24, 0x6A	; 106
    6526:	9f 4f       	sbci	r25, 0xFF	; 255
    6528:	fc 01       	movw	r30, r24
    652a:	e2 0f       	add	r30, r18
    652c:	f3 1f       	adc	r31, r19
    652e:	80 81       	ld	r24, Z
    6530:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
        }
        break;

        case '=': ;
    	u8 Z11[3]={0x14, 0x14, 0x14,0x14};
    	for(int i = 0 ; i<5;i++){
    6534:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6536:	98 a1       	ldd	r25, Y+32	; 0x20
    6538:	01 96       	adiw	r24, 0x01	; 1
    653a:	98 a3       	std	Y+32, r25	; 0x20
    653c:	8f 8f       	std	Y+31, r24	; 0x1f
    653e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6540:	98 a1       	ldd	r25, Y+32	; 0x20
    6542:	85 30       	cpi	r24, 0x05	; 5
    6544:	91 05       	cpc	r25, r1
    6546:	5c f3       	brlt	.-42     	; 0x651e <enuDrawChar+0x12d0>
    6548:	53 c6       	rjmp	.+3238   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z11[i]);
    	}
    	break;
        case '0': ;
    	u8 Z0[5]={0x3E, 0x51, 0x49, 0x45, 0x3E};
    654a:	ce 01       	movw	r24, r28
    654c:	87 56       	subi	r24, 0x67	; 103
    654e:	9f 4f       	sbci	r25, 0xFF	; 255
    6550:	c8 5b       	subi	r28, 0xB8	; 184
    6552:	de 4f       	sbci	r29, 0xFE	; 254
    6554:	99 83       	std	Y+1, r25	; 0x01
    6556:	88 83       	st	Y, r24
    6558:	c8 54       	subi	r28, 0x48	; 72
    655a:	d1 40       	sbci	r29, 0x01	; 1
    655c:	eb e1       	ldi	r30, 0x1B	; 27
    655e:	f1 e0       	ldi	r31, 0x01	; 1
    6560:	c6 5b       	subi	r28, 0xB6	; 182
    6562:	de 4f       	sbci	r29, 0xFE	; 254
    6564:	f9 83       	std	Y+1, r31	; 0x01
    6566:	e8 83       	st	Y, r30
    6568:	ca 54       	subi	r28, 0x4A	; 74
    656a:	d1 40       	sbci	r29, 0x01	; 1
    656c:	f5 e0       	ldi	r31, 0x05	; 5
    656e:	c4 5b       	subi	r28, 0xB4	; 180
    6570:	de 4f       	sbci	r29, 0xFE	; 254
    6572:	f8 83       	st	Y, r31
    6574:	cc 54       	subi	r28, 0x4C	; 76
    6576:	d1 40       	sbci	r29, 0x01	; 1
    6578:	c6 5b       	subi	r28, 0xB6	; 182
    657a:	de 4f       	sbci	r29, 0xFE	; 254
    657c:	e8 81       	ld	r30, Y
    657e:	f9 81       	ldd	r31, Y+1	; 0x01
    6580:	ca 54       	subi	r28, 0x4A	; 74
    6582:	d1 40       	sbci	r29, 0x01	; 1
    6584:	00 80       	ld	r0, Z
    6586:	c6 5b       	subi	r28, 0xB6	; 182
    6588:	de 4f       	sbci	r29, 0xFE	; 254
    658a:	28 81       	ld	r18, Y
    658c:	39 81       	ldd	r19, Y+1	; 0x01
    658e:	ca 54       	subi	r28, 0x4A	; 74
    6590:	d1 40       	sbci	r29, 0x01	; 1
    6592:	2f 5f       	subi	r18, 0xFF	; 255
    6594:	3f 4f       	sbci	r19, 0xFF	; 255
    6596:	c6 5b       	subi	r28, 0xB6	; 182
    6598:	de 4f       	sbci	r29, 0xFE	; 254
    659a:	39 83       	std	Y+1, r19	; 0x01
    659c:	28 83       	st	Y, r18
    659e:	ca 54       	subi	r28, 0x4A	; 74
    65a0:	d1 40       	sbci	r29, 0x01	; 1
    65a2:	c8 5b       	subi	r28, 0xB8	; 184
    65a4:	de 4f       	sbci	r29, 0xFE	; 254
    65a6:	e8 81       	ld	r30, Y
    65a8:	f9 81       	ldd	r31, Y+1	; 0x01
    65aa:	c8 54       	subi	r28, 0x48	; 72
    65ac:	d1 40       	sbci	r29, 0x01	; 1
    65ae:	00 82       	st	Z, r0
    65b0:	c8 5b       	subi	r28, 0xB8	; 184
    65b2:	de 4f       	sbci	r29, 0xFE	; 254
    65b4:	28 81       	ld	r18, Y
    65b6:	39 81       	ldd	r19, Y+1	; 0x01
    65b8:	c8 54       	subi	r28, 0x48	; 72
    65ba:	d1 40       	sbci	r29, 0x01	; 1
    65bc:	2f 5f       	subi	r18, 0xFF	; 255
    65be:	3f 4f       	sbci	r19, 0xFF	; 255
    65c0:	c8 5b       	subi	r28, 0xB8	; 184
    65c2:	de 4f       	sbci	r29, 0xFE	; 254
    65c4:	39 83       	std	Y+1, r19	; 0x01
    65c6:	28 83       	st	Y, r18
    65c8:	c8 54       	subi	r28, 0x48	; 72
    65ca:	d1 40       	sbci	r29, 0x01	; 1
    65cc:	c4 5b       	subi	r28, 0xB4	; 180
    65ce:	de 4f       	sbci	r29, 0xFE	; 254
    65d0:	38 81       	ld	r19, Y
    65d2:	cc 54       	subi	r28, 0x4C	; 76
    65d4:	d1 40       	sbci	r29, 0x01	; 1
    65d6:	31 50       	subi	r19, 0x01	; 1
    65d8:	c4 5b       	subi	r28, 0xB4	; 180
    65da:	de 4f       	sbci	r29, 0xFE	; 254
    65dc:	38 83       	st	Y, r19
    65de:	cc 54       	subi	r28, 0x4C	; 76
    65e0:	d1 40       	sbci	r29, 0x01	; 1
    65e2:	c4 5b       	subi	r28, 0xB4	; 180
    65e4:	de 4f       	sbci	r29, 0xFE	; 254
    65e6:	88 81       	ld	r24, Y
    65e8:	cc 54       	subi	r28, 0x4C	; 76
    65ea:	d1 40       	sbci	r29, 0x01	; 1
    65ec:	88 23       	and	r24, r24
    65ee:	21 f6       	brne	.-120    	; 0x6578 <enuDrawChar+0x132a>
    	for(int i = 0 ; i<5;i++){
    65f0:	1e 8e       	std	Y+30, r1	; 0x1e
    65f2:	1d 8e       	std	Y+29, r1	; 0x1d
    65f4:	10 c0       	rjmp	.+32     	; 0x6616 <enuDrawChar+0x13c8>
    		enuWriteData(Z0[i]);
    65f6:	2d 8d       	ldd	r18, Y+29	; 0x1d
    65f8:	3e 8d       	ldd	r19, Y+30	; 0x1e
    65fa:	ce 01       	movw	r24, r28
    65fc:	87 56       	subi	r24, 0x67	; 103
    65fe:	9f 4f       	sbci	r25, 0xFF	; 255
    6600:	fc 01       	movw	r30, r24
    6602:	e2 0f       	add	r30, r18
    6604:	f3 1f       	adc	r31, r19
    6606:	80 81       	ld	r24, Z
    6608:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    		enuWriteData(Z11[i]);
    	}
    	break;
        case '0': ;
    	u8 Z0[5]={0x3E, 0x51, 0x49, 0x45, 0x3E};
    	for(int i = 0 ; i<5;i++){
    660c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    660e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6610:	01 96       	adiw	r24, 0x01	; 1
    6612:	9e 8f       	std	Y+30, r25	; 0x1e
    6614:	8d 8f       	std	Y+29, r24	; 0x1d
    6616:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6618:	9e 8d       	ldd	r25, Y+30	; 0x1e
    661a:	85 30       	cpi	r24, 0x05	; 5
    661c:	91 05       	cpc	r25, r1
    661e:	5c f3       	brlt	.-42     	; 0x65f6 <enuDrawChar+0x13a8>
    6620:	e7 c5       	rjmp	.+3022   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z0[i]);
    	}
    	break;
        case '1': ;
    	u8 Z1[5]={0x04, 0x02, 0x7F, 0x00, 0x00};
    6622:	ce 01       	movw	r24, r28
    6624:	82 56       	subi	r24, 0x62	; 98
    6626:	9f 4f       	sbci	r25, 0xFF	; 255
    6628:	c3 5b       	subi	r28, 0xB3	; 179
    662a:	de 4f       	sbci	r29, 0xFE	; 254
    662c:	99 83       	std	Y+1, r25	; 0x01
    662e:	88 83       	st	Y, r24
    6630:	cd 54       	subi	r28, 0x4D	; 77
    6632:	d1 40       	sbci	r29, 0x01	; 1
    6634:	e6 e1       	ldi	r30, 0x16	; 22
    6636:	f1 e0       	ldi	r31, 0x01	; 1
    6638:	c1 5b       	subi	r28, 0xB1	; 177
    663a:	de 4f       	sbci	r29, 0xFE	; 254
    663c:	f9 83       	std	Y+1, r31	; 0x01
    663e:	e8 83       	st	Y, r30
    6640:	cf 54       	subi	r28, 0x4F	; 79
    6642:	d1 40       	sbci	r29, 0x01	; 1
    6644:	f5 e0       	ldi	r31, 0x05	; 5
    6646:	cf 5a       	subi	r28, 0xAF	; 175
    6648:	de 4f       	sbci	r29, 0xFE	; 254
    664a:	f8 83       	st	Y, r31
    664c:	c1 55       	subi	r28, 0x51	; 81
    664e:	d1 40       	sbci	r29, 0x01	; 1
    6650:	c1 5b       	subi	r28, 0xB1	; 177
    6652:	de 4f       	sbci	r29, 0xFE	; 254
    6654:	e8 81       	ld	r30, Y
    6656:	f9 81       	ldd	r31, Y+1	; 0x01
    6658:	cf 54       	subi	r28, 0x4F	; 79
    665a:	d1 40       	sbci	r29, 0x01	; 1
    665c:	00 80       	ld	r0, Z
    665e:	c1 5b       	subi	r28, 0xB1	; 177
    6660:	de 4f       	sbci	r29, 0xFE	; 254
    6662:	28 81       	ld	r18, Y
    6664:	39 81       	ldd	r19, Y+1	; 0x01
    6666:	cf 54       	subi	r28, 0x4F	; 79
    6668:	d1 40       	sbci	r29, 0x01	; 1
    666a:	2f 5f       	subi	r18, 0xFF	; 255
    666c:	3f 4f       	sbci	r19, 0xFF	; 255
    666e:	c1 5b       	subi	r28, 0xB1	; 177
    6670:	de 4f       	sbci	r29, 0xFE	; 254
    6672:	39 83       	std	Y+1, r19	; 0x01
    6674:	28 83       	st	Y, r18
    6676:	cf 54       	subi	r28, 0x4F	; 79
    6678:	d1 40       	sbci	r29, 0x01	; 1
    667a:	c3 5b       	subi	r28, 0xB3	; 179
    667c:	de 4f       	sbci	r29, 0xFE	; 254
    667e:	e8 81       	ld	r30, Y
    6680:	f9 81       	ldd	r31, Y+1	; 0x01
    6682:	cd 54       	subi	r28, 0x4D	; 77
    6684:	d1 40       	sbci	r29, 0x01	; 1
    6686:	00 82       	st	Z, r0
    6688:	c3 5b       	subi	r28, 0xB3	; 179
    668a:	de 4f       	sbci	r29, 0xFE	; 254
    668c:	28 81       	ld	r18, Y
    668e:	39 81       	ldd	r19, Y+1	; 0x01
    6690:	cd 54       	subi	r28, 0x4D	; 77
    6692:	d1 40       	sbci	r29, 0x01	; 1
    6694:	2f 5f       	subi	r18, 0xFF	; 255
    6696:	3f 4f       	sbci	r19, 0xFF	; 255
    6698:	c3 5b       	subi	r28, 0xB3	; 179
    669a:	de 4f       	sbci	r29, 0xFE	; 254
    669c:	39 83       	std	Y+1, r19	; 0x01
    669e:	28 83       	st	Y, r18
    66a0:	cd 54       	subi	r28, 0x4D	; 77
    66a2:	d1 40       	sbci	r29, 0x01	; 1
    66a4:	cf 5a       	subi	r28, 0xAF	; 175
    66a6:	de 4f       	sbci	r29, 0xFE	; 254
    66a8:	38 81       	ld	r19, Y
    66aa:	c1 55       	subi	r28, 0x51	; 81
    66ac:	d1 40       	sbci	r29, 0x01	; 1
    66ae:	31 50       	subi	r19, 0x01	; 1
    66b0:	cf 5a       	subi	r28, 0xAF	; 175
    66b2:	de 4f       	sbci	r29, 0xFE	; 254
    66b4:	38 83       	st	Y, r19
    66b6:	c1 55       	subi	r28, 0x51	; 81
    66b8:	d1 40       	sbci	r29, 0x01	; 1
    66ba:	cf 5a       	subi	r28, 0xAF	; 175
    66bc:	de 4f       	sbci	r29, 0xFE	; 254
    66be:	88 81       	ld	r24, Y
    66c0:	c1 55       	subi	r28, 0x51	; 81
    66c2:	d1 40       	sbci	r29, 0x01	; 1
    66c4:	88 23       	and	r24, r24
    66c6:	21 f6       	brne	.-120    	; 0x6650 <enuDrawChar+0x1402>
    	for(int i = 0 ; i<5;i++){
    66c8:	1c 8e       	std	Y+28, r1	; 0x1c
    66ca:	1b 8e       	std	Y+27, r1	; 0x1b
    66cc:	10 c0       	rjmp	.+32     	; 0x66ee <enuDrawChar+0x14a0>
    		enuWriteData(Z1[i]);
    66ce:	2b 8d       	ldd	r18, Y+27	; 0x1b
    66d0:	3c 8d       	ldd	r19, Y+28	; 0x1c
    66d2:	ce 01       	movw	r24, r28
    66d4:	82 56       	subi	r24, 0x62	; 98
    66d6:	9f 4f       	sbci	r25, 0xFF	; 255
    66d8:	fc 01       	movw	r30, r24
    66da:	e2 0f       	add	r30, r18
    66dc:	f3 1f       	adc	r31, r19
    66de:	80 81       	ld	r24, Z
    66e0:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    		enuWriteData(Z0[i]);
    	}
    	break;
        case '1': ;
    	u8 Z1[5]={0x04, 0x02, 0x7F, 0x00, 0x00};
    	for(int i = 0 ; i<5;i++){
    66e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    66e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    66e8:	01 96       	adiw	r24, 0x01	; 1
    66ea:	9c 8f       	std	Y+28, r25	; 0x1c
    66ec:	8b 8f       	std	Y+27, r24	; 0x1b
    66ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    66f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    66f2:	85 30       	cpi	r24, 0x05	; 5
    66f4:	91 05       	cpc	r25, r1
    66f6:	5c f3       	brlt	.-42     	; 0x66ce <enuDrawChar+0x1480>
    66f8:	7b c5       	rjmp	.+2806   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z1[i]);
    	}
    	break;

        case '2': ;
    	u8 Z2[5]={0x42, 0x61, 0x51, 0x49, 0x46};
    66fa:	ce 01       	movw	r24, r28
    66fc:	8d 55       	subi	r24, 0x5D	; 93
    66fe:	9f 4f       	sbci	r25, 0xFF	; 255
    6700:	ce 5a       	subi	r28, 0xAE	; 174
    6702:	de 4f       	sbci	r29, 0xFE	; 254
    6704:	99 83       	std	Y+1, r25	; 0x01
    6706:	88 83       	st	Y, r24
    6708:	c2 55       	subi	r28, 0x52	; 82
    670a:	d1 40       	sbci	r29, 0x01	; 1
    670c:	e1 e1       	ldi	r30, 0x11	; 17
    670e:	f1 e0       	ldi	r31, 0x01	; 1
    6710:	cc 5a       	subi	r28, 0xAC	; 172
    6712:	de 4f       	sbci	r29, 0xFE	; 254
    6714:	f9 83       	std	Y+1, r31	; 0x01
    6716:	e8 83       	st	Y, r30
    6718:	c4 55       	subi	r28, 0x54	; 84
    671a:	d1 40       	sbci	r29, 0x01	; 1
    671c:	f5 e0       	ldi	r31, 0x05	; 5
    671e:	ca 5a       	subi	r28, 0xAA	; 170
    6720:	de 4f       	sbci	r29, 0xFE	; 254
    6722:	f8 83       	st	Y, r31
    6724:	c6 55       	subi	r28, 0x56	; 86
    6726:	d1 40       	sbci	r29, 0x01	; 1
    6728:	cc 5a       	subi	r28, 0xAC	; 172
    672a:	de 4f       	sbci	r29, 0xFE	; 254
    672c:	e8 81       	ld	r30, Y
    672e:	f9 81       	ldd	r31, Y+1	; 0x01
    6730:	c4 55       	subi	r28, 0x54	; 84
    6732:	d1 40       	sbci	r29, 0x01	; 1
    6734:	00 80       	ld	r0, Z
    6736:	cc 5a       	subi	r28, 0xAC	; 172
    6738:	de 4f       	sbci	r29, 0xFE	; 254
    673a:	28 81       	ld	r18, Y
    673c:	39 81       	ldd	r19, Y+1	; 0x01
    673e:	c4 55       	subi	r28, 0x54	; 84
    6740:	d1 40       	sbci	r29, 0x01	; 1
    6742:	2f 5f       	subi	r18, 0xFF	; 255
    6744:	3f 4f       	sbci	r19, 0xFF	; 255
    6746:	cc 5a       	subi	r28, 0xAC	; 172
    6748:	de 4f       	sbci	r29, 0xFE	; 254
    674a:	39 83       	std	Y+1, r19	; 0x01
    674c:	28 83       	st	Y, r18
    674e:	c4 55       	subi	r28, 0x54	; 84
    6750:	d1 40       	sbci	r29, 0x01	; 1
    6752:	ce 5a       	subi	r28, 0xAE	; 174
    6754:	de 4f       	sbci	r29, 0xFE	; 254
    6756:	e8 81       	ld	r30, Y
    6758:	f9 81       	ldd	r31, Y+1	; 0x01
    675a:	c2 55       	subi	r28, 0x52	; 82
    675c:	d1 40       	sbci	r29, 0x01	; 1
    675e:	00 82       	st	Z, r0
    6760:	ce 5a       	subi	r28, 0xAE	; 174
    6762:	de 4f       	sbci	r29, 0xFE	; 254
    6764:	28 81       	ld	r18, Y
    6766:	39 81       	ldd	r19, Y+1	; 0x01
    6768:	c2 55       	subi	r28, 0x52	; 82
    676a:	d1 40       	sbci	r29, 0x01	; 1
    676c:	2f 5f       	subi	r18, 0xFF	; 255
    676e:	3f 4f       	sbci	r19, 0xFF	; 255
    6770:	ce 5a       	subi	r28, 0xAE	; 174
    6772:	de 4f       	sbci	r29, 0xFE	; 254
    6774:	39 83       	std	Y+1, r19	; 0x01
    6776:	28 83       	st	Y, r18
    6778:	c2 55       	subi	r28, 0x52	; 82
    677a:	d1 40       	sbci	r29, 0x01	; 1
    677c:	ca 5a       	subi	r28, 0xAA	; 170
    677e:	de 4f       	sbci	r29, 0xFE	; 254
    6780:	38 81       	ld	r19, Y
    6782:	c6 55       	subi	r28, 0x56	; 86
    6784:	d1 40       	sbci	r29, 0x01	; 1
    6786:	31 50       	subi	r19, 0x01	; 1
    6788:	ca 5a       	subi	r28, 0xAA	; 170
    678a:	de 4f       	sbci	r29, 0xFE	; 254
    678c:	38 83       	st	Y, r19
    678e:	c6 55       	subi	r28, 0x56	; 86
    6790:	d1 40       	sbci	r29, 0x01	; 1
    6792:	ca 5a       	subi	r28, 0xAA	; 170
    6794:	de 4f       	sbci	r29, 0xFE	; 254
    6796:	88 81       	ld	r24, Y
    6798:	c6 55       	subi	r28, 0x56	; 86
    679a:	d1 40       	sbci	r29, 0x01	; 1
    679c:	88 23       	and	r24, r24
    679e:	21 f6       	brne	.-120    	; 0x6728 <enuDrawChar+0x14da>
    	for(int i = 0 ; i<5;i++){
    67a0:	1a 8e       	std	Y+26, r1	; 0x1a
    67a2:	19 8e       	std	Y+25, r1	; 0x19
    67a4:	10 c0       	rjmp	.+32     	; 0x67c6 <enuDrawChar+0x1578>
    		enuWriteData(Z2[i]);
    67a6:	29 8d       	ldd	r18, Y+25	; 0x19
    67a8:	3a 8d       	ldd	r19, Y+26	; 0x1a
    67aa:	ce 01       	movw	r24, r28
    67ac:	8d 55       	subi	r24, 0x5D	; 93
    67ae:	9f 4f       	sbci	r25, 0xFF	; 255
    67b0:	fc 01       	movw	r30, r24
    67b2:	e2 0f       	add	r30, r18
    67b4:	f3 1f       	adc	r31, r19
    67b6:	80 81       	ld	r24, Z
    67b8:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    	}
    	break;

        case '2': ;
    	u8 Z2[5]={0x42, 0x61, 0x51, 0x49, 0x46};
    	for(int i = 0 ; i<5;i++){
    67bc:	89 8d       	ldd	r24, Y+25	; 0x19
    67be:	9a 8d       	ldd	r25, Y+26	; 0x1a
    67c0:	01 96       	adiw	r24, 0x01	; 1
    67c2:	9a 8f       	std	Y+26, r25	; 0x1a
    67c4:	89 8f       	std	Y+25, r24	; 0x19
    67c6:	89 8d       	ldd	r24, Y+25	; 0x19
    67c8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    67ca:	85 30       	cpi	r24, 0x05	; 5
    67cc:	91 05       	cpc	r25, r1
    67ce:	5c f3       	brlt	.-42     	; 0x67a6 <enuDrawChar+0x1558>
    67d0:	0f c5       	rjmp	.+2590   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z2[i]);
    	}
    	break;
        case '3': ;
    	u8 Z3[5]={0x22, 0x41, 0x49, 0x49, 0x36};
    67d2:	ce 01       	movw	r24, r28
    67d4:	88 55       	subi	r24, 0x58	; 88
    67d6:	9f 4f       	sbci	r25, 0xFF	; 255
    67d8:	c9 5a       	subi	r28, 0xA9	; 169
    67da:	de 4f       	sbci	r29, 0xFE	; 254
    67dc:	99 83       	std	Y+1, r25	; 0x01
    67de:	88 83       	st	Y, r24
    67e0:	c7 55       	subi	r28, 0x57	; 87
    67e2:	d1 40       	sbci	r29, 0x01	; 1
    67e4:	ec e0       	ldi	r30, 0x0C	; 12
    67e6:	f1 e0       	ldi	r31, 0x01	; 1
    67e8:	c7 5a       	subi	r28, 0xA7	; 167
    67ea:	de 4f       	sbci	r29, 0xFE	; 254
    67ec:	f9 83       	std	Y+1, r31	; 0x01
    67ee:	e8 83       	st	Y, r30
    67f0:	c9 55       	subi	r28, 0x59	; 89
    67f2:	d1 40       	sbci	r29, 0x01	; 1
    67f4:	f5 e0       	ldi	r31, 0x05	; 5
    67f6:	c5 5a       	subi	r28, 0xA5	; 165
    67f8:	de 4f       	sbci	r29, 0xFE	; 254
    67fa:	f8 83       	st	Y, r31
    67fc:	cb 55       	subi	r28, 0x5B	; 91
    67fe:	d1 40       	sbci	r29, 0x01	; 1
    6800:	c7 5a       	subi	r28, 0xA7	; 167
    6802:	de 4f       	sbci	r29, 0xFE	; 254
    6804:	e8 81       	ld	r30, Y
    6806:	f9 81       	ldd	r31, Y+1	; 0x01
    6808:	c9 55       	subi	r28, 0x59	; 89
    680a:	d1 40       	sbci	r29, 0x01	; 1
    680c:	00 80       	ld	r0, Z
    680e:	c7 5a       	subi	r28, 0xA7	; 167
    6810:	de 4f       	sbci	r29, 0xFE	; 254
    6812:	28 81       	ld	r18, Y
    6814:	39 81       	ldd	r19, Y+1	; 0x01
    6816:	c9 55       	subi	r28, 0x59	; 89
    6818:	d1 40       	sbci	r29, 0x01	; 1
    681a:	2f 5f       	subi	r18, 0xFF	; 255
    681c:	3f 4f       	sbci	r19, 0xFF	; 255
    681e:	c7 5a       	subi	r28, 0xA7	; 167
    6820:	de 4f       	sbci	r29, 0xFE	; 254
    6822:	39 83       	std	Y+1, r19	; 0x01
    6824:	28 83       	st	Y, r18
    6826:	c9 55       	subi	r28, 0x59	; 89
    6828:	d1 40       	sbci	r29, 0x01	; 1
    682a:	c9 5a       	subi	r28, 0xA9	; 169
    682c:	de 4f       	sbci	r29, 0xFE	; 254
    682e:	e8 81       	ld	r30, Y
    6830:	f9 81       	ldd	r31, Y+1	; 0x01
    6832:	c7 55       	subi	r28, 0x57	; 87
    6834:	d1 40       	sbci	r29, 0x01	; 1
    6836:	00 82       	st	Z, r0
    6838:	c9 5a       	subi	r28, 0xA9	; 169
    683a:	de 4f       	sbci	r29, 0xFE	; 254
    683c:	28 81       	ld	r18, Y
    683e:	39 81       	ldd	r19, Y+1	; 0x01
    6840:	c7 55       	subi	r28, 0x57	; 87
    6842:	d1 40       	sbci	r29, 0x01	; 1
    6844:	2f 5f       	subi	r18, 0xFF	; 255
    6846:	3f 4f       	sbci	r19, 0xFF	; 255
    6848:	c9 5a       	subi	r28, 0xA9	; 169
    684a:	de 4f       	sbci	r29, 0xFE	; 254
    684c:	39 83       	std	Y+1, r19	; 0x01
    684e:	28 83       	st	Y, r18
    6850:	c7 55       	subi	r28, 0x57	; 87
    6852:	d1 40       	sbci	r29, 0x01	; 1
    6854:	c5 5a       	subi	r28, 0xA5	; 165
    6856:	de 4f       	sbci	r29, 0xFE	; 254
    6858:	38 81       	ld	r19, Y
    685a:	cb 55       	subi	r28, 0x5B	; 91
    685c:	d1 40       	sbci	r29, 0x01	; 1
    685e:	31 50       	subi	r19, 0x01	; 1
    6860:	c5 5a       	subi	r28, 0xA5	; 165
    6862:	de 4f       	sbci	r29, 0xFE	; 254
    6864:	38 83       	st	Y, r19
    6866:	cb 55       	subi	r28, 0x5B	; 91
    6868:	d1 40       	sbci	r29, 0x01	; 1
    686a:	c5 5a       	subi	r28, 0xA5	; 165
    686c:	de 4f       	sbci	r29, 0xFE	; 254
    686e:	88 81       	ld	r24, Y
    6870:	cb 55       	subi	r28, 0x5B	; 91
    6872:	d1 40       	sbci	r29, 0x01	; 1
    6874:	88 23       	and	r24, r24
    6876:	21 f6       	brne	.-120    	; 0x6800 <enuDrawChar+0x15b2>
    	for(int i = 0 ; i<5;i++){
    6878:	18 8e       	std	Y+24, r1	; 0x18
    687a:	1f 8a       	std	Y+23, r1	; 0x17
    687c:	10 c0       	rjmp	.+32     	; 0x689e <enuDrawChar+0x1650>
    		enuWriteData(Z3[i]);
    687e:	2f 89       	ldd	r18, Y+23	; 0x17
    6880:	38 8d       	ldd	r19, Y+24	; 0x18
    6882:	ce 01       	movw	r24, r28
    6884:	88 55       	subi	r24, 0x58	; 88
    6886:	9f 4f       	sbci	r25, 0xFF	; 255
    6888:	fc 01       	movw	r30, r24
    688a:	e2 0f       	add	r30, r18
    688c:	f3 1f       	adc	r31, r19
    688e:	80 81       	ld	r24, Z
    6890:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    		enuWriteData(Z2[i]);
    	}
    	break;
        case '3': ;
    	u8 Z3[5]={0x22, 0x41, 0x49, 0x49, 0x36};
    	for(int i = 0 ; i<5;i++){
    6894:	8f 89       	ldd	r24, Y+23	; 0x17
    6896:	98 8d       	ldd	r25, Y+24	; 0x18
    6898:	01 96       	adiw	r24, 0x01	; 1
    689a:	98 8f       	std	Y+24, r25	; 0x18
    689c:	8f 8b       	std	Y+23, r24	; 0x17
    689e:	8f 89       	ldd	r24, Y+23	; 0x17
    68a0:	98 8d       	ldd	r25, Y+24	; 0x18
    68a2:	85 30       	cpi	r24, 0x05	; 5
    68a4:	91 05       	cpc	r25, r1
    68a6:	5c f3       	brlt	.-42     	; 0x687e <enuDrawChar+0x1630>
    68a8:	a3 c4       	rjmp	.+2374   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z3[i]);
    	}
    	break;
        case '4': ;
    	u8 Z4[5]={0x18, 0x14, 0x12, 0x7F, 0x10};
    68aa:	ce 01       	movw	r24, r28
    68ac:	83 55       	subi	r24, 0x53	; 83
    68ae:	9f 4f       	sbci	r25, 0xFF	; 255
    68b0:	c4 5a       	subi	r28, 0xA4	; 164
    68b2:	de 4f       	sbci	r29, 0xFE	; 254
    68b4:	99 83       	std	Y+1, r25	; 0x01
    68b6:	88 83       	st	Y, r24
    68b8:	cc 55       	subi	r28, 0x5C	; 92
    68ba:	d1 40       	sbci	r29, 0x01	; 1
    68bc:	e7 e0       	ldi	r30, 0x07	; 7
    68be:	f1 e0       	ldi	r31, 0x01	; 1
    68c0:	c2 5a       	subi	r28, 0xA2	; 162
    68c2:	de 4f       	sbci	r29, 0xFE	; 254
    68c4:	f9 83       	std	Y+1, r31	; 0x01
    68c6:	e8 83       	st	Y, r30
    68c8:	ce 55       	subi	r28, 0x5E	; 94
    68ca:	d1 40       	sbci	r29, 0x01	; 1
    68cc:	f5 e0       	ldi	r31, 0x05	; 5
    68ce:	c0 5a       	subi	r28, 0xA0	; 160
    68d0:	de 4f       	sbci	r29, 0xFE	; 254
    68d2:	f8 83       	st	Y, r31
    68d4:	c0 56       	subi	r28, 0x60	; 96
    68d6:	d1 40       	sbci	r29, 0x01	; 1
    68d8:	c2 5a       	subi	r28, 0xA2	; 162
    68da:	de 4f       	sbci	r29, 0xFE	; 254
    68dc:	e8 81       	ld	r30, Y
    68de:	f9 81       	ldd	r31, Y+1	; 0x01
    68e0:	ce 55       	subi	r28, 0x5E	; 94
    68e2:	d1 40       	sbci	r29, 0x01	; 1
    68e4:	00 80       	ld	r0, Z
    68e6:	c2 5a       	subi	r28, 0xA2	; 162
    68e8:	de 4f       	sbci	r29, 0xFE	; 254
    68ea:	28 81       	ld	r18, Y
    68ec:	39 81       	ldd	r19, Y+1	; 0x01
    68ee:	ce 55       	subi	r28, 0x5E	; 94
    68f0:	d1 40       	sbci	r29, 0x01	; 1
    68f2:	2f 5f       	subi	r18, 0xFF	; 255
    68f4:	3f 4f       	sbci	r19, 0xFF	; 255
    68f6:	c2 5a       	subi	r28, 0xA2	; 162
    68f8:	de 4f       	sbci	r29, 0xFE	; 254
    68fa:	39 83       	std	Y+1, r19	; 0x01
    68fc:	28 83       	st	Y, r18
    68fe:	ce 55       	subi	r28, 0x5E	; 94
    6900:	d1 40       	sbci	r29, 0x01	; 1
    6902:	c4 5a       	subi	r28, 0xA4	; 164
    6904:	de 4f       	sbci	r29, 0xFE	; 254
    6906:	e8 81       	ld	r30, Y
    6908:	f9 81       	ldd	r31, Y+1	; 0x01
    690a:	cc 55       	subi	r28, 0x5C	; 92
    690c:	d1 40       	sbci	r29, 0x01	; 1
    690e:	00 82       	st	Z, r0
    6910:	c4 5a       	subi	r28, 0xA4	; 164
    6912:	de 4f       	sbci	r29, 0xFE	; 254
    6914:	28 81       	ld	r18, Y
    6916:	39 81       	ldd	r19, Y+1	; 0x01
    6918:	cc 55       	subi	r28, 0x5C	; 92
    691a:	d1 40       	sbci	r29, 0x01	; 1
    691c:	2f 5f       	subi	r18, 0xFF	; 255
    691e:	3f 4f       	sbci	r19, 0xFF	; 255
    6920:	c4 5a       	subi	r28, 0xA4	; 164
    6922:	de 4f       	sbci	r29, 0xFE	; 254
    6924:	39 83       	std	Y+1, r19	; 0x01
    6926:	28 83       	st	Y, r18
    6928:	cc 55       	subi	r28, 0x5C	; 92
    692a:	d1 40       	sbci	r29, 0x01	; 1
    692c:	c0 5a       	subi	r28, 0xA0	; 160
    692e:	de 4f       	sbci	r29, 0xFE	; 254
    6930:	38 81       	ld	r19, Y
    6932:	c0 56       	subi	r28, 0x60	; 96
    6934:	d1 40       	sbci	r29, 0x01	; 1
    6936:	31 50       	subi	r19, 0x01	; 1
    6938:	c0 5a       	subi	r28, 0xA0	; 160
    693a:	de 4f       	sbci	r29, 0xFE	; 254
    693c:	38 83       	st	Y, r19
    693e:	c0 56       	subi	r28, 0x60	; 96
    6940:	d1 40       	sbci	r29, 0x01	; 1
    6942:	c0 5a       	subi	r28, 0xA0	; 160
    6944:	de 4f       	sbci	r29, 0xFE	; 254
    6946:	88 81       	ld	r24, Y
    6948:	c0 56       	subi	r28, 0x60	; 96
    694a:	d1 40       	sbci	r29, 0x01	; 1
    694c:	88 23       	and	r24, r24
    694e:	21 f6       	brne	.-120    	; 0x68d8 <enuDrawChar+0x168a>
    	for(int i = 0 ; i<5;i++){
    6950:	1e 8a       	std	Y+22, r1	; 0x16
    6952:	1d 8a       	std	Y+21, r1	; 0x15
    6954:	10 c0       	rjmp	.+32     	; 0x6976 <enuDrawChar+0x1728>
    		enuWriteData(Z4[i]);
    6956:	2d 89       	ldd	r18, Y+21	; 0x15
    6958:	3e 89       	ldd	r19, Y+22	; 0x16
    695a:	ce 01       	movw	r24, r28
    695c:	83 55       	subi	r24, 0x53	; 83
    695e:	9f 4f       	sbci	r25, 0xFF	; 255
    6960:	fc 01       	movw	r30, r24
    6962:	e2 0f       	add	r30, r18
    6964:	f3 1f       	adc	r31, r19
    6966:	80 81       	ld	r24, Z
    6968:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    		enuWriteData(Z3[i]);
    	}
    	break;
        case '4': ;
    	u8 Z4[5]={0x18, 0x14, 0x12, 0x7F, 0x10};
    	for(int i = 0 ; i<5;i++){
    696c:	8d 89       	ldd	r24, Y+21	; 0x15
    696e:	9e 89       	ldd	r25, Y+22	; 0x16
    6970:	01 96       	adiw	r24, 0x01	; 1
    6972:	9e 8b       	std	Y+22, r25	; 0x16
    6974:	8d 8b       	std	Y+21, r24	; 0x15
    6976:	8d 89       	ldd	r24, Y+21	; 0x15
    6978:	9e 89       	ldd	r25, Y+22	; 0x16
    697a:	85 30       	cpi	r24, 0x05	; 5
    697c:	91 05       	cpc	r25, r1
    697e:	5c f3       	brlt	.-42     	; 0x6956 <enuDrawChar+0x1708>
    6980:	37 c4       	rjmp	.+2158   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z4[i]);
    	}
    	break;

        case '5': ;
    	u8 Z5[5]={0x27, 0x45, 0x45, 0x45, 0x39};
    6982:	ce 01       	movw	r24, r28
    6984:	8e 54       	subi	r24, 0x4E	; 78
    6986:	9f 4f       	sbci	r25, 0xFF	; 255
    6988:	cf 59       	subi	r28, 0x9F	; 159
    698a:	de 4f       	sbci	r29, 0xFE	; 254
    698c:	99 83       	std	Y+1, r25	; 0x01
    698e:	88 83       	st	Y, r24
    6990:	c1 56       	subi	r28, 0x61	; 97
    6992:	d1 40       	sbci	r29, 0x01	; 1
    6994:	e2 e0       	ldi	r30, 0x02	; 2
    6996:	f1 e0       	ldi	r31, 0x01	; 1
    6998:	cd 59       	subi	r28, 0x9D	; 157
    699a:	de 4f       	sbci	r29, 0xFE	; 254
    699c:	f9 83       	std	Y+1, r31	; 0x01
    699e:	e8 83       	st	Y, r30
    69a0:	c3 56       	subi	r28, 0x63	; 99
    69a2:	d1 40       	sbci	r29, 0x01	; 1
    69a4:	f5 e0       	ldi	r31, 0x05	; 5
    69a6:	cb 59       	subi	r28, 0x9B	; 155
    69a8:	de 4f       	sbci	r29, 0xFE	; 254
    69aa:	f8 83       	st	Y, r31
    69ac:	c5 56       	subi	r28, 0x65	; 101
    69ae:	d1 40       	sbci	r29, 0x01	; 1
    69b0:	cd 59       	subi	r28, 0x9D	; 157
    69b2:	de 4f       	sbci	r29, 0xFE	; 254
    69b4:	e8 81       	ld	r30, Y
    69b6:	f9 81       	ldd	r31, Y+1	; 0x01
    69b8:	c3 56       	subi	r28, 0x63	; 99
    69ba:	d1 40       	sbci	r29, 0x01	; 1
    69bc:	00 80       	ld	r0, Z
    69be:	cd 59       	subi	r28, 0x9D	; 157
    69c0:	de 4f       	sbci	r29, 0xFE	; 254
    69c2:	28 81       	ld	r18, Y
    69c4:	39 81       	ldd	r19, Y+1	; 0x01
    69c6:	c3 56       	subi	r28, 0x63	; 99
    69c8:	d1 40       	sbci	r29, 0x01	; 1
    69ca:	2f 5f       	subi	r18, 0xFF	; 255
    69cc:	3f 4f       	sbci	r19, 0xFF	; 255
    69ce:	cd 59       	subi	r28, 0x9D	; 157
    69d0:	de 4f       	sbci	r29, 0xFE	; 254
    69d2:	39 83       	std	Y+1, r19	; 0x01
    69d4:	28 83       	st	Y, r18
    69d6:	c3 56       	subi	r28, 0x63	; 99
    69d8:	d1 40       	sbci	r29, 0x01	; 1
    69da:	cf 59       	subi	r28, 0x9F	; 159
    69dc:	de 4f       	sbci	r29, 0xFE	; 254
    69de:	e8 81       	ld	r30, Y
    69e0:	f9 81       	ldd	r31, Y+1	; 0x01
    69e2:	c1 56       	subi	r28, 0x61	; 97
    69e4:	d1 40       	sbci	r29, 0x01	; 1
    69e6:	00 82       	st	Z, r0
    69e8:	cf 59       	subi	r28, 0x9F	; 159
    69ea:	de 4f       	sbci	r29, 0xFE	; 254
    69ec:	28 81       	ld	r18, Y
    69ee:	39 81       	ldd	r19, Y+1	; 0x01
    69f0:	c1 56       	subi	r28, 0x61	; 97
    69f2:	d1 40       	sbci	r29, 0x01	; 1
    69f4:	2f 5f       	subi	r18, 0xFF	; 255
    69f6:	3f 4f       	sbci	r19, 0xFF	; 255
    69f8:	cf 59       	subi	r28, 0x9F	; 159
    69fa:	de 4f       	sbci	r29, 0xFE	; 254
    69fc:	39 83       	std	Y+1, r19	; 0x01
    69fe:	28 83       	st	Y, r18
    6a00:	c1 56       	subi	r28, 0x61	; 97
    6a02:	d1 40       	sbci	r29, 0x01	; 1
    6a04:	cb 59       	subi	r28, 0x9B	; 155
    6a06:	de 4f       	sbci	r29, 0xFE	; 254
    6a08:	38 81       	ld	r19, Y
    6a0a:	c5 56       	subi	r28, 0x65	; 101
    6a0c:	d1 40       	sbci	r29, 0x01	; 1
    6a0e:	31 50       	subi	r19, 0x01	; 1
    6a10:	cb 59       	subi	r28, 0x9B	; 155
    6a12:	de 4f       	sbci	r29, 0xFE	; 254
    6a14:	38 83       	st	Y, r19
    6a16:	c5 56       	subi	r28, 0x65	; 101
    6a18:	d1 40       	sbci	r29, 0x01	; 1
    6a1a:	cb 59       	subi	r28, 0x9B	; 155
    6a1c:	de 4f       	sbci	r29, 0xFE	; 254
    6a1e:	88 81       	ld	r24, Y
    6a20:	c5 56       	subi	r28, 0x65	; 101
    6a22:	d1 40       	sbci	r29, 0x01	; 1
    6a24:	88 23       	and	r24, r24
    6a26:	21 f6       	brne	.-120    	; 0x69b0 <enuDrawChar+0x1762>
    	for(int i = 0 ; i<5;i++){
    6a28:	1c 8a       	std	Y+20, r1	; 0x14
    6a2a:	1b 8a       	std	Y+19, r1	; 0x13
    6a2c:	10 c0       	rjmp	.+32     	; 0x6a4e <enuDrawChar+0x1800>
    		enuWriteData(Z5[i]);
    6a2e:	2b 89       	ldd	r18, Y+19	; 0x13
    6a30:	3c 89       	ldd	r19, Y+20	; 0x14
    6a32:	ce 01       	movw	r24, r28
    6a34:	8e 54       	subi	r24, 0x4E	; 78
    6a36:	9f 4f       	sbci	r25, 0xFF	; 255
    6a38:	fc 01       	movw	r30, r24
    6a3a:	e2 0f       	add	r30, r18
    6a3c:	f3 1f       	adc	r31, r19
    6a3e:	80 81       	ld	r24, Z
    6a40:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    	}
    	break;

        case '5': ;
    	u8 Z5[5]={0x27, 0x45, 0x45, 0x45, 0x39};
    	for(int i = 0 ; i<5;i++){
    6a44:	8b 89       	ldd	r24, Y+19	; 0x13
    6a46:	9c 89       	ldd	r25, Y+20	; 0x14
    6a48:	01 96       	adiw	r24, 0x01	; 1
    6a4a:	9c 8b       	std	Y+20, r25	; 0x14
    6a4c:	8b 8b       	std	Y+19, r24	; 0x13
    6a4e:	8b 89       	ldd	r24, Y+19	; 0x13
    6a50:	9c 89       	ldd	r25, Y+20	; 0x14
    6a52:	85 30       	cpi	r24, 0x05	; 5
    6a54:	91 05       	cpc	r25, r1
    6a56:	5c f3       	brlt	.-42     	; 0x6a2e <enuDrawChar+0x17e0>
    6a58:	cb c3       	rjmp	.+1942   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z5[i]);
    	}
    	break;

        case '6': ;
    	u8 Z6[5]={0x3E, 0x49, 0x49, 0x49, 0x32};
    6a5a:	ce 01       	movw	r24, r28
    6a5c:	89 54       	subi	r24, 0x49	; 73
    6a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    6a60:	ca 59       	subi	r28, 0x9A	; 154
    6a62:	de 4f       	sbci	r29, 0xFE	; 254
    6a64:	99 83       	std	Y+1, r25	; 0x01
    6a66:	88 83       	st	Y, r24
    6a68:	c6 56       	subi	r28, 0x66	; 102
    6a6a:	d1 40       	sbci	r29, 0x01	; 1
    6a6c:	ed ef       	ldi	r30, 0xFD	; 253
    6a6e:	f0 e0       	ldi	r31, 0x00	; 0
    6a70:	c8 59       	subi	r28, 0x98	; 152
    6a72:	de 4f       	sbci	r29, 0xFE	; 254
    6a74:	f9 83       	std	Y+1, r31	; 0x01
    6a76:	e8 83       	st	Y, r30
    6a78:	c8 56       	subi	r28, 0x68	; 104
    6a7a:	d1 40       	sbci	r29, 0x01	; 1
    6a7c:	f5 e0       	ldi	r31, 0x05	; 5
    6a7e:	c6 59       	subi	r28, 0x96	; 150
    6a80:	de 4f       	sbci	r29, 0xFE	; 254
    6a82:	f8 83       	st	Y, r31
    6a84:	ca 56       	subi	r28, 0x6A	; 106
    6a86:	d1 40       	sbci	r29, 0x01	; 1
    6a88:	c8 59       	subi	r28, 0x98	; 152
    6a8a:	de 4f       	sbci	r29, 0xFE	; 254
    6a8c:	e8 81       	ld	r30, Y
    6a8e:	f9 81       	ldd	r31, Y+1	; 0x01
    6a90:	c8 56       	subi	r28, 0x68	; 104
    6a92:	d1 40       	sbci	r29, 0x01	; 1
    6a94:	00 80       	ld	r0, Z
    6a96:	c8 59       	subi	r28, 0x98	; 152
    6a98:	de 4f       	sbci	r29, 0xFE	; 254
    6a9a:	28 81       	ld	r18, Y
    6a9c:	39 81       	ldd	r19, Y+1	; 0x01
    6a9e:	c8 56       	subi	r28, 0x68	; 104
    6aa0:	d1 40       	sbci	r29, 0x01	; 1
    6aa2:	2f 5f       	subi	r18, 0xFF	; 255
    6aa4:	3f 4f       	sbci	r19, 0xFF	; 255
    6aa6:	c8 59       	subi	r28, 0x98	; 152
    6aa8:	de 4f       	sbci	r29, 0xFE	; 254
    6aaa:	39 83       	std	Y+1, r19	; 0x01
    6aac:	28 83       	st	Y, r18
    6aae:	c8 56       	subi	r28, 0x68	; 104
    6ab0:	d1 40       	sbci	r29, 0x01	; 1
    6ab2:	ca 59       	subi	r28, 0x9A	; 154
    6ab4:	de 4f       	sbci	r29, 0xFE	; 254
    6ab6:	e8 81       	ld	r30, Y
    6ab8:	f9 81       	ldd	r31, Y+1	; 0x01
    6aba:	c6 56       	subi	r28, 0x66	; 102
    6abc:	d1 40       	sbci	r29, 0x01	; 1
    6abe:	00 82       	st	Z, r0
    6ac0:	ca 59       	subi	r28, 0x9A	; 154
    6ac2:	de 4f       	sbci	r29, 0xFE	; 254
    6ac4:	28 81       	ld	r18, Y
    6ac6:	39 81       	ldd	r19, Y+1	; 0x01
    6ac8:	c6 56       	subi	r28, 0x66	; 102
    6aca:	d1 40       	sbci	r29, 0x01	; 1
    6acc:	2f 5f       	subi	r18, 0xFF	; 255
    6ace:	3f 4f       	sbci	r19, 0xFF	; 255
    6ad0:	ca 59       	subi	r28, 0x9A	; 154
    6ad2:	de 4f       	sbci	r29, 0xFE	; 254
    6ad4:	39 83       	std	Y+1, r19	; 0x01
    6ad6:	28 83       	st	Y, r18
    6ad8:	c6 56       	subi	r28, 0x66	; 102
    6ada:	d1 40       	sbci	r29, 0x01	; 1
    6adc:	c6 59       	subi	r28, 0x96	; 150
    6ade:	de 4f       	sbci	r29, 0xFE	; 254
    6ae0:	38 81       	ld	r19, Y
    6ae2:	ca 56       	subi	r28, 0x6A	; 106
    6ae4:	d1 40       	sbci	r29, 0x01	; 1
    6ae6:	31 50       	subi	r19, 0x01	; 1
    6ae8:	c6 59       	subi	r28, 0x96	; 150
    6aea:	de 4f       	sbci	r29, 0xFE	; 254
    6aec:	38 83       	st	Y, r19
    6aee:	ca 56       	subi	r28, 0x6A	; 106
    6af0:	d1 40       	sbci	r29, 0x01	; 1
    6af2:	c6 59       	subi	r28, 0x96	; 150
    6af4:	de 4f       	sbci	r29, 0xFE	; 254
    6af6:	88 81       	ld	r24, Y
    6af8:	ca 56       	subi	r28, 0x6A	; 106
    6afa:	d1 40       	sbci	r29, 0x01	; 1
    6afc:	88 23       	and	r24, r24
    6afe:	21 f6       	brne	.-120    	; 0x6a88 <enuDrawChar+0x183a>
    	for(int i = 0 ; i<5;i++){
    6b00:	1a 8a       	std	Y+18, r1	; 0x12
    6b02:	19 8a       	std	Y+17, r1	; 0x11
    6b04:	10 c0       	rjmp	.+32     	; 0x6b26 <enuDrawChar+0x18d8>
    		enuWriteData(Z6[i]);
    6b06:	29 89       	ldd	r18, Y+17	; 0x11
    6b08:	3a 89       	ldd	r19, Y+18	; 0x12
    6b0a:	ce 01       	movw	r24, r28
    6b0c:	89 54       	subi	r24, 0x49	; 73
    6b0e:	9f 4f       	sbci	r25, 0xFF	; 255
    6b10:	fc 01       	movw	r30, r24
    6b12:	e2 0f       	add	r30, r18
    6b14:	f3 1f       	adc	r31, r19
    6b16:	80 81       	ld	r24, Z
    6b18:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    	}
    	break;

        case '6': ;
    	u8 Z6[5]={0x3E, 0x49, 0x49, 0x49, 0x32};
    	for(int i = 0 ; i<5;i++){
    6b1c:	89 89       	ldd	r24, Y+17	; 0x11
    6b1e:	9a 89       	ldd	r25, Y+18	; 0x12
    6b20:	01 96       	adiw	r24, 0x01	; 1
    6b22:	9a 8b       	std	Y+18, r25	; 0x12
    6b24:	89 8b       	std	Y+17, r24	; 0x11
    6b26:	89 89       	ldd	r24, Y+17	; 0x11
    6b28:	9a 89       	ldd	r25, Y+18	; 0x12
    6b2a:	85 30       	cpi	r24, 0x05	; 5
    6b2c:	91 05       	cpc	r25, r1
    6b2e:	5c f3       	brlt	.-42     	; 0x6b06 <enuDrawChar+0x18b8>
    6b30:	5f c3       	rjmp	.+1726   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z6[i]);
    	}
    	break;

        case '7': ;
    	u8 Z7[5]={0x01, 0x01, 0x71, 0x09, 0x07};
    6b32:	ce 01       	movw	r24, r28
    6b34:	84 54       	subi	r24, 0x44	; 68
    6b36:	9f 4f       	sbci	r25, 0xFF	; 255
    6b38:	c5 59       	subi	r28, 0x95	; 149
    6b3a:	de 4f       	sbci	r29, 0xFE	; 254
    6b3c:	99 83       	std	Y+1, r25	; 0x01
    6b3e:	88 83       	st	Y, r24
    6b40:	cb 56       	subi	r28, 0x6B	; 107
    6b42:	d1 40       	sbci	r29, 0x01	; 1
    6b44:	e8 ef       	ldi	r30, 0xF8	; 248
    6b46:	f0 e0       	ldi	r31, 0x00	; 0
    6b48:	c3 59       	subi	r28, 0x93	; 147
    6b4a:	de 4f       	sbci	r29, 0xFE	; 254
    6b4c:	f9 83       	std	Y+1, r31	; 0x01
    6b4e:	e8 83       	st	Y, r30
    6b50:	cd 56       	subi	r28, 0x6D	; 109
    6b52:	d1 40       	sbci	r29, 0x01	; 1
    6b54:	f5 e0       	ldi	r31, 0x05	; 5
    6b56:	c1 59       	subi	r28, 0x91	; 145
    6b58:	de 4f       	sbci	r29, 0xFE	; 254
    6b5a:	f8 83       	st	Y, r31
    6b5c:	cf 56       	subi	r28, 0x6F	; 111
    6b5e:	d1 40       	sbci	r29, 0x01	; 1
    6b60:	c3 59       	subi	r28, 0x93	; 147
    6b62:	de 4f       	sbci	r29, 0xFE	; 254
    6b64:	e8 81       	ld	r30, Y
    6b66:	f9 81       	ldd	r31, Y+1	; 0x01
    6b68:	cd 56       	subi	r28, 0x6D	; 109
    6b6a:	d1 40       	sbci	r29, 0x01	; 1
    6b6c:	00 80       	ld	r0, Z
    6b6e:	c3 59       	subi	r28, 0x93	; 147
    6b70:	de 4f       	sbci	r29, 0xFE	; 254
    6b72:	28 81       	ld	r18, Y
    6b74:	39 81       	ldd	r19, Y+1	; 0x01
    6b76:	cd 56       	subi	r28, 0x6D	; 109
    6b78:	d1 40       	sbci	r29, 0x01	; 1
    6b7a:	2f 5f       	subi	r18, 0xFF	; 255
    6b7c:	3f 4f       	sbci	r19, 0xFF	; 255
    6b7e:	c3 59       	subi	r28, 0x93	; 147
    6b80:	de 4f       	sbci	r29, 0xFE	; 254
    6b82:	39 83       	std	Y+1, r19	; 0x01
    6b84:	28 83       	st	Y, r18
    6b86:	cd 56       	subi	r28, 0x6D	; 109
    6b88:	d1 40       	sbci	r29, 0x01	; 1
    6b8a:	c5 59       	subi	r28, 0x95	; 149
    6b8c:	de 4f       	sbci	r29, 0xFE	; 254
    6b8e:	e8 81       	ld	r30, Y
    6b90:	f9 81       	ldd	r31, Y+1	; 0x01
    6b92:	cb 56       	subi	r28, 0x6B	; 107
    6b94:	d1 40       	sbci	r29, 0x01	; 1
    6b96:	00 82       	st	Z, r0
    6b98:	c5 59       	subi	r28, 0x95	; 149
    6b9a:	de 4f       	sbci	r29, 0xFE	; 254
    6b9c:	28 81       	ld	r18, Y
    6b9e:	39 81       	ldd	r19, Y+1	; 0x01
    6ba0:	cb 56       	subi	r28, 0x6B	; 107
    6ba2:	d1 40       	sbci	r29, 0x01	; 1
    6ba4:	2f 5f       	subi	r18, 0xFF	; 255
    6ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    6ba8:	c5 59       	subi	r28, 0x95	; 149
    6baa:	de 4f       	sbci	r29, 0xFE	; 254
    6bac:	39 83       	std	Y+1, r19	; 0x01
    6bae:	28 83       	st	Y, r18
    6bb0:	cb 56       	subi	r28, 0x6B	; 107
    6bb2:	d1 40       	sbci	r29, 0x01	; 1
    6bb4:	c1 59       	subi	r28, 0x91	; 145
    6bb6:	de 4f       	sbci	r29, 0xFE	; 254
    6bb8:	38 81       	ld	r19, Y
    6bba:	cf 56       	subi	r28, 0x6F	; 111
    6bbc:	d1 40       	sbci	r29, 0x01	; 1
    6bbe:	31 50       	subi	r19, 0x01	; 1
    6bc0:	c1 59       	subi	r28, 0x91	; 145
    6bc2:	de 4f       	sbci	r29, 0xFE	; 254
    6bc4:	38 83       	st	Y, r19
    6bc6:	cf 56       	subi	r28, 0x6F	; 111
    6bc8:	d1 40       	sbci	r29, 0x01	; 1
    6bca:	c1 59       	subi	r28, 0x91	; 145
    6bcc:	de 4f       	sbci	r29, 0xFE	; 254
    6bce:	88 81       	ld	r24, Y
    6bd0:	cf 56       	subi	r28, 0x6F	; 111
    6bd2:	d1 40       	sbci	r29, 0x01	; 1
    6bd4:	88 23       	and	r24, r24
    6bd6:	21 f6       	brne	.-120    	; 0x6b60 <enuDrawChar+0x1912>
    	for(int i = 0 ; i<5;i++){
    6bd8:	18 8a       	std	Y+16, r1	; 0x10
    6bda:	1f 86       	std	Y+15, r1	; 0x0f
    6bdc:	10 c0       	rjmp	.+32     	; 0x6bfe <enuDrawChar+0x19b0>
    		enuWriteData(Z7[i]);
    6bde:	2f 85       	ldd	r18, Y+15	; 0x0f
    6be0:	38 89       	ldd	r19, Y+16	; 0x10
    6be2:	ce 01       	movw	r24, r28
    6be4:	84 54       	subi	r24, 0x44	; 68
    6be6:	9f 4f       	sbci	r25, 0xFF	; 255
    6be8:	fc 01       	movw	r30, r24
    6bea:	e2 0f       	add	r30, r18
    6bec:	f3 1f       	adc	r31, r19
    6bee:	80 81       	ld	r24, Z
    6bf0:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    	}
    	break;

        case '7': ;
    	u8 Z7[5]={0x01, 0x01, 0x71, 0x09, 0x07};
    	for(int i = 0 ; i<5;i++){
    6bf4:	8f 85       	ldd	r24, Y+15	; 0x0f
    6bf6:	98 89       	ldd	r25, Y+16	; 0x10
    6bf8:	01 96       	adiw	r24, 0x01	; 1
    6bfa:	98 8b       	std	Y+16, r25	; 0x10
    6bfc:	8f 87       	std	Y+15, r24	; 0x0f
    6bfe:	8f 85       	ldd	r24, Y+15	; 0x0f
    6c00:	98 89       	ldd	r25, Y+16	; 0x10
    6c02:	85 30       	cpi	r24, 0x05	; 5
    6c04:	91 05       	cpc	r25, r1
    6c06:	5c f3       	brlt	.-42     	; 0x6bde <enuDrawChar+0x1990>
    6c08:	f3 c2       	rjmp	.+1510   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z7[i]);
    	}
    	break;

        case '8': ;
    	u8 Z8[5]={0x36, 0x49, 0x49, 0x49, 0x36};
    6c0a:	ce 01       	movw	r24, r28
    6c0c:	8f 53       	subi	r24, 0x3F	; 63
    6c0e:	9f 4f       	sbci	r25, 0xFF	; 255
    6c10:	c0 59       	subi	r28, 0x90	; 144
    6c12:	de 4f       	sbci	r29, 0xFE	; 254
    6c14:	99 83       	std	Y+1, r25	; 0x01
    6c16:	88 83       	st	Y, r24
    6c18:	c0 57       	subi	r28, 0x70	; 112
    6c1a:	d1 40       	sbci	r29, 0x01	; 1
    6c1c:	e3 ef       	ldi	r30, 0xF3	; 243
    6c1e:	f0 e0       	ldi	r31, 0x00	; 0
    6c20:	ce 58       	subi	r28, 0x8E	; 142
    6c22:	de 4f       	sbci	r29, 0xFE	; 254
    6c24:	f9 83       	std	Y+1, r31	; 0x01
    6c26:	e8 83       	st	Y, r30
    6c28:	c2 57       	subi	r28, 0x72	; 114
    6c2a:	d1 40       	sbci	r29, 0x01	; 1
    6c2c:	f5 e0       	ldi	r31, 0x05	; 5
    6c2e:	cc 58       	subi	r28, 0x8C	; 140
    6c30:	de 4f       	sbci	r29, 0xFE	; 254
    6c32:	f8 83       	st	Y, r31
    6c34:	c4 57       	subi	r28, 0x74	; 116
    6c36:	d1 40       	sbci	r29, 0x01	; 1
    6c38:	ce 58       	subi	r28, 0x8E	; 142
    6c3a:	de 4f       	sbci	r29, 0xFE	; 254
    6c3c:	e8 81       	ld	r30, Y
    6c3e:	f9 81       	ldd	r31, Y+1	; 0x01
    6c40:	c2 57       	subi	r28, 0x72	; 114
    6c42:	d1 40       	sbci	r29, 0x01	; 1
    6c44:	00 80       	ld	r0, Z
    6c46:	ce 58       	subi	r28, 0x8E	; 142
    6c48:	de 4f       	sbci	r29, 0xFE	; 254
    6c4a:	28 81       	ld	r18, Y
    6c4c:	39 81       	ldd	r19, Y+1	; 0x01
    6c4e:	c2 57       	subi	r28, 0x72	; 114
    6c50:	d1 40       	sbci	r29, 0x01	; 1
    6c52:	2f 5f       	subi	r18, 0xFF	; 255
    6c54:	3f 4f       	sbci	r19, 0xFF	; 255
    6c56:	ce 58       	subi	r28, 0x8E	; 142
    6c58:	de 4f       	sbci	r29, 0xFE	; 254
    6c5a:	39 83       	std	Y+1, r19	; 0x01
    6c5c:	28 83       	st	Y, r18
    6c5e:	c2 57       	subi	r28, 0x72	; 114
    6c60:	d1 40       	sbci	r29, 0x01	; 1
    6c62:	c0 59       	subi	r28, 0x90	; 144
    6c64:	de 4f       	sbci	r29, 0xFE	; 254
    6c66:	e8 81       	ld	r30, Y
    6c68:	f9 81       	ldd	r31, Y+1	; 0x01
    6c6a:	c0 57       	subi	r28, 0x70	; 112
    6c6c:	d1 40       	sbci	r29, 0x01	; 1
    6c6e:	00 82       	st	Z, r0
    6c70:	c0 59       	subi	r28, 0x90	; 144
    6c72:	de 4f       	sbci	r29, 0xFE	; 254
    6c74:	28 81       	ld	r18, Y
    6c76:	39 81       	ldd	r19, Y+1	; 0x01
    6c78:	c0 57       	subi	r28, 0x70	; 112
    6c7a:	d1 40       	sbci	r29, 0x01	; 1
    6c7c:	2f 5f       	subi	r18, 0xFF	; 255
    6c7e:	3f 4f       	sbci	r19, 0xFF	; 255
    6c80:	c0 59       	subi	r28, 0x90	; 144
    6c82:	de 4f       	sbci	r29, 0xFE	; 254
    6c84:	39 83       	std	Y+1, r19	; 0x01
    6c86:	28 83       	st	Y, r18
    6c88:	c0 57       	subi	r28, 0x70	; 112
    6c8a:	d1 40       	sbci	r29, 0x01	; 1
    6c8c:	cc 58       	subi	r28, 0x8C	; 140
    6c8e:	de 4f       	sbci	r29, 0xFE	; 254
    6c90:	38 81       	ld	r19, Y
    6c92:	c4 57       	subi	r28, 0x74	; 116
    6c94:	d1 40       	sbci	r29, 0x01	; 1
    6c96:	31 50       	subi	r19, 0x01	; 1
    6c98:	cc 58       	subi	r28, 0x8C	; 140
    6c9a:	de 4f       	sbci	r29, 0xFE	; 254
    6c9c:	38 83       	st	Y, r19
    6c9e:	c4 57       	subi	r28, 0x74	; 116
    6ca0:	d1 40       	sbci	r29, 0x01	; 1
    6ca2:	cc 58       	subi	r28, 0x8C	; 140
    6ca4:	de 4f       	sbci	r29, 0xFE	; 254
    6ca6:	88 81       	ld	r24, Y
    6ca8:	c4 57       	subi	r28, 0x74	; 116
    6caa:	d1 40       	sbci	r29, 0x01	; 1
    6cac:	88 23       	and	r24, r24
    6cae:	21 f6       	brne	.-120    	; 0x6c38 <enuDrawChar+0x19ea>
    	for(int i = 0 ; i<5;i++){
    6cb0:	1e 86       	std	Y+14, r1	; 0x0e
    6cb2:	1d 86       	std	Y+13, r1	; 0x0d
    6cb4:	10 c0       	rjmp	.+32     	; 0x6cd6 <enuDrawChar+0x1a88>
    		enuWriteData(Z8[i]);
    6cb6:	2d 85       	ldd	r18, Y+13	; 0x0d
    6cb8:	3e 85       	ldd	r19, Y+14	; 0x0e
    6cba:	ce 01       	movw	r24, r28
    6cbc:	8f 53       	subi	r24, 0x3F	; 63
    6cbe:	9f 4f       	sbci	r25, 0xFF	; 255
    6cc0:	fc 01       	movw	r30, r24
    6cc2:	e2 0f       	add	r30, r18
    6cc4:	f3 1f       	adc	r31, r19
    6cc6:	80 81       	ld	r24, Z
    6cc8:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    	}
    	break;

        case '8': ;
    	u8 Z8[5]={0x36, 0x49, 0x49, 0x49, 0x36};
    	for(int i = 0 ; i<5;i++){
    6ccc:	8d 85       	ldd	r24, Y+13	; 0x0d
    6cce:	9e 85       	ldd	r25, Y+14	; 0x0e
    6cd0:	01 96       	adiw	r24, 0x01	; 1
    6cd2:	9e 87       	std	Y+14, r25	; 0x0e
    6cd4:	8d 87       	std	Y+13, r24	; 0x0d
    6cd6:	8d 85       	ldd	r24, Y+13	; 0x0d
    6cd8:	9e 85       	ldd	r25, Y+14	; 0x0e
    6cda:	85 30       	cpi	r24, 0x05	; 5
    6cdc:	91 05       	cpc	r25, r1
    6cde:	5c f3       	brlt	.-42     	; 0x6cb6 <enuDrawChar+0x1a68>
    6ce0:	87 c2       	rjmp	.+1294   	; 0x71f0 <enuDrawChar+0x1fa2>
    		enuWriteData(Z8[i]);
    	}
    	break;
        case '9': ;
    	u8 Z9[5]={0x26, 0x49, 0x49, 0x49, 0x3E};
    6ce2:	ce 01       	movw	r24, r28
    6ce4:	8a 53       	subi	r24, 0x3A	; 58
    6ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    6ce8:	cb 58       	subi	r28, 0x8B	; 139
    6cea:	de 4f       	sbci	r29, 0xFE	; 254
    6cec:	99 83       	std	Y+1, r25	; 0x01
    6cee:	88 83       	st	Y, r24
    6cf0:	c5 57       	subi	r28, 0x75	; 117
    6cf2:	d1 40       	sbci	r29, 0x01	; 1
    6cf4:	ee ee       	ldi	r30, 0xEE	; 238
    6cf6:	f0 e0       	ldi	r31, 0x00	; 0
    6cf8:	c9 58       	subi	r28, 0x89	; 137
    6cfa:	de 4f       	sbci	r29, 0xFE	; 254
    6cfc:	f9 83       	std	Y+1, r31	; 0x01
    6cfe:	e8 83       	st	Y, r30
    6d00:	c7 57       	subi	r28, 0x77	; 119
    6d02:	d1 40       	sbci	r29, 0x01	; 1
    6d04:	f5 e0       	ldi	r31, 0x05	; 5
    6d06:	c7 58       	subi	r28, 0x87	; 135
    6d08:	de 4f       	sbci	r29, 0xFE	; 254
    6d0a:	f8 83       	st	Y, r31
    6d0c:	c9 57       	subi	r28, 0x79	; 121
    6d0e:	d1 40       	sbci	r29, 0x01	; 1
    6d10:	c9 58       	subi	r28, 0x89	; 137
    6d12:	de 4f       	sbci	r29, 0xFE	; 254
    6d14:	e8 81       	ld	r30, Y
    6d16:	f9 81       	ldd	r31, Y+1	; 0x01
    6d18:	c7 57       	subi	r28, 0x77	; 119
    6d1a:	d1 40       	sbci	r29, 0x01	; 1
    6d1c:	00 80       	ld	r0, Z
    6d1e:	c9 58       	subi	r28, 0x89	; 137
    6d20:	de 4f       	sbci	r29, 0xFE	; 254
    6d22:	28 81       	ld	r18, Y
    6d24:	39 81       	ldd	r19, Y+1	; 0x01
    6d26:	c7 57       	subi	r28, 0x77	; 119
    6d28:	d1 40       	sbci	r29, 0x01	; 1
    6d2a:	2f 5f       	subi	r18, 0xFF	; 255
    6d2c:	3f 4f       	sbci	r19, 0xFF	; 255
    6d2e:	c9 58       	subi	r28, 0x89	; 137
    6d30:	de 4f       	sbci	r29, 0xFE	; 254
    6d32:	39 83       	std	Y+1, r19	; 0x01
    6d34:	28 83       	st	Y, r18
    6d36:	c7 57       	subi	r28, 0x77	; 119
    6d38:	d1 40       	sbci	r29, 0x01	; 1
    6d3a:	cb 58       	subi	r28, 0x8B	; 139
    6d3c:	de 4f       	sbci	r29, 0xFE	; 254
    6d3e:	e8 81       	ld	r30, Y
    6d40:	f9 81       	ldd	r31, Y+1	; 0x01
    6d42:	c5 57       	subi	r28, 0x75	; 117
    6d44:	d1 40       	sbci	r29, 0x01	; 1
    6d46:	00 82       	st	Z, r0
    6d48:	cb 58       	subi	r28, 0x8B	; 139
    6d4a:	de 4f       	sbci	r29, 0xFE	; 254
    6d4c:	28 81       	ld	r18, Y
    6d4e:	39 81       	ldd	r19, Y+1	; 0x01
    6d50:	c5 57       	subi	r28, 0x75	; 117
    6d52:	d1 40       	sbci	r29, 0x01	; 1
    6d54:	2f 5f       	subi	r18, 0xFF	; 255
    6d56:	3f 4f       	sbci	r19, 0xFF	; 255
    6d58:	cb 58       	subi	r28, 0x8B	; 139
    6d5a:	de 4f       	sbci	r29, 0xFE	; 254
    6d5c:	39 83       	std	Y+1, r19	; 0x01
    6d5e:	28 83       	st	Y, r18
    6d60:	c5 57       	subi	r28, 0x75	; 117
    6d62:	d1 40       	sbci	r29, 0x01	; 1
    6d64:	c7 58       	subi	r28, 0x87	; 135
    6d66:	de 4f       	sbci	r29, 0xFE	; 254
    6d68:	38 81       	ld	r19, Y
    6d6a:	c9 57       	subi	r28, 0x79	; 121
    6d6c:	d1 40       	sbci	r29, 0x01	; 1
    6d6e:	31 50       	subi	r19, 0x01	; 1
    6d70:	c7 58       	subi	r28, 0x87	; 135
    6d72:	de 4f       	sbci	r29, 0xFE	; 254
    6d74:	38 83       	st	Y, r19
    6d76:	c9 57       	subi	r28, 0x79	; 121
    6d78:	d1 40       	sbci	r29, 0x01	; 1
    6d7a:	c7 58       	subi	r28, 0x87	; 135
    6d7c:	de 4f       	sbci	r29, 0xFE	; 254
    6d7e:	88 81       	ld	r24, Y
    6d80:	c9 57       	subi	r28, 0x79	; 121
    6d82:	d1 40       	sbci	r29, 0x01	; 1
    6d84:	88 23       	and	r24, r24
    6d86:	21 f6       	brne	.-120    	; 0x6d10 <enuDrawChar+0x1ac2>
    	for(int i = 0 ; i<5;i++){
    6d88:	1c 86       	std	Y+12, r1	; 0x0c
    6d8a:	1b 86       	std	Y+11, r1	; 0x0b
    6d8c:	10 c0       	rjmp	.+32     	; 0x6dae <enuDrawChar+0x1b60>
    		enuWriteData(Z9[i]);
    6d8e:	2b 85       	ldd	r18, Y+11	; 0x0b
    6d90:	3c 85       	ldd	r19, Y+12	; 0x0c
    6d92:	ce 01       	movw	r24, r28
    6d94:	8a 53       	subi	r24, 0x3A	; 58
    6d96:	9f 4f       	sbci	r25, 0xFF	; 255
    6d98:	fc 01       	movw	r30, r24
    6d9a:	e2 0f       	add	r30, r18
    6d9c:	f3 1f       	adc	r31, r19
    6d9e:	80 81       	ld	r24, Z
    6da0:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
    		enuWriteData(Z8[i]);
    	}
    	break;
        case '9': ;
    	u8 Z9[5]={0x26, 0x49, 0x49, 0x49, 0x3E};
    	for(int i = 0 ; i<5;i++){
    6da4:	8b 85       	ldd	r24, Y+11	; 0x0b
    6da6:	9c 85       	ldd	r25, Y+12	; 0x0c
    6da8:	01 96       	adiw	r24, 0x01	; 1
    6daa:	9c 87       	std	Y+12, r25	; 0x0c
    6dac:	8b 87       	std	Y+11, r24	; 0x0b
    6dae:	8b 85       	ldd	r24, Y+11	; 0x0b
    6db0:	9c 85       	ldd	r25, Y+12	; 0x0c
    6db2:	85 30       	cpi	r24, 0x05	; 5
    6db4:	91 05       	cpc	r25, r1
    6db6:	5c f3       	brlt	.-42     	; 0x6d8e <enuDrawChar+0x1b40>
    6db8:	1b c2       	rjmp	.+1078   	; 0x71f0 <enuDrawChar+0x1fa2>
            			  0x01,
            			  0x01,
            			  0x01,
            			  0x01,
            			  0x01,
            			  0x01};
    6dba:	ce 01       	movw	r24, r28
    6dbc:	85 53       	subi	r24, 0x35	; 53
    6dbe:	9f 4f       	sbci	r25, 0xFF	; 255
    6dc0:	c6 58       	subi	r28, 0x86	; 134
    6dc2:	de 4f       	sbci	r29, 0xFE	; 254
    6dc4:	99 83       	std	Y+1, r25	; 0x01
    6dc6:	88 83       	st	Y, r24
    6dc8:	ca 57       	subi	r28, 0x7A	; 122
    6dca:	d1 40       	sbci	r29, 0x01	; 1
    6dcc:	e6 ee       	ldi	r30, 0xE6	; 230
    6dce:	f0 e0       	ldi	r31, 0x00	; 0
    6dd0:	c4 58       	subi	r28, 0x84	; 132
    6dd2:	de 4f       	sbci	r29, 0xFE	; 254
    6dd4:	f9 83       	std	Y+1, r31	; 0x01
    6dd6:	e8 83       	st	Y, r30
    6dd8:	cc 57       	subi	r28, 0x7C	; 124
    6dda:	d1 40       	sbci	r29, 0x01	; 1
    6ddc:	f8 e0       	ldi	r31, 0x08	; 8
    6dde:	c2 58       	subi	r28, 0x82	; 130
    6de0:	de 4f       	sbci	r29, 0xFE	; 254
    6de2:	f8 83       	st	Y, r31
    6de4:	ce 57       	subi	r28, 0x7E	; 126
    6de6:	d1 40       	sbci	r29, 0x01	; 1
    6de8:	c4 58       	subi	r28, 0x84	; 132
    6dea:	de 4f       	sbci	r29, 0xFE	; 254
    6dec:	e8 81       	ld	r30, Y
    6dee:	f9 81       	ldd	r31, Y+1	; 0x01
    6df0:	cc 57       	subi	r28, 0x7C	; 124
    6df2:	d1 40       	sbci	r29, 0x01	; 1
    6df4:	00 80       	ld	r0, Z
    6df6:	c4 58       	subi	r28, 0x84	; 132
    6df8:	de 4f       	sbci	r29, 0xFE	; 254
    6dfa:	28 81       	ld	r18, Y
    6dfc:	39 81       	ldd	r19, Y+1	; 0x01
    6dfe:	cc 57       	subi	r28, 0x7C	; 124
    6e00:	d1 40       	sbci	r29, 0x01	; 1
    6e02:	2f 5f       	subi	r18, 0xFF	; 255
    6e04:	3f 4f       	sbci	r19, 0xFF	; 255
    6e06:	c4 58       	subi	r28, 0x84	; 132
    6e08:	de 4f       	sbci	r29, 0xFE	; 254
    6e0a:	39 83       	std	Y+1, r19	; 0x01
    6e0c:	28 83       	st	Y, r18
    6e0e:	cc 57       	subi	r28, 0x7C	; 124
    6e10:	d1 40       	sbci	r29, 0x01	; 1
    6e12:	c6 58       	subi	r28, 0x86	; 134
    6e14:	de 4f       	sbci	r29, 0xFE	; 254
    6e16:	e8 81       	ld	r30, Y
    6e18:	f9 81       	ldd	r31, Y+1	; 0x01
    6e1a:	ca 57       	subi	r28, 0x7A	; 122
    6e1c:	d1 40       	sbci	r29, 0x01	; 1
    6e1e:	00 82       	st	Z, r0
    6e20:	c6 58       	subi	r28, 0x86	; 134
    6e22:	de 4f       	sbci	r29, 0xFE	; 254
    6e24:	28 81       	ld	r18, Y
    6e26:	39 81       	ldd	r19, Y+1	; 0x01
    6e28:	ca 57       	subi	r28, 0x7A	; 122
    6e2a:	d1 40       	sbci	r29, 0x01	; 1
    6e2c:	2f 5f       	subi	r18, 0xFF	; 255
    6e2e:	3f 4f       	sbci	r19, 0xFF	; 255
    6e30:	c6 58       	subi	r28, 0x86	; 134
    6e32:	de 4f       	sbci	r29, 0xFE	; 254
    6e34:	39 83       	std	Y+1, r19	; 0x01
    6e36:	28 83       	st	Y, r18
    6e38:	ca 57       	subi	r28, 0x7A	; 122
    6e3a:	d1 40       	sbci	r29, 0x01	; 1
    6e3c:	c2 58       	subi	r28, 0x82	; 130
    6e3e:	de 4f       	sbci	r29, 0xFE	; 254
    6e40:	38 81       	ld	r19, Y
    6e42:	ce 57       	subi	r28, 0x7E	; 126
    6e44:	d1 40       	sbci	r29, 0x01	; 1
    6e46:	31 50       	subi	r19, 0x01	; 1
    6e48:	c2 58       	subi	r28, 0x82	; 130
    6e4a:	de 4f       	sbci	r29, 0xFE	; 254
    6e4c:	38 83       	st	Y, r19
    6e4e:	ce 57       	subi	r28, 0x7E	; 126
    6e50:	d1 40       	sbci	r29, 0x01	; 1
    6e52:	c2 58       	subi	r28, 0x82	; 130
    6e54:	de 4f       	sbci	r29, 0xFE	; 254
    6e56:	88 81       	ld	r24, Y
    6e58:	ce 57       	subi	r28, 0x7E	; 126
    6e5a:	d1 40       	sbci	r29, 0x01	; 1
    6e5c:	88 23       	and	r24, r24
    6e5e:	21 f6       	brne	.-120    	; 0x6de8 <enuDrawChar+0x1b9a>
            	for(int i = 0 ; i<5;i++){
    6e60:	1a 86       	std	Y+10, r1	; 0x0a
    6e62:	19 86       	std	Y+9, r1	; 0x09
    6e64:	10 c0       	rjmp	.+32     	; 0x6e86 <enuDrawChar+0x1c38>
            		enuWriteData(H[i]);
    6e66:	29 85       	ldd	r18, Y+9	; 0x09
    6e68:	3a 85       	ldd	r19, Y+10	; 0x0a
    6e6a:	ce 01       	movw	r24, r28
    6e6c:	85 53       	subi	r24, 0x35	; 53
    6e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    6e70:	fc 01       	movw	r30, r24
    6e72:	e2 0f       	add	r30, r18
    6e74:	f3 1f       	adc	r31, r19
    6e76:	80 81       	ld	r24, Z
    6e78:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
            			  0x01,
            			  0x01,
            			  0x01,
            			  0x01,
            			  0x01};
            	for(int i = 0 ; i<5;i++){
    6e7c:	89 85       	ldd	r24, Y+9	; 0x09
    6e7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6e80:	01 96       	adiw	r24, 0x01	; 1
    6e82:	9a 87       	std	Y+10, r25	; 0x0a
    6e84:	89 87       	std	Y+9, r24	; 0x09
    6e86:	89 85       	ldd	r24, Y+9	; 0x09
    6e88:	9a 85       	ldd	r25, Y+10	; 0x0a
    6e8a:	85 30       	cpi	r24, 0x05	; 5
    6e8c:	91 05       	cpc	r25, r1
    6e8e:	5c f3       	brlt	.-42     	; 0x6e66 <enuDrawChar+0x1c18>
    6e90:	af c1       	rjmp	.+862    	; 0x71f0 <enuDrawChar+0x1fa2>
                    			  0x10,
                    			  0x10,
                    			  0x10,
                    			  0x10,
                    			  0x10,
                    			  0x10};
    6e92:	ce 01       	movw	r24, r28
    6e94:	8d 52       	subi	r24, 0x2D	; 45
    6e96:	9f 4f       	sbci	r25, 0xFF	; 255
    6e98:	c1 58       	subi	r28, 0x81	; 129
    6e9a:	de 4f       	sbci	r29, 0xFE	; 254
    6e9c:	99 83       	std	Y+1, r25	; 0x01
    6e9e:	88 83       	st	Y, r24
    6ea0:	cf 57       	subi	r28, 0x7F	; 127
    6ea2:	d1 40       	sbci	r29, 0x01	; 1
    6ea4:	ee ed       	ldi	r30, 0xDE	; 222
    6ea6:	f0 e0       	ldi	r31, 0x00	; 0
    6ea8:	cf 57       	subi	r28, 0x7F	; 127
    6eaa:	de 4f       	sbci	r29, 0xFE	; 254
    6eac:	f9 83       	std	Y+1, r31	; 0x01
    6eae:	e8 83       	st	Y, r30
    6eb0:	c1 58       	subi	r28, 0x81	; 129
    6eb2:	d1 40       	sbci	r29, 0x01	; 1
    6eb4:	f8 e0       	ldi	r31, 0x08	; 8
    6eb6:	cd 57       	subi	r28, 0x7D	; 125
    6eb8:	de 4f       	sbci	r29, 0xFE	; 254
    6eba:	f8 83       	st	Y, r31
    6ebc:	c3 58       	subi	r28, 0x83	; 131
    6ebe:	d1 40       	sbci	r29, 0x01	; 1
    6ec0:	cf 57       	subi	r28, 0x7F	; 127
    6ec2:	de 4f       	sbci	r29, 0xFE	; 254
    6ec4:	e8 81       	ld	r30, Y
    6ec6:	f9 81       	ldd	r31, Y+1	; 0x01
    6ec8:	c1 58       	subi	r28, 0x81	; 129
    6eca:	d1 40       	sbci	r29, 0x01	; 1
    6ecc:	00 80       	ld	r0, Z
    6ece:	cf 57       	subi	r28, 0x7F	; 127
    6ed0:	de 4f       	sbci	r29, 0xFE	; 254
    6ed2:	28 81       	ld	r18, Y
    6ed4:	39 81       	ldd	r19, Y+1	; 0x01
    6ed6:	c1 58       	subi	r28, 0x81	; 129
    6ed8:	d1 40       	sbci	r29, 0x01	; 1
    6eda:	2f 5f       	subi	r18, 0xFF	; 255
    6edc:	3f 4f       	sbci	r19, 0xFF	; 255
    6ede:	cf 57       	subi	r28, 0x7F	; 127
    6ee0:	de 4f       	sbci	r29, 0xFE	; 254
    6ee2:	39 83       	std	Y+1, r19	; 0x01
    6ee4:	28 83       	st	Y, r18
    6ee6:	c1 58       	subi	r28, 0x81	; 129
    6ee8:	d1 40       	sbci	r29, 0x01	; 1
    6eea:	c1 58       	subi	r28, 0x81	; 129
    6eec:	de 4f       	sbci	r29, 0xFE	; 254
    6eee:	e8 81       	ld	r30, Y
    6ef0:	f9 81       	ldd	r31, Y+1	; 0x01
    6ef2:	cf 57       	subi	r28, 0x7F	; 127
    6ef4:	d1 40       	sbci	r29, 0x01	; 1
    6ef6:	00 82       	st	Z, r0
    6ef8:	c1 58       	subi	r28, 0x81	; 129
    6efa:	de 4f       	sbci	r29, 0xFE	; 254
    6efc:	28 81       	ld	r18, Y
    6efe:	39 81       	ldd	r19, Y+1	; 0x01
    6f00:	cf 57       	subi	r28, 0x7F	; 127
    6f02:	d1 40       	sbci	r29, 0x01	; 1
    6f04:	2f 5f       	subi	r18, 0xFF	; 255
    6f06:	3f 4f       	sbci	r19, 0xFF	; 255
    6f08:	c1 58       	subi	r28, 0x81	; 129
    6f0a:	de 4f       	sbci	r29, 0xFE	; 254
    6f0c:	39 83       	std	Y+1, r19	; 0x01
    6f0e:	28 83       	st	Y, r18
    6f10:	cf 57       	subi	r28, 0x7F	; 127
    6f12:	d1 40       	sbci	r29, 0x01	; 1
    6f14:	cd 57       	subi	r28, 0x7D	; 125
    6f16:	de 4f       	sbci	r29, 0xFE	; 254
    6f18:	38 81       	ld	r19, Y
    6f1a:	c3 58       	subi	r28, 0x83	; 131
    6f1c:	d1 40       	sbci	r29, 0x01	; 1
    6f1e:	31 50       	subi	r19, 0x01	; 1
    6f20:	cd 57       	subi	r28, 0x7D	; 125
    6f22:	de 4f       	sbci	r29, 0xFE	; 254
    6f24:	38 83       	st	Y, r19
    6f26:	c3 58       	subi	r28, 0x83	; 131
    6f28:	d1 40       	sbci	r29, 0x01	; 1
    6f2a:	cd 57       	subi	r28, 0x7D	; 125
    6f2c:	de 4f       	sbci	r29, 0xFE	; 254
    6f2e:	88 81       	ld	r24, Y
    6f30:	c3 58       	subi	r28, 0x83	; 131
    6f32:	d1 40       	sbci	r29, 0x01	; 1
    6f34:	88 23       	and	r24, r24
    6f36:	21 f6       	brne	.-120    	; 0x6ec0 <enuDrawChar+0x1c72>
                    	for(int i = 0 ; i<5;i++){
    6f38:	18 86       	std	Y+8, r1	; 0x08
    6f3a:	1f 82       	std	Y+7, r1	; 0x07
    6f3c:	10 c0       	rjmp	.+32     	; 0x6f5e <enuDrawChar+0x1d10>
                    		enuWriteData(L[i]);
    6f3e:	2f 81       	ldd	r18, Y+7	; 0x07
    6f40:	38 85       	ldd	r19, Y+8	; 0x08
    6f42:	ce 01       	movw	r24, r28
    6f44:	8d 52       	subi	r24, 0x2D	; 45
    6f46:	9f 4f       	sbci	r25, 0xFF	; 255
    6f48:	fc 01       	movw	r30, r24
    6f4a:	e2 0f       	add	r30, r18
    6f4c:	f3 1f       	adc	r31, r19
    6f4e:	80 81       	ld	r24, Z
    6f50:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
                    			  0x10,
                    			  0x10,
                    			  0x10,
                    			  0x10,
                    			  0x10};
                    	for(int i = 0 ; i<5;i++){
    6f54:	8f 81       	ldd	r24, Y+7	; 0x07
    6f56:	98 85       	ldd	r25, Y+8	; 0x08
    6f58:	01 96       	adiw	r24, 0x01	; 1
    6f5a:	98 87       	std	Y+8, r25	; 0x08
    6f5c:	8f 83       	std	Y+7, r24	; 0x07
    6f5e:	8f 81       	ldd	r24, Y+7	; 0x07
    6f60:	98 85       	ldd	r25, Y+8	; 0x08
    6f62:	85 30       	cpi	r24, 0x05	; 5
    6f64:	91 05       	cpc	r25, r1
    6f66:	5c f3       	brlt	.-42     	; 0x6f3e <enuDrawChar+0x1cf0>
    6f68:	43 c1       	rjmp	.+646    	; 0x71f0 <enuDrawChar+0x1fa2>
                    	u8 R[5]={
                    			  0x01,
                    			  0x01,
                    			  0x1F,
                    			  0x10,
                    			  0x10};
    6f6a:	ce 01       	movw	r24, r28
    6f6c:	85 52       	subi	r24, 0x25	; 37
    6f6e:	9f 4f       	sbci	r25, 0xFF	; 255
    6f70:	cc 57       	subi	r28, 0x7C	; 124
    6f72:	de 4f       	sbci	r29, 0xFE	; 254
    6f74:	99 83       	std	Y+1, r25	; 0x01
    6f76:	88 83       	st	Y, r24
    6f78:	c4 58       	subi	r28, 0x84	; 132
    6f7a:	d1 40       	sbci	r29, 0x01	; 1
    6f7c:	e9 ed       	ldi	r30, 0xD9	; 217
    6f7e:	f0 e0       	ldi	r31, 0x00	; 0
    6f80:	ca 57       	subi	r28, 0x7A	; 122
    6f82:	de 4f       	sbci	r29, 0xFE	; 254
    6f84:	f9 83       	std	Y+1, r31	; 0x01
    6f86:	e8 83       	st	Y, r30
    6f88:	c6 58       	subi	r28, 0x86	; 134
    6f8a:	d1 40       	sbci	r29, 0x01	; 1
    6f8c:	f5 e0       	ldi	r31, 0x05	; 5
    6f8e:	c8 57       	subi	r28, 0x78	; 120
    6f90:	de 4f       	sbci	r29, 0xFE	; 254
    6f92:	f8 83       	st	Y, r31
    6f94:	c8 58       	subi	r28, 0x88	; 136
    6f96:	d1 40       	sbci	r29, 0x01	; 1
    6f98:	ca 57       	subi	r28, 0x7A	; 122
    6f9a:	de 4f       	sbci	r29, 0xFE	; 254
    6f9c:	e8 81       	ld	r30, Y
    6f9e:	f9 81       	ldd	r31, Y+1	; 0x01
    6fa0:	c6 58       	subi	r28, 0x86	; 134
    6fa2:	d1 40       	sbci	r29, 0x01	; 1
    6fa4:	00 80       	ld	r0, Z
    6fa6:	ca 57       	subi	r28, 0x7A	; 122
    6fa8:	de 4f       	sbci	r29, 0xFE	; 254
    6faa:	28 81       	ld	r18, Y
    6fac:	39 81       	ldd	r19, Y+1	; 0x01
    6fae:	c6 58       	subi	r28, 0x86	; 134
    6fb0:	d1 40       	sbci	r29, 0x01	; 1
    6fb2:	2f 5f       	subi	r18, 0xFF	; 255
    6fb4:	3f 4f       	sbci	r19, 0xFF	; 255
    6fb6:	ca 57       	subi	r28, 0x7A	; 122
    6fb8:	de 4f       	sbci	r29, 0xFE	; 254
    6fba:	39 83       	std	Y+1, r19	; 0x01
    6fbc:	28 83       	st	Y, r18
    6fbe:	c6 58       	subi	r28, 0x86	; 134
    6fc0:	d1 40       	sbci	r29, 0x01	; 1
    6fc2:	cc 57       	subi	r28, 0x7C	; 124
    6fc4:	de 4f       	sbci	r29, 0xFE	; 254
    6fc6:	e8 81       	ld	r30, Y
    6fc8:	f9 81       	ldd	r31, Y+1	; 0x01
    6fca:	c4 58       	subi	r28, 0x84	; 132
    6fcc:	d1 40       	sbci	r29, 0x01	; 1
    6fce:	00 82       	st	Z, r0
    6fd0:	cc 57       	subi	r28, 0x7C	; 124
    6fd2:	de 4f       	sbci	r29, 0xFE	; 254
    6fd4:	28 81       	ld	r18, Y
    6fd6:	39 81       	ldd	r19, Y+1	; 0x01
    6fd8:	c4 58       	subi	r28, 0x84	; 132
    6fda:	d1 40       	sbci	r29, 0x01	; 1
    6fdc:	2f 5f       	subi	r18, 0xFF	; 255
    6fde:	3f 4f       	sbci	r19, 0xFF	; 255
    6fe0:	cc 57       	subi	r28, 0x7C	; 124
    6fe2:	de 4f       	sbci	r29, 0xFE	; 254
    6fe4:	39 83       	std	Y+1, r19	; 0x01
    6fe6:	28 83       	st	Y, r18
    6fe8:	c4 58       	subi	r28, 0x84	; 132
    6fea:	d1 40       	sbci	r29, 0x01	; 1
    6fec:	c8 57       	subi	r28, 0x78	; 120
    6fee:	de 4f       	sbci	r29, 0xFE	; 254
    6ff0:	38 81       	ld	r19, Y
    6ff2:	c8 58       	subi	r28, 0x88	; 136
    6ff4:	d1 40       	sbci	r29, 0x01	; 1
    6ff6:	31 50       	subi	r19, 0x01	; 1
    6ff8:	c8 57       	subi	r28, 0x78	; 120
    6ffa:	de 4f       	sbci	r29, 0xFE	; 254
    6ffc:	38 83       	st	Y, r19
    6ffe:	c8 58       	subi	r28, 0x88	; 136
    7000:	d1 40       	sbci	r29, 0x01	; 1
    7002:	c8 57       	subi	r28, 0x78	; 120
    7004:	de 4f       	sbci	r29, 0xFE	; 254
    7006:	88 81       	ld	r24, Y
    7008:	c8 58       	subi	r28, 0x88	; 136
    700a:	d1 40       	sbci	r29, 0x01	; 1
    700c:	88 23       	and	r24, r24
    700e:	21 f6       	brne	.-120    	; 0x6f98 <enuDrawChar+0x1d4a>
                    	for(int i = 0 ; i<5;i++){
    7010:	1e 82       	std	Y+6, r1	; 0x06
    7012:	1d 82       	std	Y+5, r1	; 0x05
    7014:	10 c0       	rjmp	.+32     	; 0x7036 <enuDrawChar+0x1de8>
                    		enuWriteData(R[i]);
    7016:	2d 81       	ldd	r18, Y+5	; 0x05
    7018:	3e 81       	ldd	r19, Y+6	; 0x06
    701a:	ce 01       	movw	r24, r28
    701c:	85 52       	subi	r24, 0x25	; 37
    701e:	9f 4f       	sbci	r25, 0xFF	; 255
    7020:	fc 01       	movw	r30, r24
    7022:	e2 0f       	add	r30, r18
    7024:	f3 1f       	adc	r31, r19
    7026:	80 81       	ld	r24, Z
    7028:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
                    			  0x01,
                    			  0x01,
                    			  0x1F,
                    			  0x10,
                    			  0x10};
                    	for(int i = 0 ; i<5;i++){
    702c:	8d 81       	ldd	r24, Y+5	; 0x05
    702e:	9e 81       	ldd	r25, Y+6	; 0x06
    7030:	01 96       	adiw	r24, 0x01	; 1
    7032:	9e 83       	std	Y+6, r25	; 0x06
    7034:	8d 83       	std	Y+5, r24	; 0x05
    7036:	8d 81       	ldd	r24, Y+5	; 0x05
    7038:	9e 81       	ldd	r25, Y+6	; 0x06
    703a:	85 30       	cpi	r24, 0x05	; 5
    703c:	91 05       	cpc	r25, r1
    703e:	5c f3       	brlt	.-42     	; 0x7016 <enuDrawChar+0x1dc8>
    7040:	d7 c0       	rjmp	.+430    	; 0x71f0 <enuDrawChar+0x1fa2>
                    	u8 F[5]={0x10,
                    			  0x10,
                    			  0x1F,
                    			  0x01,
                    			  0x01,
                    			  };
    7042:	ce 01       	movw	r24, r28
    7044:	80 52       	subi	r24, 0x20	; 32
    7046:	9f 4f       	sbci	r25, 0xFF	; 255
    7048:	c7 57       	subi	r28, 0x77	; 119
    704a:	de 4f       	sbci	r29, 0xFE	; 254
    704c:	99 83       	std	Y+1, r25	; 0x01
    704e:	88 83       	st	Y, r24
    7050:	c9 58       	subi	r28, 0x89	; 137
    7052:	d1 40       	sbci	r29, 0x01	; 1
    7054:	e4 ed       	ldi	r30, 0xD4	; 212
    7056:	f0 e0       	ldi	r31, 0x00	; 0
    7058:	c5 57       	subi	r28, 0x75	; 117
    705a:	de 4f       	sbci	r29, 0xFE	; 254
    705c:	f9 83       	std	Y+1, r31	; 0x01
    705e:	e8 83       	st	Y, r30
    7060:	cb 58       	subi	r28, 0x8B	; 139
    7062:	d1 40       	sbci	r29, 0x01	; 1
    7064:	f5 e0       	ldi	r31, 0x05	; 5
    7066:	c3 57       	subi	r28, 0x73	; 115
    7068:	de 4f       	sbci	r29, 0xFE	; 254
    706a:	f8 83       	st	Y, r31
    706c:	cd 58       	subi	r28, 0x8D	; 141
    706e:	d1 40       	sbci	r29, 0x01	; 1
    7070:	c5 57       	subi	r28, 0x75	; 117
    7072:	de 4f       	sbci	r29, 0xFE	; 254
    7074:	e8 81       	ld	r30, Y
    7076:	f9 81       	ldd	r31, Y+1	; 0x01
    7078:	cb 58       	subi	r28, 0x8B	; 139
    707a:	d1 40       	sbci	r29, 0x01	; 1
    707c:	00 80       	ld	r0, Z
    707e:	c5 57       	subi	r28, 0x75	; 117
    7080:	de 4f       	sbci	r29, 0xFE	; 254
    7082:	28 81       	ld	r18, Y
    7084:	39 81       	ldd	r19, Y+1	; 0x01
    7086:	cb 58       	subi	r28, 0x8B	; 139
    7088:	d1 40       	sbci	r29, 0x01	; 1
    708a:	2f 5f       	subi	r18, 0xFF	; 255
    708c:	3f 4f       	sbci	r19, 0xFF	; 255
    708e:	c5 57       	subi	r28, 0x75	; 117
    7090:	de 4f       	sbci	r29, 0xFE	; 254
    7092:	39 83       	std	Y+1, r19	; 0x01
    7094:	28 83       	st	Y, r18
    7096:	cb 58       	subi	r28, 0x8B	; 139
    7098:	d1 40       	sbci	r29, 0x01	; 1
    709a:	c7 57       	subi	r28, 0x77	; 119
    709c:	de 4f       	sbci	r29, 0xFE	; 254
    709e:	e8 81       	ld	r30, Y
    70a0:	f9 81       	ldd	r31, Y+1	; 0x01
    70a2:	c9 58       	subi	r28, 0x89	; 137
    70a4:	d1 40       	sbci	r29, 0x01	; 1
    70a6:	00 82       	st	Z, r0
    70a8:	c7 57       	subi	r28, 0x77	; 119
    70aa:	de 4f       	sbci	r29, 0xFE	; 254
    70ac:	28 81       	ld	r18, Y
    70ae:	39 81       	ldd	r19, Y+1	; 0x01
    70b0:	c9 58       	subi	r28, 0x89	; 137
    70b2:	d1 40       	sbci	r29, 0x01	; 1
    70b4:	2f 5f       	subi	r18, 0xFF	; 255
    70b6:	3f 4f       	sbci	r19, 0xFF	; 255
    70b8:	c7 57       	subi	r28, 0x77	; 119
    70ba:	de 4f       	sbci	r29, 0xFE	; 254
    70bc:	39 83       	std	Y+1, r19	; 0x01
    70be:	28 83       	st	Y, r18
    70c0:	c9 58       	subi	r28, 0x89	; 137
    70c2:	d1 40       	sbci	r29, 0x01	; 1
    70c4:	c3 57       	subi	r28, 0x73	; 115
    70c6:	de 4f       	sbci	r29, 0xFE	; 254
    70c8:	38 81       	ld	r19, Y
    70ca:	cd 58       	subi	r28, 0x8D	; 141
    70cc:	d1 40       	sbci	r29, 0x01	; 1
    70ce:	31 50       	subi	r19, 0x01	; 1
    70d0:	c3 57       	subi	r28, 0x73	; 115
    70d2:	de 4f       	sbci	r29, 0xFE	; 254
    70d4:	38 83       	st	Y, r19
    70d6:	cd 58       	subi	r28, 0x8D	; 141
    70d8:	d1 40       	sbci	r29, 0x01	; 1
    70da:	c3 57       	subi	r28, 0x73	; 115
    70dc:	de 4f       	sbci	r29, 0xFE	; 254
    70de:	88 81       	ld	r24, Y
    70e0:	cd 58       	subi	r28, 0x8D	; 141
    70e2:	d1 40       	sbci	r29, 0x01	; 1
    70e4:	88 23       	and	r24, r24
    70e6:	21 f6       	brne	.-120    	; 0x7070 <enuDrawChar+0x1e22>
                    	for(int i = 0 ; i<5;i++){
    70e8:	1c 82       	std	Y+4, r1	; 0x04
    70ea:	1b 82       	std	Y+3, r1	; 0x03
    70ec:	10 c0       	rjmp	.+32     	; 0x710e <enuDrawChar+0x1ec0>
                    		enuWriteData(F[i]);
    70ee:	2b 81       	ldd	r18, Y+3	; 0x03
    70f0:	3c 81       	ldd	r19, Y+4	; 0x04
    70f2:	ce 01       	movw	r24, r28
    70f4:	80 52       	subi	r24, 0x20	; 32
    70f6:	9f 4f       	sbci	r25, 0xFF	; 255
    70f8:	fc 01       	movw	r30, r24
    70fa:	e2 0f       	add	r30, r18
    70fc:	f3 1f       	adc	r31, r19
    70fe:	80 81       	ld	r24, Z
    7100:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
                    			  0x10,
                    			  0x1F,
                    			  0x01,
                    			  0x01,
                    			  };
                    	for(int i = 0 ; i<5;i++){
    7104:	8b 81       	ldd	r24, Y+3	; 0x03
    7106:	9c 81       	ldd	r25, Y+4	; 0x04
    7108:	01 96       	adiw	r24, 0x01	; 1
    710a:	9c 83       	std	Y+4, r25	; 0x04
    710c:	8b 83       	std	Y+3, r24	; 0x03
    710e:	8b 81       	ldd	r24, Y+3	; 0x03
    7110:	9c 81       	ldd	r25, Y+4	; 0x04
    7112:	85 30       	cpi	r24, 0x05	; 5
    7114:	91 05       	cpc	r25, r1
    7116:	5c f3       	brlt	.-42     	; 0x70ee <enuDrawChar+0x1ea0>
    7118:	6b c0       	rjmp	.+214    	; 0x71f0 <enuDrawChar+0x1fa2>
                    		enuWriteData(F[i]);
                    	}
                    	break;
        case '-': ;
            	u8 Z10[5]={0x08, 0x08, 0x08, 0x08, 0x08};
    711a:	ce 01       	movw	r24, r28
    711c:	8b 51       	subi	r24, 0x1B	; 27
    711e:	9f 4f       	sbci	r25, 0xFF	; 255
    7120:	c2 57       	subi	r28, 0x72	; 114
    7122:	de 4f       	sbci	r29, 0xFE	; 254
    7124:	99 83       	std	Y+1, r25	; 0x01
    7126:	88 83       	st	Y, r24
    7128:	ce 58       	subi	r28, 0x8E	; 142
    712a:	d1 40       	sbci	r29, 0x01	; 1
    712c:	ef ec       	ldi	r30, 0xCF	; 207
    712e:	f0 e0       	ldi	r31, 0x00	; 0
    7130:	c0 57       	subi	r28, 0x70	; 112
    7132:	de 4f       	sbci	r29, 0xFE	; 254
    7134:	f9 83       	std	Y+1, r31	; 0x01
    7136:	e8 83       	st	Y, r30
    7138:	c0 59       	subi	r28, 0x90	; 144
    713a:	d1 40       	sbci	r29, 0x01	; 1
    713c:	f5 e0       	ldi	r31, 0x05	; 5
    713e:	ce 56       	subi	r28, 0x6E	; 110
    7140:	de 4f       	sbci	r29, 0xFE	; 254
    7142:	f8 83       	st	Y, r31
    7144:	c2 59       	subi	r28, 0x92	; 146
    7146:	d1 40       	sbci	r29, 0x01	; 1
    7148:	c0 57       	subi	r28, 0x70	; 112
    714a:	de 4f       	sbci	r29, 0xFE	; 254
    714c:	e8 81       	ld	r30, Y
    714e:	f9 81       	ldd	r31, Y+1	; 0x01
    7150:	c0 59       	subi	r28, 0x90	; 144
    7152:	d1 40       	sbci	r29, 0x01	; 1
    7154:	00 80       	ld	r0, Z
    7156:	c0 57       	subi	r28, 0x70	; 112
    7158:	de 4f       	sbci	r29, 0xFE	; 254
    715a:	28 81       	ld	r18, Y
    715c:	39 81       	ldd	r19, Y+1	; 0x01
    715e:	c0 59       	subi	r28, 0x90	; 144
    7160:	d1 40       	sbci	r29, 0x01	; 1
    7162:	2f 5f       	subi	r18, 0xFF	; 255
    7164:	3f 4f       	sbci	r19, 0xFF	; 255
    7166:	c0 57       	subi	r28, 0x70	; 112
    7168:	de 4f       	sbci	r29, 0xFE	; 254
    716a:	39 83       	std	Y+1, r19	; 0x01
    716c:	28 83       	st	Y, r18
    716e:	c0 59       	subi	r28, 0x90	; 144
    7170:	d1 40       	sbci	r29, 0x01	; 1
    7172:	c2 57       	subi	r28, 0x72	; 114
    7174:	de 4f       	sbci	r29, 0xFE	; 254
    7176:	e8 81       	ld	r30, Y
    7178:	f9 81       	ldd	r31, Y+1	; 0x01
    717a:	ce 58       	subi	r28, 0x8E	; 142
    717c:	d1 40       	sbci	r29, 0x01	; 1
    717e:	00 82       	st	Z, r0
    7180:	c2 57       	subi	r28, 0x72	; 114
    7182:	de 4f       	sbci	r29, 0xFE	; 254
    7184:	28 81       	ld	r18, Y
    7186:	39 81       	ldd	r19, Y+1	; 0x01
    7188:	ce 58       	subi	r28, 0x8E	; 142
    718a:	d1 40       	sbci	r29, 0x01	; 1
    718c:	2f 5f       	subi	r18, 0xFF	; 255
    718e:	3f 4f       	sbci	r19, 0xFF	; 255
    7190:	c2 57       	subi	r28, 0x72	; 114
    7192:	de 4f       	sbci	r29, 0xFE	; 254
    7194:	39 83       	std	Y+1, r19	; 0x01
    7196:	28 83       	st	Y, r18
    7198:	ce 58       	subi	r28, 0x8E	; 142
    719a:	d1 40       	sbci	r29, 0x01	; 1
    719c:	ce 56       	subi	r28, 0x6E	; 110
    719e:	de 4f       	sbci	r29, 0xFE	; 254
    71a0:	38 81       	ld	r19, Y
    71a2:	c2 59       	subi	r28, 0x92	; 146
    71a4:	d1 40       	sbci	r29, 0x01	; 1
    71a6:	31 50       	subi	r19, 0x01	; 1
    71a8:	ce 56       	subi	r28, 0x6E	; 110
    71aa:	de 4f       	sbci	r29, 0xFE	; 254
    71ac:	38 83       	st	Y, r19
    71ae:	c2 59       	subi	r28, 0x92	; 146
    71b0:	d1 40       	sbci	r29, 0x01	; 1
    71b2:	ce 56       	subi	r28, 0x6E	; 110
    71b4:	de 4f       	sbci	r29, 0xFE	; 254
    71b6:	88 81       	ld	r24, Y
    71b8:	c2 59       	subi	r28, 0x92	; 146
    71ba:	d1 40       	sbci	r29, 0x01	; 1
    71bc:	88 23       	and	r24, r24
    71be:	21 f6       	brne	.-120    	; 0x7148 <enuDrawChar+0x1efa>
            	for(int i = 0 ; i<5;i++){
    71c0:	1a 82       	std	Y+2, r1	; 0x02
    71c2:	19 82       	std	Y+1, r1	; 0x01
    71c4:	10 c0       	rjmp	.+32     	; 0x71e6 <enuDrawChar+0x1f98>
            		enuWriteData(Z10[i]);
    71c6:	29 81       	ldd	r18, Y+1	; 0x01
    71c8:	3a 81       	ldd	r19, Y+2	; 0x02
    71ca:	ce 01       	movw	r24, r28
    71cc:	8b 51       	subi	r24, 0x1B	; 27
    71ce:	9f 4f       	sbci	r25, 0xFF	; 255
    71d0:	fc 01       	movw	r30, r24
    71d2:	e2 0f       	add	r30, r18
    71d4:	f3 1f       	adc	r31, r19
    71d6:	80 81       	ld	r24, Z
    71d8:	0e 94 8b 24 	call	0x4916	; 0x4916 <enuWriteData>
                    		enuWriteData(F[i]);
                    	}
                    	break;
        case '-': ;
            	u8 Z10[5]={0x08, 0x08, 0x08, 0x08, 0x08};
            	for(int i = 0 ; i<5;i++){
    71dc:	89 81       	ldd	r24, Y+1	; 0x01
    71de:	9a 81       	ldd	r25, Y+2	; 0x02
    71e0:	01 96       	adiw	r24, 0x01	; 1
    71e2:	9a 83       	std	Y+2, r25	; 0x02
    71e4:	89 83       	std	Y+1, r24	; 0x01
    71e6:	89 81       	ldd	r24, Y+1	; 0x01
    71e8:	9a 81       	ldd	r25, Y+2	; 0x02
    71ea:	85 30       	cpi	r24, 0x05	; 5
    71ec:	91 05       	cpc	r25, r1
    71ee:	5c f3       	brlt	.-42     	; 0x71c6 <enuDrawChar+0x1f78>
	}




}
    71f0:	ce 56       	subi	r28, 0x6E	; 110
    71f2:	de 4f       	sbci	r29, 0xFE	; 254
    71f4:	0f b6       	in	r0, 0x3f	; 63
    71f6:	f8 94       	cli
    71f8:	de bf       	out	0x3e, r29	; 62
    71fa:	0f be       	out	0x3f, r0	; 63
    71fc:	cd bf       	out	0x3d, r28	; 61
    71fe:	cf 91       	pop	r28
    7200:	df 91       	pop	r29
    7202:	08 95       	ret

00007204 <GLCD_enuSendString>:
ES_t GLCD_enuSendString(const char * data){
    7204:	df 93       	push	r29
    7206:	cf 93       	push	r28
    7208:	00 d0       	rcall	.+0      	; 0x720a <GLCD_enuSendString+0x6>
    720a:	0f 92       	push	r0
    720c:	cd b7       	in	r28, 0x3d	; 61
    720e:	de b7       	in	r29, 0x3e	; 62
    7210:	9a 83       	std	Y+2, r25	; 0x02
    7212:	89 83       	std	Y+1, r24	; 0x01
    7214:	0b c0       	rjmp	.+22     	; 0x722c <GLCD_enuSendString+0x28>


	 while (*data)
	    {
		 enuDrawChar(*data++);
    7216:	e9 81       	ldd	r30, Y+1	; 0x01
    7218:	fa 81       	ldd	r31, Y+2	; 0x02
    721a:	20 81       	ld	r18, Z
    721c:	89 81       	ldd	r24, Y+1	; 0x01
    721e:	9a 81       	ldd	r25, Y+2	; 0x02
    7220:	01 96       	adiw	r24, 0x01	; 1
    7222:	9a 83       	std	Y+2, r25	; 0x02
    7224:	89 83       	std	Y+1, r24	; 0x01
    7226:	82 2f       	mov	r24, r18
    7228:	0e 94 27 29 	call	0x524e	; 0x524e <enuDrawChar>

}
ES_t GLCD_enuSendString(const char * data){


	 while (*data)
    722c:	e9 81       	ldd	r30, Y+1	; 0x01
    722e:	fa 81       	ldd	r31, Y+2	; 0x02
    7230:	80 81       	ld	r24, Z
    7232:	88 23       	and	r24, r24
    7234:	81 f7       	brne	.-32     	; 0x7216 <GLCD_enuSendString+0x12>
	    {
		 enuDrawChar(*data++);

	    }
	 LOCAL_u8Address=0;
    7236:	10 92 b5 01 	sts	0x01B5, r1




}
    723a:	0f 90       	pop	r0
    723c:	0f 90       	pop	r0
    723e:	0f 90       	pop	r0
    7240:	cf 91       	pop	r28
    7242:	df 91       	pop	r29
    7244:	08 95       	ret

00007246 <GLCD_DisplayNum>:
ES_t GLCD_DisplayNum(u16 Copy_u16num){
    7246:	df 93       	push	r29
    7248:	cf 93       	push	r28
    724a:	cd b7       	in	r28, 0x3d	; 61
    724c:	de b7       	in	r29, 0x3e	; 62
    724e:	2c 97       	sbiw	r28, 0x0c	; 12
    7250:	0f b6       	in	r0, 0x3f	; 63
    7252:	f8 94       	cli
    7254:	de bf       	out	0x3e, r29	; 62
    7256:	0f be       	out	0x3f, r0	; 63
    7258:	cd bf       	out	0x3d, r28	; 61
    725a:	9b 87       	std	Y+11, r25	; 0x0b
    725c:	8a 87       	std	Y+10, r24	; 0x0a
if (Copy_u16num < 0) {
	    enuDrawChar('-');
		Copy_u16num = -1 * Copy_u16num;
	}
	u16 u8Local_Digit = 0;
    725e:	1c 82       	std	Y+4, r1	; 0x04
    7260:	1b 82       	std	Y+3, r1	; 0x03
	char str_reversed[5] = "";
    7262:	1d 82       	std	Y+5, r1	; 0x05
    7264:	1e 82       	std	Y+6, r1	; 0x06
    7266:	1f 82       	std	Y+7, r1	; 0x07
    7268:	18 86       	std	Y+8, r1	; 0x08
    726a:	19 86       	std	Y+9, r1	; 0x09
	char* str_ptr = str_reversed;
    726c:	ce 01       	movw	r24, r28
    726e:	05 96       	adiw	r24, 0x05	; 5
    7270:	9a 83       	std	Y+2, r25	; 0x02
    7272:	89 83       	std	Y+1, r24	; 0x01
	do {
		u8Local_Digit = Copy_u16num %10;
    7274:	8a 85       	ldd	r24, Y+10	; 0x0a
    7276:	9b 85       	ldd	r25, Y+11	; 0x0b
    7278:	2a e0       	ldi	r18, 0x0A	; 10
    727a:	30 e0       	ldi	r19, 0x00	; 0
    727c:	b9 01       	movw	r22, r18
    727e:	0e 94 56 3c 	call	0x78ac	; 0x78ac <__udivmodhi4>
    7282:	9c 83       	std	Y+4, r25	; 0x04
    7284:	8b 83       	std	Y+3, r24	; 0x03
		*str_ptr = (char)(48 + u8Local_Digit); /* 48 is the ASCII code of '0' */
    7286:	8b 81       	ldd	r24, Y+3	; 0x03
    7288:	80 5d       	subi	r24, 0xD0	; 208
    728a:	e9 81       	ldd	r30, Y+1	; 0x01
    728c:	fa 81       	ldd	r31, Y+2	; 0x02
    728e:	80 83       	st	Z, r24
		Copy_u16num = Copy_u16num/10;
    7290:	8a 85       	ldd	r24, Y+10	; 0x0a
    7292:	9b 85       	ldd	r25, Y+11	; 0x0b
    7294:	2a e0       	ldi	r18, 0x0A	; 10
    7296:	30 e0       	ldi	r19, 0x00	; 0
    7298:	b9 01       	movw	r22, r18
    729a:	0e 94 56 3c 	call	0x78ac	; 0x78ac <__udivmodhi4>
    729e:	cb 01       	movw	r24, r22
    72a0:	9b 87       	std	Y+11, r25	; 0x0b
    72a2:	8a 87       	std	Y+10, r24	; 0x0a
		str_ptr++;
    72a4:	89 81       	ldd	r24, Y+1	; 0x01
    72a6:	9a 81       	ldd	r25, Y+2	; 0x02
    72a8:	01 96       	adiw	r24, 0x01	; 1
    72aa:	9a 83       	std	Y+2, r25	; 0x02
    72ac:	89 83       	std	Y+1, r24	; 0x01
	} while (Copy_u16num> 0);
    72ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    72b0:	9b 85       	ldd	r25, Y+11	; 0x0b
    72b2:	00 97       	sbiw	r24, 0x00	; 0
    72b4:	f9 f6       	brne	.-66     	; 0x7274 <GLCD_DisplayNum+0x2e>
	do {
		str_ptr--;
    72b6:	89 81       	ldd	r24, Y+1	; 0x01
    72b8:	9a 81       	ldd	r25, Y+2	; 0x02
    72ba:	01 97       	sbiw	r24, 0x01	; 1
    72bc:	9a 83       	std	Y+2, r25	; 0x02
    72be:	89 83       	std	Y+1, r24	; 0x01
		enuDrawChar(*str_ptr);
    72c0:	e9 81       	ldd	r30, Y+1	; 0x01
    72c2:	fa 81       	ldd	r31, Y+2	; 0x02
    72c4:	80 81       	ld	r24, Z
    72c6:	0e 94 27 29 	call	0x524e	; 0x524e <enuDrawChar>
	} while (str_ptr != str_reversed);
    72ca:	9e 01       	movw	r18, r28
    72cc:	2b 5f       	subi	r18, 0xFB	; 251
    72ce:	3f 4f       	sbci	r19, 0xFF	; 255
    72d0:	89 81       	ldd	r24, Y+1	; 0x01
    72d2:	9a 81       	ldd	r25, Y+2	; 0x02
    72d4:	82 17       	cp	r24, r18
    72d6:	93 07       	cpc	r25, r19
    72d8:	71 f7       	brne	.-36     	; 0x72b6 <GLCD_DisplayNum+0x70>
}
    72da:	2c 96       	adiw	r28, 0x0c	; 12
    72dc:	0f b6       	in	r0, 0x3f	; 63
    72de:	f8 94       	cli
    72e0:	de bf       	out	0x3e, r29	; 62
    72e2:	0f be       	out	0x3f, r0	; 63
    72e4:	cd bf       	out	0x3d, r28	; 61
    72e6:	cf 91       	pop	r28
    72e8:	df 91       	pop	r29
    72ea:	08 95       	ret

000072ec <PWMDRAWER_enuInit>:
#include "../../MCAL/DIO/DIO_int.h"
#include "../../HAL/GLCD/GLCD_int.h"
#include "../../HAL/LCD/LCD_int.h"
#include "../../HAL/ICU/ICU_int.h"
#include<util/delay.h>
ES_t PWMDRAWER_enuInit(void){
    72ec:	df 93       	push	r29
    72ee:	cf 93       	push	r28
    72f0:	cd b7       	in	r28, 0x3d	; 61
    72f2:	de b7       	in	r29, 0x3e	; 62
    72f4:	2f 97       	sbiw	r28, 0x0f	; 15
    72f6:	0f b6       	in	r0, 0x3f	; 63
    72f8:	f8 94       	cli
    72fa:	de bf       	out	0x3e, r29	; 62
    72fc:	0f be       	out	0x3f, r0	; 63
    72fe:	cd bf       	out	0x3d, r28	; 61
	GLCD_enuInit();
    7300:	0e 94 4a 1c 	call	0x3894	; 0x3894 <GLCD_enuInit>
	ICU_vidInit();
    7304:	0e 94 1d 16 	call	0x2c3a	; 0x2c3a <ICU_vidInit>
	GLCD_enuSetAddress(0);
    7308:	80 e0       	ldi	r24, 0x00	; 0
    730a:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSetPage(0);
    730e:	80 e0       	ldi	r24, 0x00	; 0
    7310:	90 e0       	ldi	r25, 0x00	; 0
    7312:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
    7316:	80 e0       	ldi	r24, 0x00	; 0
    7318:	90 e0       	ldi	r25, 0x00	; 0
    731a:	a0 e4       	ldi	r26, 0x40	; 64
    731c:	b0 e4       	ldi	r27, 0x40	; 64
    731e:	8b 87       	std	Y+11, r24	; 0x0b
    7320:	9c 87       	std	Y+12, r25	; 0x0c
    7322:	ad 87       	std	Y+13, r26	; 0x0d
    7324:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7326:	6b 85       	ldd	r22, Y+11	; 0x0b
    7328:	7c 85       	ldd	r23, Y+12	; 0x0c
    732a:	8d 85       	ldd	r24, Y+13	; 0x0d
    732c:	9e 85       	ldd	r25, Y+14	; 0x0e
    732e:	20 e0       	ldi	r18, 0x00	; 0
    7330:	30 e0       	ldi	r19, 0x00	; 0
    7332:	4a e7       	ldi	r20, 0x7A	; 122
    7334:	55 e4       	ldi	r21, 0x45	; 69
    7336:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    733a:	dc 01       	movw	r26, r24
    733c:	cb 01       	movw	r24, r22
    733e:	8f 83       	std	Y+7, r24	; 0x07
    7340:	98 87       	std	Y+8, r25	; 0x08
    7342:	a9 87       	std	Y+9, r26	; 0x09
    7344:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7346:	6f 81       	ldd	r22, Y+7	; 0x07
    7348:	78 85       	ldd	r23, Y+8	; 0x08
    734a:	89 85       	ldd	r24, Y+9	; 0x09
    734c:	9a 85       	ldd	r25, Y+10	; 0x0a
    734e:	20 e0       	ldi	r18, 0x00	; 0
    7350:	30 e0       	ldi	r19, 0x00	; 0
    7352:	40 e8       	ldi	r20, 0x80	; 128
    7354:	5f e3       	ldi	r21, 0x3F	; 63
    7356:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    735a:	88 23       	and	r24, r24
    735c:	2c f4       	brge	.+10     	; 0x7368 <PWMDRAWER_enuInit+0x7c>
		__ticks = 1;
    735e:	81 e0       	ldi	r24, 0x01	; 1
    7360:	90 e0       	ldi	r25, 0x00	; 0
    7362:	9e 83       	std	Y+6, r25	; 0x06
    7364:	8d 83       	std	Y+5, r24	; 0x05
    7366:	3f c0       	rjmp	.+126    	; 0x73e6 <PWMDRAWER_enuInit+0xfa>
	else if (__tmp > 65535)
    7368:	6f 81       	ldd	r22, Y+7	; 0x07
    736a:	78 85       	ldd	r23, Y+8	; 0x08
    736c:	89 85       	ldd	r24, Y+9	; 0x09
    736e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7370:	20 e0       	ldi	r18, 0x00	; 0
    7372:	3f ef       	ldi	r19, 0xFF	; 255
    7374:	4f e7       	ldi	r20, 0x7F	; 127
    7376:	57 e4       	ldi	r21, 0x47	; 71
    7378:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    737c:	18 16       	cp	r1, r24
    737e:	4c f5       	brge	.+82     	; 0x73d2 <PWMDRAWER_enuInit+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7380:	6b 85       	ldd	r22, Y+11	; 0x0b
    7382:	7c 85       	ldd	r23, Y+12	; 0x0c
    7384:	8d 85       	ldd	r24, Y+13	; 0x0d
    7386:	9e 85       	ldd	r25, Y+14	; 0x0e
    7388:	20 e0       	ldi	r18, 0x00	; 0
    738a:	30 e0       	ldi	r19, 0x00	; 0
    738c:	40 e2       	ldi	r20, 0x20	; 32
    738e:	51 e4       	ldi	r21, 0x41	; 65
    7390:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    7394:	dc 01       	movw	r26, r24
    7396:	cb 01       	movw	r24, r22
    7398:	bc 01       	movw	r22, r24
    739a:	cd 01       	movw	r24, r26
    739c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    73a0:	dc 01       	movw	r26, r24
    73a2:	cb 01       	movw	r24, r22
    73a4:	9e 83       	std	Y+6, r25	; 0x06
    73a6:	8d 83       	std	Y+5, r24	; 0x05
    73a8:	0f c0       	rjmp	.+30     	; 0x73c8 <PWMDRAWER_enuInit+0xdc>
    73aa:	80 e9       	ldi	r24, 0x90	; 144
    73ac:	91 e0       	ldi	r25, 0x01	; 1
    73ae:	9c 83       	std	Y+4, r25	; 0x04
    73b0:	8b 83       	std	Y+3, r24	; 0x03
    73b2:	8b 81       	ldd	r24, Y+3	; 0x03
    73b4:	9c 81       	ldd	r25, Y+4	; 0x04
    73b6:	01 97       	sbiw	r24, 0x01	; 1
    73b8:	f1 f7       	brne	.-4      	; 0x73b6 <PWMDRAWER_enuInit+0xca>
    73ba:	9c 83       	std	Y+4, r25	; 0x04
    73bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    73be:	8d 81       	ldd	r24, Y+5	; 0x05
    73c0:	9e 81       	ldd	r25, Y+6	; 0x06
    73c2:	01 97       	sbiw	r24, 0x01	; 1
    73c4:	9e 83       	std	Y+6, r25	; 0x06
    73c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    73c8:	8d 81       	ldd	r24, Y+5	; 0x05
    73ca:	9e 81       	ldd	r25, Y+6	; 0x06
    73cc:	00 97       	sbiw	r24, 0x00	; 0
    73ce:	69 f7       	brne	.-38     	; 0x73aa <PWMDRAWER_enuInit+0xbe>
    73d0:	14 c0       	rjmp	.+40     	; 0x73fa <PWMDRAWER_enuInit+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    73d2:	6f 81       	ldd	r22, Y+7	; 0x07
    73d4:	78 85       	ldd	r23, Y+8	; 0x08
    73d6:	89 85       	ldd	r24, Y+9	; 0x09
    73d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    73da:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    73de:	dc 01       	movw	r26, r24
    73e0:	cb 01       	movw	r24, r22
    73e2:	9e 83       	std	Y+6, r25	; 0x06
    73e4:	8d 83       	std	Y+5, r24	; 0x05
    73e6:	8d 81       	ldd	r24, Y+5	; 0x05
    73e8:	9e 81       	ldd	r25, Y+6	; 0x06
    73ea:	9a 83       	std	Y+2, r25	; 0x02
    73ec:	89 83       	std	Y+1, r24	; 0x01
    73ee:	89 81       	ldd	r24, Y+1	; 0x01
    73f0:	9a 81       	ldd	r25, Y+2	; 0x02
    73f2:	01 97       	sbiw	r24, 0x01	; 1
    73f4:	f1 f7       	brne	.-4      	; 0x73f2 <PWMDRAWER_enuInit+0x106>
    73f6:	9a 83       	std	Y+2, r25	; 0x02
    73f8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(3);
}
    73fa:	2f 96       	adiw	r28, 0x0f	; 15
    73fc:	0f b6       	in	r0, 0x3f	; 63
    73fe:	f8 94       	cli
    7400:	de bf       	out	0x3e, r29	; 62
    7402:	0f be       	out	0x3f, r0	; 63
    7404:	cd bf       	out	0x3d, r28	; 61
    7406:	cf 91       	pop	r28
    7408:	df 91       	pop	r29
    740a:	08 95       	ret

0000740c <PWMDRAWER_DrawDC_FREQ>:

ES_t PWMDRAWER_DrawDC_FREQ(void){
    740c:	df 93       	push	r29
    740e:	cf 93       	push	r28
    7410:	cd b7       	in	r28, 0x3d	; 61
    7412:	de b7       	in	r29, 0x3e	; 62
    7414:	ab 97       	sbiw	r28, 0x2b	; 43
    7416:	0f b6       	in	r0, 0x3f	; 63
    7418:	f8 94       	cli
    741a:	de bf       	out	0x3e, r29	; 62
    741c:	0f be       	out	0x3f, r0	; 63
    741e:	cd bf       	out	0x3d, r28	; 61
	ICU_vidStartCapture();
    7420:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <ICU_vidStartCapture>
	ICU_vidCalculatePWMParams();
    7424:	0e 94 3e 16 	call	0x2c7c	; 0x2c7c <ICU_vidCalculatePWMParams>
    7428:	80 e0       	ldi	r24, 0x00	; 0
    742a:	90 e0       	ldi	r25, 0x00	; 0
    742c:	a0 ef       	ldi	r26, 0xF0	; 240
    742e:	b1 e4       	ldi	r27, 0x41	; 65
    7430:	8f a3       	std	Y+39, r24	; 0x27
    7432:	98 a7       	std	Y+40, r25	; 0x28
    7434:	a9 a7       	std	Y+41, r26	; 0x29
    7436:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7438:	6f a1       	ldd	r22, Y+39	; 0x27
    743a:	78 a5       	ldd	r23, Y+40	; 0x28
    743c:	89 a5       	ldd	r24, Y+41	; 0x29
    743e:	9a a5       	ldd	r25, Y+42	; 0x2a
    7440:	20 e0       	ldi	r18, 0x00	; 0
    7442:	30 e0       	ldi	r19, 0x00	; 0
    7444:	4a e7       	ldi	r20, 0x7A	; 122
    7446:	55 e4       	ldi	r21, 0x45	; 69
    7448:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    744c:	dc 01       	movw	r26, r24
    744e:	cb 01       	movw	r24, r22
    7450:	8b a3       	std	Y+35, r24	; 0x23
    7452:	9c a3       	std	Y+36, r25	; 0x24
    7454:	ad a3       	std	Y+37, r26	; 0x25
    7456:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    7458:	6b a1       	ldd	r22, Y+35	; 0x23
    745a:	7c a1       	ldd	r23, Y+36	; 0x24
    745c:	8d a1       	ldd	r24, Y+37	; 0x25
    745e:	9e a1       	ldd	r25, Y+38	; 0x26
    7460:	20 e0       	ldi	r18, 0x00	; 0
    7462:	30 e0       	ldi	r19, 0x00	; 0
    7464:	40 e8       	ldi	r20, 0x80	; 128
    7466:	5f e3       	ldi	r21, 0x3F	; 63
    7468:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    746c:	88 23       	and	r24, r24
    746e:	2c f4       	brge	.+10     	; 0x747a <PWMDRAWER_DrawDC_FREQ+0x6e>
		__ticks = 1;
    7470:	81 e0       	ldi	r24, 0x01	; 1
    7472:	90 e0       	ldi	r25, 0x00	; 0
    7474:	9a a3       	std	Y+34, r25	; 0x22
    7476:	89 a3       	std	Y+33, r24	; 0x21
    7478:	3f c0       	rjmp	.+126    	; 0x74f8 <PWMDRAWER_DrawDC_FREQ+0xec>
	else if (__tmp > 65535)
    747a:	6b a1       	ldd	r22, Y+35	; 0x23
    747c:	7c a1       	ldd	r23, Y+36	; 0x24
    747e:	8d a1       	ldd	r24, Y+37	; 0x25
    7480:	9e a1       	ldd	r25, Y+38	; 0x26
    7482:	20 e0       	ldi	r18, 0x00	; 0
    7484:	3f ef       	ldi	r19, 0xFF	; 255
    7486:	4f e7       	ldi	r20, 0x7F	; 127
    7488:	57 e4       	ldi	r21, 0x47	; 71
    748a:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    748e:	18 16       	cp	r1, r24
    7490:	4c f5       	brge	.+82     	; 0x74e4 <PWMDRAWER_DrawDC_FREQ+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7492:	6f a1       	ldd	r22, Y+39	; 0x27
    7494:	78 a5       	ldd	r23, Y+40	; 0x28
    7496:	89 a5       	ldd	r24, Y+41	; 0x29
    7498:	9a a5       	ldd	r25, Y+42	; 0x2a
    749a:	20 e0       	ldi	r18, 0x00	; 0
    749c:	30 e0       	ldi	r19, 0x00	; 0
    749e:	40 e2       	ldi	r20, 0x20	; 32
    74a0:	51 e4       	ldi	r21, 0x41	; 65
    74a2:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    74a6:	dc 01       	movw	r26, r24
    74a8:	cb 01       	movw	r24, r22
    74aa:	bc 01       	movw	r22, r24
    74ac:	cd 01       	movw	r24, r26
    74ae:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    74b2:	dc 01       	movw	r26, r24
    74b4:	cb 01       	movw	r24, r22
    74b6:	9a a3       	std	Y+34, r25	; 0x22
    74b8:	89 a3       	std	Y+33, r24	; 0x21
    74ba:	0f c0       	rjmp	.+30     	; 0x74da <PWMDRAWER_DrawDC_FREQ+0xce>
    74bc:	80 e9       	ldi	r24, 0x90	; 144
    74be:	91 e0       	ldi	r25, 0x01	; 1
    74c0:	98 a3       	std	Y+32, r25	; 0x20
    74c2:	8f 8f       	std	Y+31, r24	; 0x1f
    74c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    74c6:	98 a1       	ldd	r25, Y+32	; 0x20
    74c8:	01 97       	sbiw	r24, 0x01	; 1
    74ca:	f1 f7       	brne	.-4      	; 0x74c8 <PWMDRAWER_DrawDC_FREQ+0xbc>
    74cc:	98 a3       	std	Y+32, r25	; 0x20
    74ce:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    74d0:	89 a1       	ldd	r24, Y+33	; 0x21
    74d2:	9a a1       	ldd	r25, Y+34	; 0x22
    74d4:	01 97       	sbiw	r24, 0x01	; 1
    74d6:	9a a3       	std	Y+34, r25	; 0x22
    74d8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    74da:	89 a1       	ldd	r24, Y+33	; 0x21
    74dc:	9a a1       	ldd	r25, Y+34	; 0x22
    74de:	00 97       	sbiw	r24, 0x00	; 0
    74e0:	69 f7       	brne	.-38     	; 0x74bc <PWMDRAWER_DrawDC_FREQ+0xb0>
    74e2:	14 c0       	rjmp	.+40     	; 0x750c <PWMDRAWER_DrawDC_FREQ+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    74e4:	6b a1       	ldd	r22, Y+35	; 0x23
    74e6:	7c a1       	ldd	r23, Y+36	; 0x24
    74e8:	8d a1       	ldd	r24, Y+37	; 0x25
    74ea:	9e a1       	ldd	r25, Y+38	; 0x26
    74ec:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    74f0:	dc 01       	movw	r26, r24
    74f2:	cb 01       	movw	r24, r22
    74f4:	9a a3       	std	Y+34, r25	; 0x22
    74f6:	89 a3       	std	Y+33, r24	; 0x21
    74f8:	89 a1       	ldd	r24, Y+33	; 0x21
    74fa:	9a a1       	ldd	r25, Y+34	; 0x22
    74fc:	9e 8f       	std	Y+30, r25	; 0x1e
    74fe:	8d 8f       	std	Y+29, r24	; 0x1d
    7500:	8d 8d       	ldd	r24, Y+29	; 0x1d
    7502:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7504:	01 97       	sbiw	r24, 0x01	; 1
    7506:	f1 f7       	brne	.-4      	; 0x7504 <PWMDRAWER_DrawDC_FREQ+0xf8>
    7508:	9e 8f       	std	Y+30, r25	; 0x1e
    750a:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(30);
	GLCD_enuSetAddress(0);
    750c:	80 e0       	ldi	r24, 0x00	; 0
    750e:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSetPage(0);
    7512:	80 e0       	ldi	r24, 0x00	; 0
    7514:	90 e0       	ldi	r25, 0x00	; 0
    7516:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSendString("frequency");
    751a:	80 e6       	ldi	r24, 0x60	; 96
    751c:	90 e0       	ldi	r25, 0x00	; 0
    751e:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
	GLCD_enuSetPage(1);
    7522:	81 e0       	ldi	r24, 0x01	; 1
    7524:	90 e0       	ldi	r25, 0x00	; 0
    7526:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSendString("=");
    752a:	8a e6       	ldi	r24, 0x6A	; 106
    752c:	90 e0       	ldi	r25, 0x00	; 0
    752e:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
	GLCD_enuSetPage(2);
    7532:	82 e0       	ldi	r24, 0x02	; 2
    7534:	90 e0       	ldi	r25, 0x00	; 0
    7536:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_DisplayNum(ICU_u16GetFrequency());
    753a:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <ICU_u16GetFrequency>
    753e:	0e 94 23 39 	call	0x7246	; 0x7246 <GLCD_DisplayNum>
    7542:	80 e0       	ldi	r24, 0x00	; 0
    7544:	90 e0       	ldi	r25, 0x00	; 0
    7546:	a0 ef       	ldi	r26, 0xF0	; 240
    7548:	b1 e4       	ldi	r27, 0x41	; 65
    754a:	89 8f       	std	Y+25, r24	; 0x19
    754c:	9a 8f       	std	Y+26, r25	; 0x1a
    754e:	ab 8f       	std	Y+27, r26	; 0x1b
    7550:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7552:	69 8d       	ldd	r22, Y+25	; 0x19
    7554:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7556:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7558:	9c 8d       	ldd	r25, Y+28	; 0x1c
    755a:	20 e0       	ldi	r18, 0x00	; 0
    755c:	30 e0       	ldi	r19, 0x00	; 0
    755e:	4a e7       	ldi	r20, 0x7A	; 122
    7560:	55 e4       	ldi	r21, 0x45	; 69
    7562:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    7566:	dc 01       	movw	r26, r24
    7568:	cb 01       	movw	r24, r22
    756a:	8d 8b       	std	Y+21, r24	; 0x15
    756c:	9e 8b       	std	Y+22, r25	; 0x16
    756e:	af 8b       	std	Y+23, r26	; 0x17
    7570:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    7572:	6d 89       	ldd	r22, Y+21	; 0x15
    7574:	7e 89       	ldd	r23, Y+22	; 0x16
    7576:	8f 89       	ldd	r24, Y+23	; 0x17
    7578:	98 8d       	ldd	r25, Y+24	; 0x18
    757a:	20 e0       	ldi	r18, 0x00	; 0
    757c:	30 e0       	ldi	r19, 0x00	; 0
    757e:	40 e8       	ldi	r20, 0x80	; 128
    7580:	5f e3       	ldi	r21, 0x3F	; 63
    7582:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    7586:	88 23       	and	r24, r24
    7588:	2c f4       	brge	.+10     	; 0x7594 <PWMDRAWER_DrawDC_FREQ+0x188>
		__ticks = 1;
    758a:	81 e0       	ldi	r24, 0x01	; 1
    758c:	90 e0       	ldi	r25, 0x00	; 0
    758e:	9c 8b       	std	Y+20, r25	; 0x14
    7590:	8b 8b       	std	Y+19, r24	; 0x13
    7592:	3f c0       	rjmp	.+126    	; 0x7612 <PWMDRAWER_DrawDC_FREQ+0x206>
	else if (__tmp > 65535)
    7594:	6d 89       	ldd	r22, Y+21	; 0x15
    7596:	7e 89       	ldd	r23, Y+22	; 0x16
    7598:	8f 89       	ldd	r24, Y+23	; 0x17
    759a:	98 8d       	ldd	r25, Y+24	; 0x18
    759c:	20 e0       	ldi	r18, 0x00	; 0
    759e:	3f ef       	ldi	r19, 0xFF	; 255
    75a0:	4f e7       	ldi	r20, 0x7F	; 127
    75a2:	57 e4       	ldi	r21, 0x47	; 71
    75a4:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    75a8:	18 16       	cp	r1, r24
    75aa:	4c f5       	brge	.+82     	; 0x75fe <PWMDRAWER_DrawDC_FREQ+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    75ac:	69 8d       	ldd	r22, Y+25	; 0x19
    75ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    75b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    75b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    75b4:	20 e0       	ldi	r18, 0x00	; 0
    75b6:	30 e0       	ldi	r19, 0x00	; 0
    75b8:	40 e2       	ldi	r20, 0x20	; 32
    75ba:	51 e4       	ldi	r21, 0x41	; 65
    75bc:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    75c0:	dc 01       	movw	r26, r24
    75c2:	cb 01       	movw	r24, r22
    75c4:	bc 01       	movw	r22, r24
    75c6:	cd 01       	movw	r24, r26
    75c8:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    75cc:	dc 01       	movw	r26, r24
    75ce:	cb 01       	movw	r24, r22
    75d0:	9c 8b       	std	Y+20, r25	; 0x14
    75d2:	8b 8b       	std	Y+19, r24	; 0x13
    75d4:	0f c0       	rjmp	.+30     	; 0x75f4 <PWMDRAWER_DrawDC_FREQ+0x1e8>
    75d6:	80 e9       	ldi	r24, 0x90	; 144
    75d8:	91 e0       	ldi	r25, 0x01	; 1
    75da:	9a 8b       	std	Y+18, r25	; 0x12
    75dc:	89 8b       	std	Y+17, r24	; 0x11
    75de:	89 89       	ldd	r24, Y+17	; 0x11
    75e0:	9a 89       	ldd	r25, Y+18	; 0x12
    75e2:	01 97       	sbiw	r24, 0x01	; 1
    75e4:	f1 f7       	brne	.-4      	; 0x75e2 <PWMDRAWER_DrawDC_FREQ+0x1d6>
    75e6:	9a 8b       	std	Y+18, r25	; 0x12
    75e8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    75ea:	8b 89       	ldd	r24, Y+19	; 0x13
    75ec:	9c 89       	ldd	r25, Y+20	; 0x14
    75ee:	01 97       	sbiw	r24, 0x01	; 1
    75f0:	9c 8b       	std	Y+20, r25	; 0x14
    75f2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    75f4:	8b 89       	ldd	r24, Y+19	; 0x13
    75f6:	9c 89       	ldd	r25, Y+20	; 0x14
    75f8:	00 97       	sbiw	r24, 0x00	; 0
    75fa:	69 f7       	brne	.-38     	; 0x75d6 <PWMDRAWER_DrawDC_FREQ+0x1ca>
    75fc:	14 c0       	rjmp	.+40     	; 0x7626 <PWMDRAWER_DrawDC_FREQ+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    75fe:	6d 89       	ldd	r22, Y+21	; 0x15
    7600:	7e 89       	ldd	r23, Y+22	; 0x16
    7602:	8f 89       	ldd	r24, Y+23	; 0x17
    7604:	98 8d       	ldd	r25, Y+24	; 0x18
    7606:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    760a:	dc 01       	movw	r26, r24
    760c:	cb 01       	movw	r24, r22
    760e:	9c 8b       	std	Y+20, r25	; 0x14
    7610:	8b 8b       	std	Y+19, r24	; 0x13
    7612:	8b 89       	ldd	r24, Y+19	; 0x13
    7614:	9c 89       	ldd	r25, Y+20	; 0x14
    7616:	98 8b       	std	Y+16, r25	; 0x10
    7618:	8f 87       	std	Y+15, r24	; 0x0f
    761a:	8f 85       	ldd	r24, Y+15	; 0x0f
    761c:	98 89       	ldd	r25, Y+16	; 0x10
    761e:	01 97       	sbiw	r24, 0x01	; 1
    7620:	f1 f7       	brne	.-4      	; 0x761e <PWMDRAWER_DrawDC_FREQ+0x212>
    7622:	98 8b       	std	Y+16, r25	; 0x10
    7624:	8f 87       	std	Y+15, r24	; 0x0f
    7626:	80 e0       	ldi	r24, 0x00	; 0
    7628:	90 e0       	ldi	r25, 0x00	; 0
    762a:	a0 ef       	ldi	r26, 0xF0	; 240
    762c:	b1 e4       	ldi	r27, 0x41	; 65
    762e:	8b 87       	std	Y+11, r24	; 0x0b
    7630:	9c 87       	std	Y+12, r25	; 0x0c
    7632:	ad 87       	std	Y+13, r26	; 0x0d
    7634:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7636:	6b 85       	ldd	r22, Y+11	; 0x0b
    7638:	7c 85       	ldd	r23, Y+12	; 0x0c
    763a:	8d 85       	ldd	r24, Y+13	; 0x0d
    763c:	9e 85       	ldd	r25, Y+14	; 0x0e
    763e:	20 e0       	ldi	r18, 0x00	; 0
    7640:	30 e0       	ldi	r19, 0x00	; 0
    7642:	4a e7       	ldi	r20, 0x7A	; 122
    7644:	55 e4       	ldi	r21, 0x45	; 69
    7646:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    764a:	dc 01       	movw	r26, r24
    764c:	cb 01       	movw	r24, r22
    764e:	8f 83       	std	Y+7, r24	; 0x07
    7650:	98 87       	std	Y+8, r25	; 0x08
    7652:	a9 87       	std	Y+9, r26	; 0x09
    7654:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7656:	6f 81       	ldd	r22, Y+7	; 0x07
    7658:	78 85       	ldd	r23, Y+8	; 0x08
    765a:	89 85       	ldd	r24, Y+9	; 0x09
    765c:	9a 85       	ldd	r25, Y+10	; 0x0a
    765e:	20 e0       	ldi	r18, 0x00	; 0
    7660:	30 e0       	ldi	r19, 0x00	; 0
    7662:	40 e8       	ldi	r20, 0x80	; 128
    7664:	5f e3       	ldi	r21, 0x3F	; 63
    7666:	0e 94 77 04 	call	0x8ee	; 0x8ee <__ltsf2>
    766a:	88 23       	and	r24, r24
    766c:	2c f4       	brge	.+10     	; 0x7678 <PWMDRAWER_DrawDC_FREQ+0x26c>
		__ticks = 1;
    766e:	81 e0       	ldi	r24, 0x01	; 1
    7670:	90 e0       	ldi	r25, 0x00	; 0
    7672:	9e 83       	std	Y+6, r25	; 0x06
    7674:	8d 83       	std	Y+5, r24	; 0x05
    7676:	3f c0       	rjmp	.+126    	; 0x76f6 <PWMDRAWER_DrawDC_FREQ+0x2ea>
	else if (__tmp > 65535)
    7678:	6f 81       	ldd	r22, Y+7	; 0x07
    767a:	78 85       	ldd	r23, Y+8	; 0x08
    767c:	89 85       	ldd	r24, Y+9	; 0x09
    767e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7680:	20 e0       	ldi	r18, 0x00	; 0
    7682:	3f ef       	ldi	r19, 0xFF	; 255
    7684:	4f e7       	ldi	r20, 0x7F	; 127
    7686:	57 e4       	ldi	r21, 0x47	; 71
    7688:	0e 94 17 04 	call	0x82e	; 0x82e <__gtsf2>
    768c:	18 16       	cp	r1, r24
    768e:	4c f5       	brge	.+82     	; 0x76e2 <PWMDRAWER_DrawDC_FREQ+0x2d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7690:	6b 85       	ldd	r22, Y+11	; 0x0b
    7692:	7c 85       	ldd	r23, Y+12	; 0x0c
    7694:	8d 85       	ldd	r24, Y+13	; 0x0d
    7696:	9e 85       	ldd	r25, Y+14	; 0x0e
    7698:	20 e0       	ldi	r18, 0x00	; 0
    769a:	30 e0       	ldi	r19, 0x00	; 0
    769c:	40 e2       	ldi	r20, 0x20	; 32
    769e:	51 e4       	ldi	r21, 0x41	; 65
    76a0:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
    76a4:	dc 01       	movw	r26, r24
    76a6:	cb 01       	movw	r24, r22
    76a8:	bc 01       	movw	r22, r24
    76aa:	cd 01       	movw	r24, r26
    76ac:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    76b0:	dc 01       	movw	r26, r24
    76b2:	cb 01       	movw	r24, r22
    76b4:	9e 83       	std	Y+6, r25	; 0x06
    76b6:	8d 83       	std	Y+5, r24	; 0x05
    76b8:	0f c0       	rjmp	.+30     	; 0x76d8 <PWMDRAWER_DrawDC_FREQ+0x2cc>
    76ba:	80 e9       	ldi	r24, 0x90	; 144
    76bc:	91 e0       	ldi	r25, 0x01	; 1
    76be:	9c 83       	std	Y+4, r25	; 0x04
    76c0:	8b 83       	std	Y+3, r24	; 0x03
    76c2:	8b 81       	ldd	r24, Y+3	; 0x03
    76c4:	9c 81       	ldd	r25, Y+4	; 0x04
    76c6:	01 97       	sbiw	r24, 0x01	; 1
    76c8:	f1 f7       	brne	.-4      	; 0x76c6 <PWMDRAWER_DrawDC_FREQ+0x2ba>
    76ca:	9c 83       	std	Y+4, r25	; 0x04
    76cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    76ce:	8d 81       	ldd	r24, Y+5	; 0x05
    76d0:	9e 81       	ldd	r25, Y+6	; 0x06
    76d2:	01 97       	sbiw	r24, 0x01	; 1
    76d4:	9e 83       	std	Y+6, r25	; 0x06
    76d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    76d8:	8d 81       	ldd	r24, Y+5	; 0x05
    76da:	9e 81       	ldd	r25, Y+6	; 0x06
    76dc:	00 97       	sbiw	r24, 0x00	; 0
    76de:	69 f7       	brne	.-38     	; 0x76ba <PWMDRAWER_DrawDC_FREQ+0x2ae>
    76e0:	14 c0       	rjmp	.+40     	; 0x770a <PWMDRAWER_DrawDC_FREQ+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    76e2:	6f 81       	ldd	r22, Y+7	; 0x07
    76e4:	78 85       	ldd	r23, Y+8	; 0x08
    76e6:	89 85       	ldd	r24, Y+9	; 0x09
    76e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    76ea:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    76ee:	dc 01       	movw	r26, r24
    76f0:	cb 01       	movw	r24, r22
    76f2:	9e 83       	std	Y+6, r25	; 0x06
    76f4:	8d 83       	std	Y+5, r24	; 0x05
    76f6:	8d 81       	ldd	r24, Y+5	; 0x05
    76f8:	9e 81       	ldd	r25, Y+6	; 0x06
    76fa:	9a 83       	std	Y+2, r25	; 0x02
    76fc:	89 83       	std	Y+1, r24	; 0x01
    76fe:	89 81       	ldd	r24, Y+1	; 0x01
    7700:	9a 81       	ldd	r25, Y+2	; 0x02
    7702:	01 97       	sbiw	r24, 0x01	; 1
    7704:	f1 f7       	brne	.-4      	; 0x7702 <PWMDRAWER_DrawDC_FREQ+0x2f6>
    7706:	9a 83       	std	Y+2, r25	; 0x02
    7708:	89 83       	std	Y+1, r24	; 0x01
//	GLCD_enuSetPage(2);
//	GLCD_enuSendString("dc=");
//	GLCD_DisplayNum(ICU_u8GetDutyCycle());
	_delay_ms(30);

}
    770a:	ab 96       	adiw	r28, 0x2b	; 43
    770c:	0f b6       	in	r0, 0x3f	; 63
    770e:	f8 94       	cli
    7710:	de bf       	out	0x3e, r29	; 62
    7712:	0f be       	out	0x3f, r0	; 63
    7714:	cd bf       	out	0x3d, r28	; 61
    7716:	cf 91       	pop	r28
    7718:	df 91       	pop	r29
    771a:	08 95       	ret

0000771c <PWMDRAWER_DrawGLCD>:
ES_t PWMDRAWER_DrawGLCD(void){
    771c:	df 93       	push	r29
    771e:	cf 93       	push	r28
    7720:	cd b7       	in	r28, 0x3d	; 61
    7722:	de b7       	in	r29, 0x3e	; 62
	GLCD_enuInit();
    7724:	0e 94 4a 1c 	call	0x3894	; 0x3894 <GLCD_enuInit>
	ICU_vidInit();
    7728:	0e 94 1d 16 	call	0x2c3a	; 0x2c3a <ICU_vidInit>
	GLCD_enuSetAddress(0);
    772c:	80 e0       	ldi	r24, 0x00	; 0
    772e:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSetPage(0);
    7732:	80 e0       	ldi	r24, 0x00	; 0
    7734:	90 e0       	ldi	r25, 0x00	; 0
    7736:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSendString("frequency = ");
    773a:	8c e6       	ldi	r24, 0x6C	; 108
    773c:	90 e0       	ldi	r25, 0x00	; 0
    773e:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
	GLCD_enuSetAddress(90);
    7742:	8a e5       	ldi	r24, 0x5A	; 90
    7744:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSetPage(0);
    7748:	80 e0       	ldi	r24, 0x00	; 0
    774a:	90 e0       	ldi	r25, 0x00	; 0
    774c:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSendString("khz");
    7750:	89 e7       	ldi	r24, 0x79	; 121
    7752:	90 e0       	ldi	r25, 0x00	; 0
    7754:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
	GLCD_enuSetPage(2);
    7758:	82 e0       	ldi	r24, 0x02	; 2
    775a:	90 e0       	ldi	r25, 0x00	; 0
    775c:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSetAddress(1);
    7760:	81 e0       	ldi	r24, 0x01	; 1
    7762:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSendString("dc = ");
    7766:	8d e7       	ldi	r24, 0x7D	; 125
    7768:	90 e0       	ldi	r25, 0x00	; 0
    776a:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
	ICU_vidStartCapture();
    776e:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <ICU_vidStartCapture>
	GIE_vidEnable();
    7772:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <GIE_vidEnable>
	while(1){
	ICU_vidCalculatePWMParams();
    7776:	0e 94 3e 16 	call	0x2c7c	; 0x2c7c <ICU_vidCalculatePWMParams>
	GLCD_enuSetAddress(63);
    777a:	8f e3       	ldi	r24, 0x3F	; 63
    777c:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_enuSetPage(0);
    7780:	80 e0       	ldi	r24, 0x00	; 0
    7782:	90 e0       	ldi	r25, 0x00	; 0
    7784:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_DisplayNum(ICU_u16GetFrequency());
    7788:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <ICU_u16GetFrequency>
    778c:	0e 94 23 39 	call	0x7246	; 0x7246 <GLCD_DisplayNum>
	GLCD_enuSetPage(2);
    7790:	82 e0       	ldi	r24, 0x02	; 2
    7792:	90 e0       	ldi	r25, 0x00	; 0
    7794:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSetAddress(30);
    7798:	8e e1       	ldi	r24, 0x1E	; 30
    779a:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
	GLCD_DisplayNum(ICU_u8GetDutyCycle());
    779e:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <ICU_u8GetDutyCycle>
    77a2:	88 2f       	mov	r24, r24
    77a4:	90 e0       	ldi	r25, 0x00	; 0
    77a6:	0e 94 23 39 	call	0x7246	; 0x7246 <GLCD_DisplayNum>
	ICU_vidStartCapture();
    77aa:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <ICU_vidStartCapture>
	GLCD_enuSetPage(6);
    77ae:	86 e0       	ldi	r24, 0x06	; 6
    77b0:	90 e0       	ldi	r25, 0x00	; 0
    77b2:	0e 94 8f 21 	call	0x431e	; 0x431e <GLCD_enuSetPage>
	GLCD_enuSetAddress(0);
    77b6:	80 e0       	ldi	r24, 0x00	; 0
    77b8:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <GLCD_enuSetAddress>
//	GLCD_enuSendString("%");
//	GLCD_DisplayNum(ICU_u16GetFrequency());
	GLCD_enuSendString("HFLRHFLRHFLRHFLRHFLRHFLRH");
    77bc:	83 e8       	ldi	r24, 0x83	; 131
    77be:	90 e0       	ldi	r25, 0x00	; 0
    77c0:	0e 94 02 39 	call	0x7204	; 0x7204 <GLCD_enuSendString>
    77c4:	d8 cf       	rjmp	.-80     	; 0x7776 <PWMDRAWER_DrawGLCD+0x5a>

000077c6 <PWMDRAWER_DrawLCD>:

	}

}
ES_t PWMDRAWER_DrawLCD(void){
    77c6:	df 93       	push	r29
    77c8:	cf 93       	push	r28
    77ca:	00 d0       	rcall	.+0      	; 0x77cc <PWMDRAWER_DrawLCD+0x6>
    77cc:	0f 92       	push	r0
    77ce:	cd b7       	in	r28, 0x3d	; 61
    77d0:	de b7       	in	r29, 0x3e	; 62
	u8 duty;
		u16 freq;
		ICU_vidInit();
    77d2:	0e 94 1d 16 	call	0x2c3a	; 0x2c3a <ICU_vidInit>
		LCD_enuInit();
    77d6:	0e 94 61 12 	call	0x24c2	; 0x24c2 <LCD_enuInit>
		LCD_enuSendString("Duty = ");
    77da:	8d e9       	ldi	r24, 0x9D	; 157
    77dc:	90 e0       	ldi	r25, 0x00	; 0
    77de:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <LCD_enuSendString>
		LCD_enuGotoXY(2,1);
    77e2:	82 e0       	ldi	r24, 0x02	; 2
    77e4:	61 e0       	ldi	r22, 0x01	; 1
    77e6:	0e 94 0b 14 	call	0x2816	; 0x2816 <LCD_enuGotoXY>
		LCD_enuSendString("Freq = ");
    77ea:	85 ea       	ldi	r24, 0xA5	; 165
    77ec:	90 e0       	ldi	r25, 0x00	; 0
    77ee:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <LCD_enuSendString>
//		LCD_enuWriteIntegarNum(-180);

		GIE_vidEnable();
    77f2:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <GIE_vidEnable>
		ICU_vidStartCapture();
    77f6:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <ICU_vidStartCapture>
		while(1)
		{
			ICU_vidCalculatePWMParams();
    77fa:	0e 94 3e 16 	call	0x2c7c	; 0x2c7c <ICU_vidCalculatePWMParams>
			duty = ICU_u8GetDutyCycle();
    77fe:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <ICU_u8GetDutyCycle>
    7802:	8b 83       	std	Y+3, r24	; 0x03
			*((u8*)0x35)= duty;
    7804:	e5 e3       	ldi	r30, 0x35	; 53
    7806:	f0 e0       	ldi	r31, 0x00	; 0
    7808:	8b 81       	ldd	r24, Y+3	; 0x03
    780a:	80 83       	st	Z, r24
			freq = ICU_u16GetFrequency();
    780c:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <ICU_u16GetFrequency>
    7810:	9a 83       	std	Y+2, r25	; 0x02
    7812:	89 83       	std	Y+1, r24	; 0x01
			*((u8*)0x34)= freq;
    7814:	e4 e3       	ldi	r30, 0x34	; 52
    7816:	f0 e0       	ldi	r31, 0x00	; 0
    7818:	89 81       	ldd	r24, Y+1	; 0x01
    781a:	80 83       	st	Z, r24

			if (duty < 100)
    781c:	8b 81       	ldd	r24, Y+3	; 0x03
    781e:	84 36       	cpi	r24, 0x64	; 100
    7820:	60 f7       	brcc	.-40     	; 0x77fa <PWMDRAWER_DrawLCD+0x34>
			{
				LCD_enuGotoXY(1, 8);
    7822:	81 e0       	ldi	r24, 0x01	; 1
    7824:	68 e0       	ldi	r22, 0x08	; 8
    7826:	0e 94 0b 14 	call	0x2816	; 0x2816 <LCD_enuGotoXY>
				LCD_enuSendString("   %");
    782a:	8d ea       	ldi	r24, 0xAD	; 173
    782c:	90 e0       	ldi	r25, 0x00	; 0
    782e:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <LCD_enuSendString>
				LCD_enuGotoXY(1, 8);
    7832:	81 e0       	ldi	r24, 0x01	; 1
    7834:	68 e0       	ldi	r22, 0x08	; 8
    7836:	0e 94 0b 14 	call	0x2816	; 0x2816 <LCD_enuGotoXY>
//				LCD_enuWriteIntegarNum(duty);
				LCD_enuGotoXY(2, 8);
    783a:	82 e0       	ldi	r24, 0x02	; 2
    783c:	68 e0       	ldi	r22, 0x08	; 8
    783e:	0e 94 0b 14 	call	0x2816	; 0x2816 <LCD_enuGotoXY>
				LCD_enuSendString("    Hz");
    7842:	82 eb       	ldi	r24, 0xB2	; 178
    7844:	90 e0       	ldi	r25, 0x00	; 0
    7846:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <LCD_enuSendString>
				LCD_enuGotoXY(2, 8);
    784a:	82 e0       	ldi	r24, 0x02	; 2
    784c:	68 e0       	ldi	r22, 0x08	; 8
    784e:	0e 94 0b 14 	call	0x2816	; 0x2816 <LCD_enuGotoXY>
//				LCD_enuWriteIntegarNum(freq);

				ICU_vidStartCapture();
    7852:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <ICU_vidStartCapture>
    7856:	d1 cf       	rjmp	.-94     	; 0x77fa <PWMDRAWER_DrawLCD+0x34>

00007858 <main>:
// Define your continuous pattern




int main() {
    7858:	df 93       	push	r29
    785a:	cf 93       	push	r28
    785c:	cd b7       	in	r28, 0x3d	; 61
    785e:	de b7       	in	r29, 0x3e	; 62
//	PWMDRAWER_DrawLCD();
//	PWMDRAWER_DrawDC_FREQ();
//	GLCD_enuInit();
//
//	GLCD_enuSendString("HFLH");
	PWMDRAWER_DrawGLCD();
    7860:	0e 94 8e 3b 	call	0x771c	; 0x771c <PWMDRAWER_DrawGLCD>
    7864:	80 e0       	ldi	r24, 0x00	; 0
    7866:	90 e0       	ldi	r25, 0x00	; 0

        // Introduce a delay or other logic as needed



}
    7868:	cf 91       	pop	r28
    786a:	df 91       	pop	r29
    786c:	08 95       	ret

0000786e <__mulsi3>:
    786e:	62 9f       	mul	r22, r18
    7870:	d0 01       	movw	r26, r0
    7872:	73 9f       	mul	r23, r19
    7874:	f0 01       	movw	r30, r0
    7876:	82 9f       	mul	r24, r18
    7878:	e0 0d       	add	r30, r0
    787a:	f1 1d       	adc	r31, r1
    787c:	64 9f       	mul	r22, r20
    787e:	e0 0d       	add	r30, r0
    7880:	f1 1d       	adc	r31, r1
    7882:	92 9f       	mul	r25, r18
    7884:	f0 0d       	add	r31, r0
    7886:	83 9f       	mul	r24, r19
    7888:	f0 0d       	add	r31, r0
    788a:	74 9f       	mul	r23, r20
    788c:	f0 0d       	add	r31, r0
    788e:	65 9f       	mul	r22, r21
    7890:	f0 0d       	add	r31, r0
    7892:	99 27       	eor	r25, r25
    7894:	72 9f       	mul	r23, r18
    7896:	b0 0d       	add	r27, r0
    7898:	e1 1d       	adc	r30, r1
    789a:	f9 1f       	adc	r31, r25
    789c:	63 9f       	mul	r22, r19
    789e:	b0 0d       	add	r27, r0
    78a0:	e1 1d       	adc	r30, r1
    78a2:	f9 1f       	adc	r31, r25
    78a4:	bd 01       	movw	r22, r26
    78a6:	cf 01       	movw	r24, r30
    78a8:	11 24       	eor	r1, r1
    78aa:	08 95       	ret

000078ac <__udivmodhi4>:
    78ac:	aa 1b       	sub	r26, r26
    78ae:	bb 1b       	sub	r27, r27
    78b0:	51 e1       	ldi	r21, 0x11	; 17
    78b2:	07 c0       	rjmp	.+14     	; 0x78c2 <__udivmodhi4_ep>

000078b4 <__udivmodhi4_loop>:
    78b4:	aa 1f       	adc	r26, r26
    78b6:	bb 1f       	adc	r27, r27
    78b8:	a6 17       	cp	r26, r22
    78ba:	b7 07       	cpc	r27, r23
    78bc:	10 f0       	brcs	.+4      	; 0x78c2 <__udivmodhi4_ep>
    78be:	a6 1b       	sub	r26, r22
    78c0:	b7 0b       	sbc	r27, r23

000078c2 <__udivmodhi4_ep>:
    78c2:	88 1f       	adc	r24, r24
    78c4:	99 1f       	adc	r25, r25
    78c6:	5a 95       	dec	r21
    78c8:	a9 f7       	brne	.-22     	; 0x78b4 <__udivmodhi4_loop>
    78ca:	80 95       	com	r24
    78cc:	90 95       	com	r25
    78ce:	bc 01       	movw	r22, r24
    78d0:	cd 01       	movw	r24, r26
    78d2:	08 95       	ret

000078d4 <__udivmodsi4>:
    78d4:	a1 e2       	ldi	r26, 0x21	; 33
    78d6:	1a 2e       	mov	r1, r26
    78d8:	aa 1b       	sub	r26, r26
    78da:	bb 1b       	sub	r27, r27
    78dc:	fd 01       	movw	r30, r26
    78de:	0d c0       	rjmp	.+26     	; 0x78fa <__udivmodsi4_ep>

000078e0 <__udivmodsi4_loop>:
    78e0:	aa 1f       	adc	r26, r26
    78e2:	bb 1f       	adc	r27, r27
    78e4:	ee 1f       	adc	r30, r30
    78e6:	ff 1f       	adc	r31, r31
    78e8:	a2 17       	cp	r26, r18
    78ea:	b3 07       	cpc	r27, r19
    78ec:	e4 07       	cpc	r30, r20
    78ee:	f5 07       	cpc	r31, r21
    78f0:	20 f0       	brcs	.+8      	; 0x78fa <__udivmodsi4_ep>
    78f2:	a2 1b       	sub	r26, r18
    78f4:	b3 0b       	sbc	r27, r19
    78f6:	e4 0b       	sbc	r30, r20
    78f8:	f5 0b       	sbc	r31, r21

000078fa <__udivmodsi4_ep>:
    78fa:	66 1f       	adc	r22, r22
    78fc:	77 1f       	adc	r23, r23
    78fe:	88 1f       	adc	r24, r24
    7900:	99 1f       	adc	r25, r25
    7902:	1a 94       	dec	r1
    7904:	69 f7       	brne	.-38     	; 0x78e0 <__udivmodsi4_loop>
    7906:	60 95       	com	r22
    7908:	70 95       	com	r23
    790a:	80 95       	com	r24
    790c:	90 95       	com	r25
    790e:	9b 01       	movw	r18, r22
    7910:	ac 01       	movw	r20, r24
    7912:	bd 01       	movw	r22, r26
    7914:	cf 01       	movw	r24, r30
    7916:	08 95       	ret

00007918 <__prologue_saves__>:
    7918:	2f 92       	push	r2
    791a:	3f 92       	push	r3
    791c:	4f 92       	push	r4
    791e:	5f 92       	push	r5
    7920:	6f 92       	push	r6
    7922:	7f 92       	push	r7
    7924:	8f 92       	push	r8
    7926:	9f 92       	push	r9
    7928:	af 92       	push	r10
    792a:	bf 92       	push	r11
    792c:	cf 92       	push	r12
    792e:	df 92       	push	r13
    7930:	ef 92       	push	r14
    7932:	ff 92       	push	r15
    7934:	0f 93       	push	r16
    7936:	1f 93       	push	r17
    7938:	cf 93       	push	r28
    793a:	df 93       	push	r29
    793c:	cd b7       	in	r28, 0x3d	; 61
    793e:	de b7       	in	r29, 0x3e	; 62
    7940:	ca 1b       	sub	r28, r26
    7942:	db 0b       	sbc	r29, r27
    7944:	0f b6       	in	r0, 0x3f	; 63
    7946:	f8 94       	cli
    7948:	de bf       	out	0x3e, r29	; 62
    794a:	0f be       	out	0x3f, r0	; 63
    794c:	cd bf       	out	0x3d, r28	; 61
    794e:	09 94       	ijmp

00007950 <__epilogue_restores__>:
    7950:	2a 88       	ldd	r2, Y+18	; 0x12
    7952:	39 88       	ldd	r3, Y+17	; 0x11
    7954:	48 88       	ldd	r4, Y+16	; 0x10
    7956:	5f 84       	ldd	r5, Y+15	; 0x0f
    7958:	6e 84       	ldd	r6, Y+14	; 0x0e
    795a:	7d 84       	ldd	r7, Y+13	; 0x0d
    795c:	8c 84       	ldd	r8, Y+12	; 0x0c
    795e:	9b 84       	ldd	r9, Y+11	; 0x0b
    7960:	aa 84       	ldd	r10, Y+10	; 0x0a
    7962:	b9 84       	ldd	r11, Y+9	; 0x09
    7964:	c8 84       	ldd	r12, Y+8	; 0x08
    7966:	df 80       	ldd	r13, Y+7	; 0x07
    7968:	ee 80       	ldd	r14, Y+6	; 0x06
    796a:	fd 80       	ldd	r15, Y+5	; 0x05
    796c:	0c 81       	ldd	r16, Y+4	; 0x04
    796e:	1b 81       	ldd	r17, Y+3	; 0x03
    7970:	aa 81       	ldd	r26, Y+2	; 0x02
    7972:	b9 81       	ldd	r27, Y+1	; 0x01
    7974:	ce 0f       	add	r28, r30
    7976:	d1 1d       	adc	r29, r1
    7978:	0f b6       	in	r0, 0x3f	; 63
    797a:	f8 94       	cli
    797c:	de bf       	out	0x3e, r29	; 62
    797e:	0f be       	out	0x3f, r0	; 63
    7980:	cd bf       	out	0x3d, r28	; 61
    7982:	ed 01       	movw	r28, r26
    7984:	08 95       	ret

00007986 <_exit>:
    7986:	f8 94       	cli

00007988 <__stop_program>:
    7988:	ff cf       	rjmp	.-2      	; 0x7988 <__stop_program>
